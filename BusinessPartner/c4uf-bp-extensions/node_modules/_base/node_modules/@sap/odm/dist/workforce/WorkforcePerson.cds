namespace sap.odm.workforce;

using { sap.odm.common.address.FormOfAddressCode } from '../common/address/FormOfAddressCodes.cds';
using { sap.odm.common.ScriptedObject } from '../common/ScriptCodes.cds';
using { sap.odm.common.address.AcademicTitleCode } from '../common/address/AcademicTitleCodes.cds';
using { sap.odm.common.address.FamilyNameSuffixCode } from '../common/address/FamilyNameSuffixCodes.cds';
using { sap.odm.common.address.FamilyNamePrefixCode } from '../common/address/FamilyNamePrefixCodes.cds';
using { sap.odm.common.LanguageCode } from '../common/LanguageCodes.cds';
using { sap.odm.common.address.PostalAddress } from '../common/address/PostalAddressTypes.cds';
using {
  sap.odm.workforce.common.AddressUsageCode,
  sap.odm.workforce.common.EmailUsageCode,
  sap.odm.workforce.common.PhoneUsageCode,
  sap.odm.workforce.common.WorkforcePersonPhotoTypeCode
} from './common/WorkforceCodelists.cds';
using {
  sap.odm.common.address.EmailAddress,
  sap.odm.common.address.PhoneNumber
} from '../common/address/CommunicationTypes.cds';
using { sap.odm.common.CountryCode } from '../common/CountryCodes.cds';
using {
  sap.odm.common.managed,
  sap.odm.common.cuid
} from '../common/aspects.cds';
using { sap.odm.common.URL } from '../common/types.cds';
using { sap.odm.dpp.TrackPurpose } from '../dpp/PurposeReference.cds';
using { sap.odm.workforce.SystemOfRecordKey } from './SystemOfRecordKey.cds';
using { sap.odm.workforce.WorkAssignment } from './WorkAssignment.cds';

/**
 * Indicates whether a user account exists in the source
 * system. Target systems may have different rules.
 */
type SourceUserAccount: {
  /**
   * User name of a workforce person in the source system.
   */
  @PersonalData.FieldSemantics: 'UserID'
  userName: String(100) not null;
};

/**
 * Personal details with a more restricted access that provide
 * additional information than the generic profile details.
 * Contains non-profile data that can change over time. Changes
 * can be checked through the managed aspect.
 */
type PersonalDetails: {
  /**
   * Picklist for form of address, aligned across SAP.
   */
  formOfAddress: FormOfAddressCode;
};

/**
 * Profile details of a workforce person.
 */
type ScriptedProfileDetails: ScriptedObject {
  /**
   * First name of a workforce person. In SAP S/4HANA, this field
   * has the length "CHAR40".
   */
  firstName: String(128);
  /**
   * Middle name of a workforce person.
   */
  middleName: String(128);
  /**
   * Last name of a workforce person.
   */
  lastName: String(128);
  /**
   * Name used to formally address a workforce person.
   */
  formalName: String(4000);
  /**
   * Abbreviation of a workforce person's name, mostly first
   * letters of first and last name.
   */
  initials: String(128);
  /**
   * Academic title of a workforce person.
   */
  academicTitle: AcademicTitleCode;
  /**
   * Additional academic title of a workforce person, e.g. Prof.
   * or PhD.
   */
  additionalAcademicTitle: AcademicTitleCode;
  /**
   * Suffix words for the family name of a workforce person, e.g.
   * junior, senior, III, PhD.
   */
  nameSuffix: FamilyNameSuffixCode;
  /**
   * Prefix words for the family name of a workforce person, e.g.
   * "Van der".
   */
  namePrefix: FamilyNamePrefixCode;
  /**
   * Birth name as written in the birth certificate, needed in
   * case of name changes during the lifetime of a workforce
   * person, e.g. due to marriage.
   */
  birthName: String(128);
  /**
   * If a workforce person has several first names, this first
   * name is the preferred name to be used in correspondence. The
   * preferred name is not always the first one.
   */
  preferredName: String(128);
  /**
   * First name of a workforce person to be used in business
   * correspondence.
   */
  businessFirstName: String(128);
  /**
   * Last name of a workforce person to be used in business
   * correspondence.
   */
  businessLastName: String(128);
  /**
   * Name of the partner of a workforce person.
   */
  partnerName: String(128);
  /**
   * Prefix words for the family name of the workforce person's
   * partner, e.g. "Van der".
   */
  partnerNamePrefix: FamilyNamePrefixCode;
  /**
   * Second last name of the workforce person; this concept is
   * mostly used in Spanish speaking countries, where it usually
   * refers to the mother's maiden name of a married woman.
   */
  secondLastName: String(128);
};

/**
 * Publicly available information about a workforce person.
 * Contains the preferred language for correspondence and an
 * array of the profile details in different scripts (Cyrillic,
 * Japanese etc.).
 */
type ProfileDetails: {
  /**
   * Language that is preferred by the workforce person for
   * correspondence.
   */
  nativePreferredLanguage: LanguageCode;
  /**
   * Array of profile details of a workforce person in different
   * scripts.
   */
  scriptedProfileDetails: many ScriptedProfileDetails;
};

type ScriptedPersonAddress: ScriptedObject, PostalAddress {};

/**
 * Home address of a workforce person with additional
 * information about the allowed use.
 */
type PrivateAddress: ScriptedPersonAddress {
  /**
   * Specifies the address usage, for example home, work.
   */
  usage: AddressUsageCode;
};

/**
 * Communication channel type email.
 */
type Email: {
  /**
   * Defines whether this communication channel is default.
   */
  isDefault: Boolean;
  /**
   * Current email address of the workforce person.
   */
  address: EmailAddress;
  /**
   * Specifies the email usage; can be further customized via
   * picklist.
   */
  usage: EmailUsageCode;
};

/**
 * Communication channel type phone.
 */
type Phone: {
  /**
   * Defines whether this communication channel is default.
   */
  isDefault: Boolean;
  /**
   * Current phone number of the workforce person.
   */
  number: PhoneNumber;
  /**
   * Country where the phone number of the workforce person is
   * registered.
   */
  country: CountryCode;
  /**
   * Specifies the phone usage.
   */
  usage: PhoneUsageCode;
};

/**
 * Stores remote URLs (static as well as streaming media
 * images).
 */
type Photo: managed {
  /**
   * URL of image, if isMediaStream = true then this is the
   * relative URL for callback API.
   */
  imageURL: URL not null;
  /**
   * Types of photo, should be either 1: Photo or 2: Thumbnail.
   */
  type: WorkforcePersonPhotoTypeCode;
  /**
   * Whether the photo is a streaming media images.
   */
  isMediaStream: Boolean;
};

/**
 * Person with a work agreement or relationship in form of a
 * work assignment; can be employees and contingent workers or
 * workers.
 */
@AuditLog.Operation.Delete: true
@AuditLog.Operation.Insert: true
@AuditLog.Operation.Read: true
@AuditLog.Operation.Update: true
@ODM.root: true
@PersonalData.EntitySemantics: 'DataSubject'
@odm.doc.alternateTerms: [ 'Employee' ]
@odm.doc.relatedGDT: 'Employee'
entity WorkforcePerson: cuid, TrackPurpose  {
  /**
   * External ID of a workforce person. Note that in SAP S/4HANA
   * the allowed length is CHAR60 (SAP HCM had only 20) and only
   * EC allows case sensitive.
   */
  @PersonalData.FieldSemantics: 'DataSubjectID'
  externalId: String(100) not null;
  /**
   * Information about a workforce persons user account in the
   * source system.
   */
  @PersonalData.IsPotentiallyPersonal: true
  userAccount: SourceUserAccount;
  /**
   * Basic personal information about a workforce person.
   */
  @PersonalData.IsPotentiallyPersonal: true
  @odm.temporalDate: true
  personalDetail: PersonalDetails;
  /**
   * Profile details about a person.
   */
  @PersonalData.IsPotentiallyPersonal: true
  @odm.temporalDate: true
  profileDetail: ProfileDetails;
  /**
   * Private addresses of a workforce person containing validity
   * periods.
   */
  @PersonalData.IsPotentiallyPersonal: true
  @odm.temporalDate: true
  privateAddresses: many PrivateAddress;
  /**
   * Email addresses of a workforce person.
   */
  @PersonalData.IsPotentiallyPersonal: true
  emails: many Email;
  /**
   * Phone numbers of a workforce person.
   */
  @PersonalData.IsPotentiallyPersonal: true
  phones: many Phone;
  /**
   * IDs or work assignments related to this workforce person
   * within given systems of record.
   */
  @PersonalData.IsPotentiallyPersonal: true
  systemOfRecordKeys: many SystemOfRecordKey;
  /**
   * Each work assignment represents a specific work relationship
   * to a company or legal entity.
   */
  @PersonalData.IsPotentiallyPersonal: true
  workAssignments: composition of many WorkAssignment;
  /**
   * Profile photos of a workforce person.
   */
  @PersonalData.IsPotentiallyPersonal: true
  photos: many Photo;
};
