namespace sap.odm.procurement;

using { sap.odm.procurement.SupplierPurchasingBlockingReasonCode } from './SupplierPurchasingBlockingReasonCodes.cds';
using { sap.odm.procurement.SupplierPostingBlockingReasonCode } from './SupplierPostingBlockingReasonCodes.cds';
using { sap.odm.procurement.SupplierPaymentBlockingReasonCode } from './SupplierPaymentBlockingReasonCodes.cds';
using { sap.odm.finance.payment.PaymentMethodCode } from '../finance/payment/PaymentMethodCodes.cds';
using { sap.odm.common.ShortString } from '../common/types.cds';
using { sap.odm.businesspartner.BusinessPartner } from '../businesspartner/BusinessPartner.cds';
using { sap.odm.common.Validity } from '../common/Validity.cds';
using { sap.odm.procurement.SupplierAccountingWithholdingTaxExemptionReasonCode } from './SupplierAccountingWithholdingTaxExemptionReasonCodes.cds';
using {
  sap.odm.procurement.s4.SupplierAccountingWithholdingTax as S4SupplierAccountingWithholdingTax,
  sap.odm.procurement.s4.SupplierAccountingInformation as S4SupplierAccountingInformation,
  sap.odm.procurement.s4.SupplierPurchasingArrangementFunction as S4SupplierPurchasingArrangementFunction,
  sap.odm.procurement.s4.SupplierPurchasingArrangement as S4SupplierPurchasingArrangement,
  sap.odm.procurement.s4.SupplierInformation as S4SupplierInformation
} from './s4/Supplier.cds';
using { sap.odm.procurement.SupplierAccountingWithholdingTaxTypeCode } from './SupplierAccountingWithholdingTaxTypeCodes.cds';
using { sap.odm.procurement.SupplierAccountingWithholdingTaxSubTypeCode } from './SupplierAccountingWithholdingTaxSubTypeCodes.cds';
using { sap.odm.common.managed } from '../common/aspects.cds';
using { sap.odm.orgunit.CompanyCodeId } from '../orgunit/CompanyCode.cds';
using { sap.odm.procurement.SupplierAccountingInvoiceSortingOrderCode } from './SupplierAccountingInvoiceSortingOrderCodes.cds';
using { sap.odm.procurement.SupplierPurchasingArrangementFunctionCode } from './SupplierPurchasingArrangementFunctionCodes.cds';
using { sap.odm.workforce.WorkforcePerson } from '../workforce/WorkforcePerson.cds';
using { sap.odm.common.CurrencyCode } from '../common/CurrencyCodes.cds';
using { sap.odm.procurement.SupplierPurchasingArrangementClassificationCode } from './SupplierPurchasingArrangementClassificationCodes.cds';
using { sap.odm.procurement.SupplierPurchasingArrangementCalculationSchemaCode } from './SupplierPurchasingArrangementCalculationSchemaCodes.cds';
using { sap.odm.common.IncotermsClassificationCode } from '../common/IncotermsClassificationCodes.cds';

/**
 * The settings for purchasing related blocking of the supplier and
 * its child entities.
 */
aspect PurchasingBlockingInformation {
  /**
   * Indicates if a purchase from a supplier is blocked.
   */
  isPurchasingBlocked: Boolean;
  /**
   * A code that represents the reason why purchasing 
   * from a supplier is blocked.
   */
  purchasingBlockingReason: SupplierPurchasingBlockingReasonCode;
};

/**
 * The settings for finance-related blocking of the supplier and
 * its child entities.
 */
aspect FinanceBlockingInformation {
  /**
   * Indicates if a posting to the supplier is
   * blocked.
   */
  isPostingBlocked: Boolean;
  /**
   * A code that represents the reason why a posting to the supplier is blocked.
   */
  postingBlockingReason: SupplierPostingBlockingReasonCode;
  /**
   * Indicates that a payment to the supplier is 
   * blocked.
   */
  isPaymentBlocked: Boolean;
  /**
   * A code that represents the reason why a payment to the supplier is blocked.
   */
  paymentBlockingReason: SupplierPaymentBlockingReasonCode;
};

/**
 * The payment methods of the supplier accounting entity.
 */
aspect SupplierAccountingPaymentMethod {
  /**
   * A code that represents the payment method.
   */
  key paymentMethod: PaymentMethodCode;
};

/**
 * The types of alternative payees.
 */
type SupplierAccountingAlternativePayeeTypeEnum: String(15) enum {
  /**
   * Indicates if the alternative payee is a business
   * partner entity.
   */
  businessPartner;
  /**
   * Indicates if the alternative payee is a supplier
   * entity.
   */
  supplier;
} ;

/**
 * Provides information of the alternative payee of an
 * accounting process.
 */
aspect SupplierAccountingAlternativePayee {
  /**
   * Name of the alternative payee which serves as a key.
   */
  key alternativePayeeName: ShortString;
  /**
   * The type of the alternative payee.
   */
  alternativePayeeType: SupplierAccountingAlternativePayeeTypeEnum;
  /**
   * The business partner that is the alternative payee.
   */
  alternativePayeeBusinessPartner: association to one BusinessPartner;
};

/**
 * The tax exemption issued by the tax authorities.
 */
@PersonalData.EntitySemantics: 'DataSubjectDetails'
aspect SupplierAccountingWithholdingTaxExemption: Validity  {
  /**
   * The number of the withholding exemption certificate issued by the tax
   * authorities.
   */
  @PersonalData.IsPotentiallyPersonal: true
  certificateNumber: String(15);
  /**
   * A code that represents the reason for the withholding tax exemption.
   */
  reason: SupplierAccountingWithholdingTaxExemptionReasonCode;
  /**
   * The percentage discounted by the tax exemption.
   */
  percentage: Decimal(5, 2);
};

/**
 * Taxes that are withheld from the tax authorities.
 */
@PersonalData.EntitySemantics: 'DataSubjectDetails'
aspect SupplierAccountingWithholdingTax: S4SupplierAccountingWithholdingTax  {
  /**
   * A code that represents the type of withholding tax.
   */
  key type: SupplierAccountingWithholdingTaxTypeCode;
  /**
   * A code that represents the sub-type of withholding tax.
   */
  subType: SupplierAccountingWithholdingTaxSubTypeCode;
  /**
   * The withholding tax number issued by the tax authorities.
   */
  @PersonalData.IsPotentiallyPersonal: true
  taxNumber: String(16);
  /**
   * The exemption from the withholding tax.
   */
  exemption: composition of one SupplierAccountingWithholdingTaxExemption;
};

/**
 * Accounting information of a supplier.
 */
@PersonalData.EntitySemantics: 'DataSubjectDetails'
aspect SupplierAccountingInformation: managed, FinanceBlockingInformation, S4SupplierAccountingInformation  {
  /**
   * An ID that represents the company code. The financial
   * accounting organization responsible for the accounting
   * information.
   */
  key companyCodeDisplayId: CompanyCodeId;
  /**
   * The account number at the supplier.
   */
  accountNumberAtSupplier: String(12);
  /**
   * The available payment methods for a supplier.
   */
  paymentMethods: composition of many SupplierAccountingPaymentMethod;
  /**
   * A code that represents the sorting order of invoices that belong to a supplier.
   */
  invoiceSortingOrder: SupplierAccountingInvoiceSortingOrderCode;
  /**
   * Indicates whether payments are made to a business partner other than 
   * the one to which the invoice was posted.
   */
  isAlternativePayeeUsed: Boolean;
  /**
   * The business partners that might receive
   * payments instead of the current supplier.
   */
  alternativePayees: composition of many SupplierAccountingAlternativePayee;
  /**
   * The responsible contact person for accounting issues
   * regarding this accounting information.
   */
  accountingClerk: association to one BusinessPartner;
  /**
   * Withhold taxes of the supplier.
   */
  withholdingTaxes: composition of many SupplierAccountingWithholdingTax;
  /**
   * Indicates if the entity is marked for deletion.
   */
  isMarkedForDeletion: Boolean;
};

/**
 * The type of function partner of
 * purchasing arrangement for the supplier.
 */
type SupplierPurchasingArrangementFunctionPartnerTypeEnum: String(30) enum {
  /**
   * Indicates that the function partner is a contact person.
   */
  functionPartnerContactPerson;
  /**
   * Indicates that the function partner is a customer.
   */
  functionPartnerCustomer;
  /**
   * Indicates that the function partner is a supplier.
   */
  functionPartnerSupplier;
  /**
   * Indicates that the function partner is a workforce person.
   */
  functionPartnerWorkforcePerson;
} ;

/**
 * Business process related functions of the purchasing
 * arrangement.
 */
aspect SupplierPurchasingArrangementFunction: S4SupplierPurchasingArrangementFunction  {
  /**
   * The name of the function which serves as a key.
   */
  key functionName: ShortString;
  /**
   * A code that represents the business process related function of the purchasing arrangement for a supplier.
   */
  functionCode: SupplierPurchasingArrangementFunctionCode;
  /**
   * Indicates if the function is the default for
   * the supplier purchasing arrangement.
   */
  isDefault: Boolean;
  /**
   * The type of function partner of the purchasing arrangement for the supplier.
   */
  functionPartnerType: SupplierPurchasingArrangementFunctionPartnerTypeEnum;
  /**
   * The contact person function partner.
   */
  functionPartnerContactPerson: association to one BusinessPartner;
  /**
   * The workforce person function partner.
   */
  functionPartnerWorkforcePerson: association to one WorkforcePerson;
};

/**
 * The business terms for a supplier associated to a specific
 * purchasing organization.
 */
aspect SupplierPurchasingArrangement: PurchasingBlockingInformation, S4SupplierPurchasingArrangement  {
  /**
   * An ID that represents the purchasing organization for
   * the purchasing arrangement.
   */
  key purchasingOrganizationDisplayId: String(4);
  /**
   * The currency for purchases of the purchasing arrangement.
   */
  currency: CurrencyCode;
  /**
   * A code that represents the classification of the purchasing arrangement for a supplier.
   */
  classification: SupplierPurchasingArrangementClassificationCode;
  /**
   * A code that represents the pricing procedure of the purchasing arrangement for a supplier.
   */
  calculationSchema: SupplierPurchasingArrangementCalculationSchemaCode;
  /**
   * Indicates if the automated generation of purchase orders
   * assigned to a supplier
   * purchasing arrangement is allowed.
   */
  isAutoGenerationOfPurchaseOrdersAllowed: Boolean;
  /**
   * A code that represents a trading term that complies with the standards
   * established by the International Chamber of Commerce (ICC).
   */
  incotermsClassification: IncotermsClassificationCode;
  /**
   * Additional information for the primary incoterm.
   */
  incotermsTransferLocationName: String(28);
  /**
   * Business process related functions of the purchasing
   * arrangement.
   */
  functions: composition of many SupplierPurchasingArrangementFunction;
  /**
   * Indicates if the entity is marked for deletion.
   */
  isMarkedForDeletion: Boolean;
};

/**
 * An entity that holds procurement related information of a
 * business partner entity.
 */
@PersonalData.EntitySemantics: 'DataSubjectDetails'
aspect SupplierInformation: PurchasingBlockingInformation, FinanceBlockingInformation, S4SupplierInformation  {
  /**
   * The accounting information of the supplier.
   */
  accountingInformation: composition of many SupplierAccountingInformation;
  /**
   * The purchasing arrangements of the supplier.
   */
  purchasingArrangements: composition of many SupplierPurchasingArrangement;
};
