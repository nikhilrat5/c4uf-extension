namespace sap.odm.businesspartner;

using {
  sap.odm.common.address.PersonAddressDetails,
  sap.odm.common.address.OrganizationAddressDetails
} from '../common/address/AddressDetailTypes.cds';
using {
  sap.odm.businesspartner.s4.PersonName as S4PersonName,
  sap.odm.businesspartner.s4.AddressData as S4AddressData
} from './s4/BusinessPartner.cds';
using { sap.odm.common.ScriptCode } from '../common/ScriptCodes.cds';
using { sap.odm.common.GenderCode } from '../common/GenderCodes.cds';
using { sap.odm.common.LanguageCode } from '../common/LanguageCodes.cds';
using { sap.odm.common.CountryCode } from '../common/CountryCodes.cds';
using { sap.odm.businesspartner.IndustrySectorCode } from './IndustrySectorCodes.cds';
using { sap.odm.businesspartner.IndustrySystemTypeCode } from './IndustrySystemTypeCodes.cds';
using { sap.odm.businesspartner.CompanyLegalFormCode } from './CompanyLegalFormCodes.cds';
using { sap.odm.businesspartner.BusinessPartnerGroupTypeCode } from './BusinessPartnerGroupTypeCodes.cds';
using { sap.odm.common.Validity } from '../common/Validity.cds';
using { sap.odm.businesspartner.IdentificationTypeCode } from './IdentificationTypeCodes.cds';
using { sap.odm.common.address.CountrySubdivisionCode } from '../common/address/CountrySubdivisionCodes.cds';
using { sap.odm.finance.payment.PaymentDetailsBaseType } from '../finance/payment/PaymentDetail.cds';
using { sap.odm.businesspartner.TaxNumberTypeCode } from './TaxNumberTypeCodes.cds';
using { sap.odm.businesspartner.AddressDataUsageCode } from './AddressDataUsageCodes.cds';
using { sap.odm.businesspartner.CommunicationMethodCode } from './CommunicationMethodCodes.cds';
using {
  sap.odm.common.address.PersonAddress as AddressPersonAddress,
  sap.odm.common.address.OrganizationAddress as AddressOrganizationAddress
} from '../common/address/AddressTypes.cds';
using { sap.odm.common.cuid } from '../common/aspects.cds';
using {
  sap.odm.businesspartner.Email,
  sap.odm.businesspartner.Phone,
  sap.odm.businesspartner.Fax,
  sap.odm.businesspartner.Website
} from './aspects.cds';
using { sap.odm.businesspartner.BusinessPartnerRoleCode } from './BusinessPartnerRoleCodes.cds';
using { sap.odm.dpp.TrackPurpose } from '../dpp/PurposeReference.cds';
using { sap.odm.businesspartner.LifecycleStatusCode } from './LifecycleStatusCodes.cds';
using { sap.odm.sales.CustomerInformation } from '../sales/Customer.cds';
using { sap.odm.procurement.SupplierInformation } from '../procurement/Supplier.cds';

/**
 * Defines the type under which a business partner is
 * classified.
 */
type BusinessPartnerTypeEnum: String(20) enum {
  /**
   * organization type.
   */
  organization;
  /**
   * person type.
   */
  person;
  /**
   * group type.
   */
  businessPartnerGroup;
} ;

/**
 * Scripted address details of a person who is a business partner.
 */
@PersonalData.EntitySemantics: 'DataSubjectDetails'
aspect ScriptedPersonName: PersonAddressDetails, S4PersonName  {
  /**
   * Script code of the name of the person name information.
   */
  key scriptCode: ScriptCode;
};

/**
 * Personal address information of a business partner, including script variants.
 */
@PersonalData.EntitySemantics: 'DataSubjectDetails'
aspect PersonName: PersonAddressDetails  {
  /**
   * Script variants of the name of a person who is the business partner.
   */
  scriptVariants: composition of many ScriptedPersonName;
};

/**
 * Details of a person who is a business partner.
 */
@PersonalData.EntitySemantics: 'DataSubjectDetails'
aspect PersonDetails {
  /**
   * Name of a person who is a business partner.
   */
  nameDetails: composition of one PersonName;
  /**
   * Gender of a business partner.
   */
  @PersonalData.IsPotentiallyPersonal: true
  gender: GenderCode;
  /**
   * Code of preferred language for verbal communication with a business partner.
   */
  language: LanguageCode;
  /**
   * Code of preferred language for written communication with a business partner.
   */
  correspondenceLanguage: LanguageCode;
  /**
   * Date of birth of a business partner.
   */
  @PersonalData.IsPotentiallyPersonal: true
  birthDate: Date;
  /**
   * Primary nationality of a business partner.
   */
  @PersonalData.IsPotentiallyPersonal: true
  nationality: CountryCode;
};

/**
 * Scripted variants of an organization's address.
 */
@PersonalData.EntitySemantics: 'DataSubjectDetails'
aspect ScriptedOrganizationName: OrganizationAddressDetails  {
  /**
   * Script code of the organization name.
   */
  key scriptCode: ScriptCode;
};

/**
 * Address information of an organization including script variants.
 */
@PersonalData.EntitySemantics: 'DataSubjectDetails'
aspect OrganizationName: OrganizationAddressDetails  {
  /**
   * Scripted variants of an organization's name.
   */
  scriptVariants: composition of many ScriptedOrganizationName;
};

/**
 * Industry which is used to categorize business partners.
 */
@PersonalData.EntitySemantics: 'DataSubjectDetails'
aspect Industry {
  /**
   * A code that describes the industry classification.
   */
  key industrySector: IndustrySectorCode;
  /**
   * A code that combines and categorizes several industries into a
   * group.
   */
  key industrySystemType: IndustrySystemTypeCode;
  /**
   * The business partner belongs to a standard type of industry.
   */
  isStandardIndustry: Boolean default false;
};

/**
 * Organization information of a business partner. This field is only filled if the Business Partner is of type 'organization'.
 */
@PersonalData.EntitySemantics: 'DataSubjectDetails'
aspect OrganizationDetails {
  /**
   * Scripted name of an organization.
   */
  nameDetails: composition of one OrganizationName;
  /**
   * Code for the legal form of a company.
   */
  legalForm: CompanyLegalFormCode;
  /**
   * Categorization of business partners according to their
   * industries.
   */
  industries: composition of many Industry;
  /**
   * The Global Location Number (GLN) - former Internal Location
   * Number (ILN) - assigned by GS1 organizations identifies
   * physical locations or legal entities uniquely. It consists
   * of 13 digits, the last digit being the check digit. There
   * are two categories of location numbers: Participants who
   * only need an GLN to clearly and unmistakably identify
   * themselves for communication with the business partner are
   * given a category 1 GLN. This cannot be used to identify
   * articles by means of EAN. Participants who wish to assign
   * the location numbers for their own enterprise areas are
   * given a category 2 GLN. For a category 2 GLN, digits 1-7,
   * 1-8 or 1-9 are described as basis number. This is used as
   * basis for the creation of article numbers (EAN).
   */
  globalLocationNumber: String(13);
  /**
   * Indicates the official date in the commercial 
   * registry that a company was founded.
   */
  foundationDate: Date;
  /**
   * Date that a company is dissolved.
   */
  liquidationDate: Date;
  /**
   * The company ID of a trading partner.
   */
  tradingPartnerId: String(6);
};

/**
 * Definition of a business partner group name.
 */
type BusinessPartnerGroupNameType: {
  /**
   * The name of the business partner group.
   */
  name: String(40);
};

/**
 * Scripted variants of a business partner group name.
 */
aspect ScriptedBusinessPartnerGroupName: BusinessPartnerGroupNameType  {
  /**
   * Script code of the business partner group name.
   */
  key scriptCode: ScriptCode;
};

/**
 * Name of the business partner who is a group including script variants.
 */
aspect BusinessPartnerGroupName: BusinessPartnerGroupNameType  {
  /**
   * Scripted variants of group's name.
   */
  scriptVariants: composition of many ScriptedBusinessPartnerGroupName;
};

/**
 * Details of a group who is a business partner.
 */
aspect BusinessPartnerGroupDetails {
  /**
   * The primary group name.
   */
  primaryGroupName: composition of one BusinessPartnerGroupName;
  /**
   * The secondary group name.
   */
  secondaryGroupName: composition of one BusinessPartnerGroupName;
  /**
   * The type of the group.
   */
  groupType: BusinessPartnerGroupTypeCode;
};

/**
 * Entity defining a proof of identity.
 */
@PersonalData.EntitySemantics: 'DataSubjectDetails'
aspect Identification: Validity  {
  /**
   * A code that represents the type of identification  
   * (such as an ID card, driver's license or commercial registry)
   * for a business partner.
   */
  @PersonalData.IsPotentiallyPersonal: true
  key identificationType: IdentificationTypeCode;
  /**
   * Number that identifies a business partner, such as
   * a driver's license, or ID card number.
   */
  @PersonalData.IsPotentiallyPersonal: true
  key identificationNumber: String(60);
  /**
   * Date on which the ID number was registered or assigned by
   * the appropriate authority.
   */
  @PersonalData.IsPotentiallyPersonal: true
  entryDate: Date;
  /**
   * A code that represents the country in which an ID number was assigned, or in which the
   * number is valid.
   */
  @PersonalData.IsPotentiallyPersonal: true
  country: CountryCode;
  /**
   * A code that represents the region in which an ID Number is valid or was assigned.
   */
  @PersonalData.IsPotentiallyPersonal: true
  region: CountrySubdivisionCode;
  /**
   * Institution that administers or assigns an ID number.
   */
  @PersonalData.IsPotentiallyPersonal: true
  institute: String(40);
};

/**
 * Contains the bank account data of a business partner.
 */
@PersonalData.EntitySemantics: 'DataSubjectDetails'
aspect BankAccount: Validity, PaymentDetailsBaseType  {
  /**
   * The unique identifier for a bank account of a business
   * partner.
   */
  key id: String(4);
  /**
   * The name of the bank account.
   */
  bankAccountName: String(40);
  /**
   * A unique ID for identifying a bank.
   */
  bankControlKey: String(2);
};

/**
 * An identification number issued by the tax authorities to
 * identify a taxpayer.
 */
@PersonalData.EntitySemantics: 'DataSubjectDetails'
aspect TaxNumber {
  /**
   * A code that specifies the tax number type.
   */
  key taxNumberType: TaxNumberTypeCode;
  /**
   * Specifies the tax number.
   */
  @PersonalData.IsPotentiallyPersonal: true
  taxNumber: String(60);
};

/**
 * Usage details about the address information
 * that is assigned to a business partner.
 */
@PersonalData.EntitySemantics: 'DataSubjectDetails'
aspect AddressDataUsage {
  /**
   * A code that represents the usage for the address of the business partner.
   */
  key usage: AddressDataUsageCode;
  /**
   * End date of a validity period.
   */
  key validTo: Date;
  /**
   * Start date of a validity period.
   */
  validFrom: Date;
  /**
   * Establishes the the usage of the address information is standard.
   */
  isStandard: Boolean default false;
};

/**
 * Information about the preferred type of communication.
 */
type CommunicationPreferences: {
  /**
   * A code that represents the preferred method of communication.
   */
  communicationMethod: CommunicationMethodCode;
  /**
   * A code that represents the preferred language for written communication.
   */
  nonVerbalCommunicationLanguage: LanguageCode;
};

/**
 * Defines postal address type.
 */
type PostalAddressTypeEnum: String(25) enum {
  /**
   * Defines the organization's postal address type.
   */
  organizationPostalAddress;
  /**
   * Defines a person's postal address type.
   */
  personPostalAddress;
} ;

/**
 * The scripted address of a person.
 */
@PersonalData.EntitySemantics: 'DataSubjectDetails'
aspect ScriptedPersonAddress: AddressPersonAddress  {
  /**
   * A code for a script.
   */
  key scriptCode: ScriptCode;
};

/**
 * Address of a person including script variants.
 */
@PersonalData.EntitySemantics: 'DataSubjectDetails'
aspect PersonAddress: AddressPersonAddress  {
  /**
   * Scripted variants of the address.
   */
  scriptVariants: composition of many ScriptedPersonAddress;
};

/**
 * Scripted type of address of an organization.
 */
@PersonalData.EntitySemantics: 'DataSubjectDetails'
aspect ScriptedOrganizationAddress: AddressOrganizationAddress  {
  /**
   * Script code of the name of the organization address information.
   */
  key scriptCode: ScriptCode;
};

/**
 * The type of address of an organization including script variants.
 */
@PersonalData.EntitySemantics: 'DataSubjectDetails'
aspect OrganizationAddress: AddressOrganizationAddress  {
  /**
   * Scripted variants of the organization's address.
   */
  scriptVariants: composition of many ScriptedOrganizationAddress;
};

/**
 * The validity date of an address and customer user ID of a business partner.
 */
@PersonalData.EntitySemantics: 'DataSubjectDetails'
aspect AddressData: cuid, Validity, S4AddressData  {
  /**
   * Usage about the address information that is assigned to a
   * business partner.
   */
  usages: composition of many AddressDataUsage;
  /**
   * Information about the preferences of communication which you
   * can exchange documents and messages with a business partner.
   */
  communicationPreferences: CommunicationPreferences;
  /**
   * Defines if the address is for a person or an organization.
   */
  postalAddressType: PostalAddressTypeEnum;
  /**
   * Postal address that is assigned if the address type is
   * "personPostalAddress". The address can appear in different
   * scripts. Person details are only maintained if
   * they differ from the details of the business partner.
   */
  personPostalAddress: composition of one PersonAddress;
  /**
   * Postal address that is assigned if the address type is
   * "organizationPostalAddress". The address can appear in
   * different scripts. Organization details are only 
   * maintained if they differ from the details of the
   * business partner.
   */
  organizationPostalAddress: composition of one OrganizationAddress;
  /**
   * Email addresses of the business partner.
   */
  emailAddresses: composition of many Email;
  /**
   * Phone numbers of the business partner.
   */
  phoneNumbers: composition of many Phone;
  /**
   * Fax numbers of the business partner.
   */
  faxNumbers: composition of many Fax;
  /**
   * Websites of the business partner.
   */
  websites: composition of many Website;
};

/**
 * The validity of the business partner role.
 */
@PersonalData.EntitySemantics: 'DataSubjectDetails'
aspect BusinessPartnerRole: Validity  {
  /**
   * The unique code for the business partner role.
   */
  key role: BusinessPartnerRoleCode;
};

/**
 * An organization (company, subsidiary) or person in which
 * your company has a business interest.
 */
@AuditLog.Operation.Delete: true
@AuditLog.Operation.Insert: true
@AuditLog.Operation.Read: true
@AuditLog.Operation.Update: true
@ODM.root: true
@PersonalData.EntitySemantics: 'DataSubject'
@odm.doc.relatedGDT: 'Business Partner'
entity BusinessPartner: cuid, TrackPurpose  {
  /**
   * Human-readable identifier.
   */
  @PersonalData.FieldSemantics: 'DataSubjectID'
  displayId: String(10);
  /**
   * Type under which a business partner is classified
   * (organization or person).
   */
  businessPartnerType: BusinessPartnerTypeEnum;
  /**
   * Details of a person.
   */
  person: composition of one PersonDetails;
  /**
   * Details of an organization.
   */
  organization: composition of one OrganizationDetails;
  /**
   * Details of a group.
   */
  businessPartnerGroup: composition of one BusinessPartnerGroupDetails;
  /**
   * Code identifying the lifecycle status of a business partner
   * (For example, active or deleted).
   */
  lifecycleStatus: LifecycleStatusCode;
  /**
   * Central blocking of the business partner. If the business partner
   * is blocked, certain activities cannot be executed.
   */
  isBlocked: Boolean;
  /**
   * Proof of identity.
   */
  identifications: composition of many Identification;
  /**
   * Bank accounts.
   */
  bankAccounts: composition of many BankAccount;
  /**
   * Tax numbers of the business partner.
   */
  taxNumbers: composition of many TaxNumber;
  /**
   * The address information of the business partner.
   */
  addressData: composition of many AddressData;
  /**
   * Assigned business partner roles.
   */
  roles: composition of many BusinessPartnerRole;
  /**
   * Customer role related information of the business partner.
   */
  customerInformation: composition of one CustomerInformation;
  /**
   * Customer role related information of a specific supplier.
   */
  supplierInformation: composition of one SupplierInformation;
};
