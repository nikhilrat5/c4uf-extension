using mdo.manageDistributions from '../srv/manageDistributions';

annotate manageDistributions.ConsumerApplications with {
	Destination @(
		Common.Label: '{i18n>destination}',
		Common.ValueListWithFixedValues: true,
		Common.ValueList: {
			CollectionPath: 'ConsumerDestinations',
			Parameters: [
				{ $Type: 'Common.ValueListParameterIn', LocalDataProperty: 'To_Parent/Id', ValueListProperty: 'ModelId'},
				{ $Type: 'Common.ValueListParameterIn', LocalDataProperty: 'To_Parent/IsActiveEntity', ValueListProperty: 'IsActiveEntity'},
				{ $Type: 'Common.ValueListParameterInOut', LocalDataProperty: 'Destination', ValueListProperty: 'Name'},
				{ $Type: 'Common.ValueListParameterDisplayOnly' , ValueListProperty: 'Description'}
	 		]
		}
	);

	ApplicationType @(
		Common.Label: '{i18n>consumerAppType}',
		Common.Text: {$value: To_ApplicationType.Description, ![@UI.TextArrangement]: #TextFirst},
		Common.ValueListWithFixedValues: true,
		sap.value.list: 'fixed-values',
		Common.ValueList: {
			CollectionPath: 'ApplicationTypes',
			Parameters: [
				{ $Type: 'Common.ValueListParameterInOut', LocalDataProperty: 'ApplicationType', ValueListProperty: 'ApplicationTypeCode'},
				{ $Type: 'Common.ValueListParameterDisplayOnly' , ValueListProperty: 'Description'}
	 		]
		}		
	);

	Version @(
		Common.Label: '{i18n>version}',
		Common.FieldControl: #Hidden
	);
};

annotate manageDistributions.ApplicationTypes with {
	ApplicationTypeCode @(
		Common.Label: '{i18n>consumerAppType}',
		Common.Text:  {$value: Description},
	);

	Description @(
		Common.Label: '{i18n>consumerDescription}'
	);
};

annotate manageDistributions.ConsumerDestinations with {
	Name @Common.Label: '{i18n>destinationNameLabel}';
	Description @(
		Common.Label: '{i18n>destinationDescriptionLabel}',
		UI.HiddenFilter
	);
	ModelId @UI.HiddenFilter;
	IsActiveEntity @UI.HiddenFilter;
	BusinessSystem @UI.HiddenFilter;
};

annotate manageDistributions.ConsumerApplications with @(
	Common.SemanticKey: [Destination],
	UI.HiddenFilter: Id,

	UI: {
		LineItem: [ 
			{$Type: 'UI.DataField', Value: Destination, ![@UI.Importance]: #High},
			{$Type: 'UI.DataField', Value: ApplicationType, ![@UI.Importance]: #High}
		],
	
		HeaderInfo: {
			TypeName: '{i18n>consumerAppId}',
			TypeNamePlural: '{i18n>consumerAppIdPlural}',
			Title : {Value: Destination}
		},

		HeaderFacets: [
			{$Type: 'UI.ReferenceFacet', Target: '@UI.FieldGroup#generalInformation', Label: '{i18n>generalInfo}'},
			{$Type: 'UI.ReferenceFacet', Target: '@UI.FieldGroup#scheduleInformation', Label: '{i18n>scheduleInfo}'},
			{$Type: 'UI.ReferenceFacet', Target: '@UI.FieldGroup#admin', Label: '{i18n>admin}'}
		],

		PresentationVariant: {
			RequestAtLeast: ['To_Parent']
		},

		Facets: [{
			ID: 'consumerAppId',
			Label: '{i18n>consumerAppId}',
			$Type: 'UI.CollectionFacet',
			Facets: [
				{$Type: 'UI.ReferenceFacet', Target: '@UI.FieldGroup#generalInfo'}
			]
		}],
		
		FieldGroup#generalInfo: {
			Label: '{i18n>generalInfo}',
			Data: [ 
				{$Type: 'UI.DataField', Value: Destination},
				{$Type: 'UI.DataField', Value: ApplicationType}
			]
		},

		FieldGroup#generalInformation: {
			Data: [
				{$Type: 'UI.DataField', Value: To_Parent.BusinessObjectType_objectTypeCode, Label: '{i18n>objectTypeCode}'},
				{$Type: 'UI.DataField', Value: To_Parent.IsActive, Label: '{i18n>isActive}'},
				{$Type: 'UI.DataField', Value: To_Parent.ProviderApplicationAPI, Label: '{i18n>api}'}
			]
		},

		FieldGroup#scheduleInformation: {
			Data: [

			]
		},

		FieldGroup#admin: {
			Data: [
				{$Type: 'UI.DataField', Value: To_Parent.CreatedByUser, Label: '{i18n>createdby}'},
				{$Type: 'UI.DataField', Value: To_Parent.CreationDate, Label: '{i18n>createdon}'},
				{$Type: 'UI.DataField', Value: To_Parent.LastChangedByUser, Label: '{i18n>changedby}'},
				{$Type: 'UI.DataField', Value: To_Parent.LastChangeDate, Label: '{i18n>changedon}'}
			]
		}
	}
);
