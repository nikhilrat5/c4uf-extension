namespace mdo;
using cds.foundation.sap.businessobjecttype.ObjectType as ObjectType from '@sap/reusemodel-businessobjecttype/db/BusinessObjectTypeModel';
using mdo.ObjectIdentifierType as ObjectIdentifierType from './ObjectIdentifierTypeModel';
using mdo.DistributionStatus as DistributionStatus from './DistributionStatusModel';

@cds.persistence.skip: true
entity KeyMappingDistributionStatusOverviewTmpl  {
	key ObjectInstanceKey	 		: String(256) @Common.FieldControl: #Hidden;	
	@Search.defaultSearchElement: true
	key ObjectId			 		: String(100);	
	key ObjectIdentifierType 		: String(6) @Common.FieldControl: #Hidden;
	@Search.defaultSearchElement: true
	key ProviderDestination			: String(256);
	@Search.defaultSearchElement: true
	ObjectTypeCode		 		    : String(10);
	BusinessSystem		 			: String(60) @Common.FieldControl: #Hidden;
	MappingGroupId			 		: String(37) @Common.FieldControl: #Hidden;
	Counter					 		: Integer;
	ObjectTypeCodeText		 		: String(80) @Common.FieldControl: #Hidden;
	ObjectIdentifierTypeText 		: String(80) @Common.FieldControl: #Hidden;
	IsLocalBusinessSystem			: Boolean default false @Common.FieldControl: #Hidden;
	to_GroupMember			 		: Association to many KeyMappingDistributionStatusDetailTmpl on to_GroupMember.MappingGroupId = MappingGroupId;	
	to_DistributionStatusSummary	: Association to many DistributionStatusSummaryOverview on to_DistributionStatusSummary.ObjectInstanceKey = ObjectInstanceKey;
}

@cds.persistence.skip: true
entity KeyMappingDistributionStatusDetailTmpl  {
	key ObjectInstanceKey		: String(256);	
	key ObjectId				: String(100);
	key ObjectIdentifierType	: String(6);
	key Destination				: String(256);
	ObjectTypeCode				: String(10);	
	BusinessSystem				: String(60);	
	MappingGroupId				: String(37);
	ReplicationStatus			: String(10);
	LastExecutiontime			: Timestamp;
	NextExecutionTime			: Timestamp;
	ObjectTypeCodeText			: String(80);
	ObjectIdentifierTypeText	: String(80);
	IsLocalBusinessSystem		: Boolean default false @Common.FieldControl: #Hidden;
}

@cds.persistence.skip: true
entity DistributionStatusSummaryOverview{
	key ObjectInstanceKey	: String(256);
	key ReplicationStatus	: String(256);
	Counter					: Integer;
}

@Capabilities: { Insertable:false, Updatable:false, Deletable:false }
view DistributionStatusSummary as select from LastDistributionStatus {
	key ObjectInstanceKey,
	key ReplicationStatus,	
	count(ReplicationStatus) as Counter : Integer,
} group by ObjectInstanceKey, ReplicationStatus;

@Capabilities: { Insertable:false, Updatable:false, Deletable:false }
view DistributionStatusCounter as select from LastDistributionStatus {
	key ObjectInstanceKey,	
	count(ReplicationStatus) as Counter : Integer
} group by ObjectInstanceKey;

@Capabilities: { Insertable:false, Updatable:false, Deletable:false }
view LastDistributionStatus as  select from DistributionStatus as T1
	inner join ( SELECT FROM DistributionStatus
				{	MAX(LastStatusChange) as max_date,
					ObjectInstanceKey as instance,
					//DistributionModel as model,
					Destination as system
				}
				group by
					ObjectInstanceKey,
					//DistributionModel,
					Destination
				) as T2
				on T2.instance = T1.ObjectInstanceKey
				//and T2.model = T1.DistributionModel
				and T2.system = T1.Destination
				and T2.max_date = T1.LastStatusChange
{	
	key T1.ObjectInstanceKey,
	key T1.DistributionModel,
	key T1.Destination,
	T1.ReplicationStatus,
	T1.LastStatusChange,
	T1.BusinessObjectType,
	T1.API,
	T1.MessageId,
	T1.DistributionRunId,
	T1.ApplicationLogId,
	T1.DependentBusinessObjectType,
	T1.DependentObjectInstanceKey,
	T1.DistributionModelName,
	T1.CreatedByUser,
	T1.CreationDate,
	T1.LastChangedByUser,
	T1.LastChangeDate,
	T1.Id,
	T1.To_ChangePointer.Id as ChangePointerId
}where T1.HierarchyLevel = '0';

view ObjectTypes as select from ObjectType {
		key objectTypeCode,
		key BusConfignVersion,
		businessObject,
		isProjection,
		mainObject,	
		description[language=SUBSTRING(SESSION_CONTEXT('LOCALE'),1,2)].description as localizedDescription
};

view ObjectIdentifierTypes as select from ObjectIdentifierType {
		key identifierType,
		identifierName,	
		to_CurrentDescription[language=SUBSTRING(SESSION_CONTEXT('LOCALE'),1,2)].description as localizedDescription
};
