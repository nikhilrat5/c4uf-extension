namespace mdo;

using mdo.ChangePointer as ChangePointer from './ChangePointerModel';
using cds.foundation.sap.businessobjecttype.ObjectType as ObjectType from '@sap/reusemodel-businessobjecttype/db/BusinessObjectTypeModel';

using mdo.tracked from './common';
       
       type ReplicationStatus : String(256) enum { 
             started='started';
             failed='failed'; 
             success='succes';         
             confirmed='confirmed';           
       }      
       
       entity DistributionStatus: tracked {
             key Id                           : UUID;
             DistributionModel                : UUID;
             DistributionModelName            : String(256);
             API                              : String(256) default '';
             @Search.defaultSearchElement: true
             Destination                      : String(256);
             //ProviderDestination              : String(256);
             ReplicationStatus                : ReplicationStatus;
             MessageId						  : String(256);
             LastStatusChange                 : Timestamp
                    @odata.on.insert:#now
                    @odata.on.update:#now
                    @Common.FieldControl: #ReadOnly
                    @Core.Computed: true;
             DistributionRunId				  : String(256);
             ApplicationLogId                 : String(256);
             BusinessObjectType               : String(10);
             @Search.defaultSearchElement: true
             ObjectInstanceKey                : String(256);
             DependentBusinessObjectType      : String(10);
             DependentObjectInstanceKey       : String(256);
             HierarchyLevel                   : Integer;
             DrillState                       : String(10);
             @Search.defaultSearchElement: true
	virtual HumanReadableObjectInstanceKey    : String(256);
             To_BusinessObjectType            : Association to ObjectType on To_BusinessObjectType.objectTypeCode = BusinessObjectType;
             To_ChangePointer                 : Association to ChangePointer;
             To_BusinessLogRecords            : Composition of many BusinessLogRecord on To_BusinessLogRecords.MessageId = ApplicationLogId;
       }      

       entity BusinessLogRecord {
             key MessageId                   : String(256);
             key Id                          : String(256);
             Status                          : String(15);
             Description                     : String(512);
       }
       
       @cds.persistence.skip: true
		entity DistributionStatusTmpl: tracked  {
			       key Id                           : UUID;
		             DistributionModel                : UUID;
		             DistributionModelName            : String(256);
		             API                              : String(256) default '';
		             @Search.defaultSearchElement: true
		             Destination                      : String(256);
		             //ProviderDestination              : String(256);
		             ReplicationStatus                : ReplicationStatus;
		             MessageId						  : String(256);
		             LastStatusChange                 : Timestamp
		                    @odata.on.insert:#now
		                    @odata.on.update:#now
		                    @Common.FieldControl: #ReadOnly
		                    @Core.Computed: true;
		             DistributionRunId				  : String(256);
		             ApplicationLogId                 : String(256);
		             BusinessObjectType               : String(10);
		             @Search.defaultSearchElement: true
		             ObjectInstanceKey                : String(256);
		             DependentBusinessObjectType      : String(10);
		             DependentObjectInstanceKey       : String(256);
		             HierarchyLevel                   : Integer;
		             DrillState                       : String(10);
		             @Search.defaultSearchElement: true
			       HumanReadableObjectInstanceKey    : String(256);
		}
