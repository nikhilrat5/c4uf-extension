namespace mdo;

using cds.foundation.sap.language.Languages from '@sap/reusemodel-language/db/data-model';
using cds.foundation.sap.businessobjecttype.ObjectType from '@sap/reusemodel-businessobjecttype/db/BusinessObjectTypeModel';
using mdo.ObjectIdentifierType from './ObjectIdentifierTypeModel';
using mdo.ApplicationType from './ApplicationTypeModel';
using mdo.ApplicationTypeText from './ApplicationTypeModel';
using mdo.managedObject from './common';
using mdo.tracked from './common';
using mdo.validity from './common';
using mdo.Operator from './common';
using mdo.filterable from './common';
using mdo.API as API from '../db/ApiEntitySetModel';
using mdo.managedUUIDObject from './common';

	type CallType : String(32) enum {
		push='push';
		pull='pull';
	}

	type ConnectivityType : String enum { System; Application; }

	entity SubscriptionDistribution:  tracked, validity {
		key Id								: UUID;
		IsActive							: Boolean default false;
		@Search.defaultSearchElement: true
		Model								: String(256);
		Frequency							: String(32);
		CallType							: CallType;
		BusinessObjectType					: Association to ObjectType;
		ProviderApplicationAPI				: String(256) default '';
		ProviderApplicationAPIVersion		: String(256) default '';
		KeyMappingWriteIsAllowed			: Boolean default false;
		KeyMappingUseIsAllowed				: Boolean default false;
		KeyMappingDistributionIsAllowed		: Boolean default false;
		Confirmation						: Boolean default false;
		IsMarkedForDeletion					: Boolean default false;
		ProviderApplicationType				: Association to ApplicationType;
		ProviderApplicationTypeVersion		: String(256);
		IsLocalModel						: Boolean default false;
		IsGeneratedByDPP                    : Boolean default false;
		PackageSize							: Integer default 500;
		LastActivatedAt						: Timestamp;
		LastActivatedBy						: String(128);
		Recurrence							: String(1024);
		To_Description						: Composition of many Description on To_Description.To_Parent = $self;
		To_LocalizedDescription				: Association to one Description on To_LocalizedDescription.To_Parent = $self and To_LocalizedDescription.LanguageCode = SUBSTRING(SESSION_CONTEXT('LOCALE'),1,2);
		To_ProviderApplicationDestination	: Composition of many ProviderApplicationDestination on To_ProviderApplicationDestination.To_Parent = $self;
		To_ConsumerApplication 				: Composition of many ConsumerApplication on To_ConsumerApplication.To_Parent = $self;
		To_ApplicationScope					: Composition of many ApplicationScope on To_ApplicationScope.To_Parent = $self;
		To_DistributionScope				: Composition of many DistributionScope on To_DistributionScope.To_Parent = $self;		
		To_KeyMappingFilter					: Composition of many KeyMappingFilter on To_KeyMappingFilter.To_Parent = $self;
		To_API								: Association to one API on To_API.API = ProviderApplicationAPI and To_API.APIVersion = ProviderApplicationAPIVersion;
	}

	entity Description : managedObject {
		LanguageCode 		: String(2);
		Description			: String(4096);
		To_Language 		: Association to Languages on To_Language.LanguageTwoLetterISOCode = LanguageCode;
	}

	// filter criteria for BO instance(s)	-> conditions section
	entity ApplicationScope : managedObject, filterable {
		ValuePath		: String(1024); // eg Odata: (like valuePath for filter criteria): OrderDetails.Order/CustomerID
		CanonicalPath	: String(1024);	// eg Odata: (started always from root node): Product/to_orderDetails.to_Order
	}

	// filter criteria for BO node instance(s) -> content section
	entity DistributionScope : managedObject, filterable {
		ValuePath		: String(1024); // eg Odata: (like valuePath for filter criteria): OrderDetails.Order/CustomerID
		CanonicalPath	: String(1024);	// eg Odata: (started always from root node): Product/to_orderDetails.to_Order
	}

	entity ProviderApplicationDestination : managedObject {
		Destination					: String(256);
	}

	entity ConsumerApplication : managedObject {
		ApplicationType		: String(256);
		Version				: String(256);
		Destination			: String(256);
		To_ApplicationType	: Association to one ApplicationType on To_ApplicationType.ApplicationTypeCode = ApplicationType;
		To_ConsumerApplicationToPurpose : Composition of many ConsumerApplicationToPurpose on To_ConsumerApplicationToPurpose.To_Parent = $self;
	}

	type KeyMappingFilterAttributes : String(30) enum { BusinessSystem; BusinessObjectType; ObjectIdentifierType; };

	// metadata to specify which ObjectIdentifierType used for a specific destination
	entity KeyMappingFilter : managedObject {
		Attribute		: KeyMappingFilterAttributes;
		sign			: Boolean default false;// include='false', exclude='true'
		Operator		: Operator;
		LowValue		: String(512);
		HighValue		: String(512);
	}

	//DPP Related Table
	entity ConsumerApplicationToPurpose: managedUUIDObject {
		To_Parent	: Association to ConsumerApplication;
		To_Purpose	: Association to Purpose; 
	}

	entity Purpose {
		key PurposeId	: String(10);
		Text			: localized String;
	}

