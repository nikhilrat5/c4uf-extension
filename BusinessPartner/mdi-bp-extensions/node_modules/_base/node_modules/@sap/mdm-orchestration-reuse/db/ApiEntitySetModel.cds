namespace mdo;

using { mdo.DataType, mdo.tracked } from './common';
using cds.foundation.sap.businessobjecttype.ObjectType as ObjectType from '@sap/reusemodel-businessobjecttype/db/BusinessObjectTypeModel';

	entity API: tracked {
		key Id					: UUID;
		@Search.defaultSearchElement
		API						: String(256);
		@Search.defaultSearchElement
		APIVersion				: String(32);
		@Search.defaultSearchElement
		ApplicationType			: String(256);
		ApplicationTypeVersion	: String(256);
		BusinessObjectType		: String(10);
		Confirmation			: Boolean default false;
		To_EntitySet			: Composition of many EntitySet on To_EntitySet.To_Parent = $self;
		To_BusinessObjectType   : Association to ObjectType on To_BusinessObjectType.objectTypeCode = BusinessObjectType;
		To_DependentObjectAPI	: Composition of many DependentObjectAPI on To_DependentObjectAPI.To_Parent = $self;
	}
	
	entity DependentObjectAPI: tracked {
		key Id					: UUID;
		@Search.defaultSearchElement
		API						: String(256);
		@Search.defaultSearchElement
		APIVersion				: String(32);
		@Search.defaultSearchElement		
		BusinessObjectType		: String(10);		
		To_Parent				: Association to API;
		To_BusinessObjectType	: Association to ObjectType on To_BusinessObjectType.objectTypeCode = BusinessObjectType;
	}

	// provider filter model: metadata for EntityFilter (Instance & Set)
	entity EntitySet {
		key Id				: UUID;
		@Search.defaultSearchElement
		AttributePath		: String(1024);	// eg OData: OrderDetails.Order/CustomerID
		CanonicalPath		: String(1024);	// eg Odata: Product/to_orderDetails.to_Order
		AttributeDataType	: DataType;
		AttributeMaxLength	: Integer;		
		Filterable 			: Boolean default false;
		DataScopeFilterable : Boolean default false;
		HasValueHelp 		: Boolean default false;
		To_Parent			: Association to API;
	}
	
	@cds.persistence.skip: true
	entity APIHubContent {
		key Id              : String(256);
	 	Name                : String(256);
	 	Title               : String(256);
	 	ShortText           : String(1024);
	 	Version             : String(16);
	 	ServiceCode         : String(32);
	 	State               : String(32);
	}	

