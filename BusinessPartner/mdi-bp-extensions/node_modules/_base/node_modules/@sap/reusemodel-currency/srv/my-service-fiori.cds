using cds.foundation.sap.currency as currencyService from './my-service.cds';

annotate currencyService.Service.Currencies with @(
	Capabilities.InsertRestrictions.Insertable : true,
	Capabilities.DeleteRestrictions.Deletable : true,
	Capabilities.UpdateRestrictions.Updatable : true,
	Capabilities.SearchRestrictions.Searchable : false,
	
	Capabilities.FilterRestrictions.NonFilterableProperties: [
        CurrencyMinorUnitExponent,
        BusConfignVersion
    ],
     UI.FilterFacets:[
         	{$Type:'UI.ReferenceFacet',Label:'{i18n>AdditionalFilters}', Target: '@UI.FieldGroup#filter' }
        ],
	  UI.FieldGroup#filter: {
		Data: [
		    {$Type: 'UI.DataField', Value: localised.CurrencyThreeLetterISOCode},
		    {$Type: 'UI.DataField', Value: localised.CurrencyTextLanguageCode}
		]
    	},
	UI.HeaderInfo: {
		TypeName: '{i18n>Currency}',
		TypeNamePlural: '{i18n>Currencies}',
		Title: {Value: CurrencyThreeLetterISOCode}
	},
	
	UI.SelectionFields: [ 
		CurrencyThreeLetterISOCode,
		CurrencyThreeDigitISOCode,
		localised.CurrencyISOCodeName
   	],
   	
	UI.LineItem: [
	 	{$Type: 'UI.DataField', Label: '{i18n>ThreeLetterISOCodeOfCurrency}', Value: CurrencyThreeLetterISOCode},
	 	{$Type: 'UI.DataField', Label: '{i18n>ThreeDigitISOCodeOfCurrency}', Value: CurrencyThreeDigitISOCode},
	 	{$Type: 'UI.DataField', Label: '{i18n>MinorUnitOfTheCurrency}', Value: CurrencyMinorUnitExponent},
	 	{$Type: 'UI.DataField', Label: '{i18n>CurrencyText}', Value: localised.CurrencyISOCodeName}
	 ],
//Check if needed	 
	UI.HeaderFacets: [
		{$Type:'UI.ReferenceFacet', Target: '@UI.FieldGroup#CurrencyHeader' }
	],
//Check if needed	 
	UI.FieldGroup#CurrencyHeader: {
		Data: [
	 	{$Type: 'UI.DataField', Label: '{i18n>CurrencyText}', Value: localised.CurrencyISOCodeName}
		]
	},
	
	UI.FieldGroup#ConfigurationData: {
		Data: [
		{$Type: 'UI.DataField', Label: '{i18n>ThreeLetterISOCodeOfCurrency}', Value: CurrencyThreeLetterISOCode},
	 	{$Type: 'UI.DataField', Label: '{i18n>ThreeDigitISOCodeOfCurrency}', Value: CurrencyThreeDigitISOCode},
	 	{$Type: 'UI.DataField', Label: '{i18n>MinorUnitOfTheCurrency}', Value: CurrencyMinorUnitExponent}
		]
	},
	
	UI.Facets: [
		{$Type:'UI.CollectionFacet', Label: '{i18n>Currency}',
			Facets: [
				{$Type:'UI.ReferenceFacet', Target: '@UI.FieldGroup#ConfigurationData'},
			],
		},
		{$Type:'UI.ReferenceFacet', Label: '{i18n>CurrencyTexts}', ID: 'CurrencyText', Target: 'text/@UI.LineItem' }
	],
){
	CurrencyThreeLetterISOCode @(
		Common.FieldControl: #ReadOnly,
		Common.ValueList: {
			CollectionPath: 'CurrenciesValueHelp',
			Label: '{i18n>Currency}',
			Parameters: [
				{ $Type: 'Common.ValueListParameterOut', LocalDataProperty: 'CurrencyThreeLetterISOCode', ValueListProperty: 'CurrencyThreeLetterISOCode'},
				{ $Type: 'Common.ValueListParameterDisplayOnly', ValueListProperty: 'CurrencyThreeDigitISOCode'},
				{ $Type: 'Common.ValueListParameterDisplayOnly', ValueListProperty: 'CurrencyISOCodeName'},
		]}
	);
	CurrencyThreeDigitISOCode @(
		Common.ValueList: {
			CollectionPath: 'CurrenciesValueHelp',
			Label: '{i18n>Currency}',
			Parameters: [
				{ $Type: 'Common.ValueListParameterDisplayOnly',  ValueListProperty: 'CurrencyThreeLetterISOCode'},
				{ $Type: 'Common.ValueListParameterOut',LocalDataProperty: 'CurrencyThreeDigitISOCode',ValueListProperty: 'CurrencyThreeDigitISOCode'},
				{ $Type: 'Common.ValueListParameterDisplayOnly', ValueListProperty: 'CurrencyISOCodeName'},
		]}
	);
	BusConfignVersion @(
    	Common.FieldControl: #Hidden
    );
};

annotate currencyService.Service.CurrencyTexts with @(
	Capabilities.InsertRestrictions.Insertable : true,
	Capabilities.DeleteRestrictions.Deletable : true,
	Capabilities.UpdateRestrictions.Updatable : true,
	Capabilities.SearchRestrictions.Searchable : false, 
	
	UI.HeaderInfo: {
		TypeName: '{i18n>CurrencyText}',
		TypeNamePlural: '{i18n>Items}',
		Title: {Value: CurrencyTextLanguageCode}
	},
	
	UI.FieldGroup#CurrencyText: {
		Data: [
			{$Type: 'UI.DataField', Label: '{i18n>LanguageCode}', Value: CurrencyTextLanguageCode},
			{$Type: 'UI.DataField', Label: '{i18n>CurrencyFullName}', Value: CurrencyISOCodeName}
		]
	},	

	UI.Facets: [
		{$Type:'UI.CollectionFacet', Label: '{i18n>CurrencyText}',
			Facets: [
				{$Type:'UI.ReferenceFacet', Target: '@UI.FieldGroup#CurrencyText'},
			],
		}
	],
	
	// List Report Is it needed? 
	UI.SelectionFields: [ 
		CurrencyTextLanguageCode
   	],
	
	UI.LineItem: [
		{$Type: 'UI.DataField', Label: '{i18n>CurrencyCode}', Value: CurrencyThreeLetterISOCode},
		{$Type: 'UI.DataField', Label: '{i18n>LanguageCode}', Value: CurrencyTextLanguageCode},
		{$Type: 'UI.DataField', Label: '{i18n>CurrencyFullName}', Value: CurrencyISOCodeName}
	]

){
	CurrencyThreeLetterISOCode @(
		Common.FieldControl: #ReadOnly,
	);
	CurrencyTextLanguageCode @(
		Common.FieldControl: #ReadOnly,
		Common.ValueList: {
			CollectionPath: 'LanguageValueHelp',
			Label: '{i18n>CurrencyText}',
			Parameters: [
				{ $Type: 'Common.ValueListParameterOut', LocalDataProperty: 'CurrencyTextLanguageCode', ValueListProperty: 'LanguageTwoLetterISOCode'},
				{ $Type: 'Common.ValueListParameterDisplayOnly', ValueListProperty: 'LanguageName'},
		]}
	);
	BusConfignVersion @(
    	Common.FieldControl: #Hidden
    );
};
