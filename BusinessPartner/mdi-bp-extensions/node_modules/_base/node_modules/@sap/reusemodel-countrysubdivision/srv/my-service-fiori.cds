
	using cds.foundation.sap.countrysubdivision as countryRegionService from './my-service.cds';
	
	
	annotate countryRegionService.Service.Countries with @(
		Capabilities.InsertRestrictions.Insertable : true,
		Capabilities.DeleteRestrictions.Deletable : true,
		Capabilities.UpdateRestrictions.Updatable : true,
		Capabilities.SearchRestrictions.Searchable : false,
		
		UI.HeaderInfo: {
			TypeName: '{i18n>Country}',
			TypeNamePlural: '{i18n>Countries}',
			Title: {
			Value: CountryTwoLetterISOCode
			},
		},
		UI.HeaderFacets: [
			{$Type:'UI.ReferenceFacet', Target: '@UI.FieldGroup#CountryHeader' }
		],
		
		UI.FieldGroup#CountryHeader: {
			Data: [
				{$Type: 'UI.DataField', Label: '{i18n>ShortName}', Value: localised.CountryISOShortName}
			]
		},
		UI.FilterFacets:[
         	{$Type:'UI.ReferenceFacet',Label:'{i18n>AdditionalFilters}', Target: '@UI.FieldGroup#filter' }
        ],
        
        UI.FieldGroup#filter: {
		Data: [
		    {$Type: 'UI.DataField', Value: localised.CountryTwoLetterISOCode},
		    {$Type: 'UI.DataField', Value: localised.LanguageTwoLetterISOCode},
		    {$Type: 'UI.DataField', Value: localised.CountryISOFullName}
		]
    	},
		UI.FieldGroup#ConfigurationData: {
			Data: [
				{$Type: 'UI.DataField', Label: '{i18n>TwoLetterISOCode}', Value: CountryTwoLetterISOCode},
				{$Type: 'UI.DataField', Label: '{i18n>ThreeLetterISOCode}', Value: CountryThreeLetterISOCode},
				{$Type: 'UI.DataField', Label: '{i18n>ThreeDigitISOCode}', Value: CountryThreeDigitISOCode}
	
			]
		},
		UI.Facets: [
			{$Type:'UI.CollectionFacet', Label: '{i18n>Country}',
				Facets: [
					{$Type:'UI.ReferenceFacet', Target: '@UI.FieldGroup#ConfigurationData'}
				],
			},
		
			{$Type:'UI.ReferenceFacet', ID: 'CountryText', Label: '{i18n>CountryText}', Target: 'text/@UI.LineItem'},
			{$Type:'UI.ReferenceFacet', ID: 'Subdivision', Label: '{i18n>Subdivision}', Target: 'subdivision/@UI.LineItem'}
	
		],
		UI.SelectionFields: [ 
		
			CountryTwoLetterISOCode,
			CountryThreeLetterISOCode,
			CountryThreeDigitISOCode,
			localised.CountryISOShortName
		
	   	],
		UI.LineItem: [
			{$Type: 'UI.DataField',Label: '{i18n>TwoLetterISOCode}', Value: CountryTwoLetterISOCode},
			{$Type: 'UI.DataField', Label: '{i18n>ThreeLetterISOCode}', Value: CountryThreeLetterISOCode},
			{$Type: 'UI.DataField', Label: '{i18n>ThreeDigitISOCode}', Value: CountryThreeDigitISOCode},
			{$Type: 'UI.DataField', Label: '{i18n>ShortName}', Value: localised.CountryISOShortName}
			
	
		]
		
		){
		CountryTwoLetterISOCode@(
			Common.Label:'{i18n>TwoLetterISOCode}',
			Common.FieldControl: #ReadOnly,
			Common.ValueList: {
				CollectionPath: 'CountriesValueHelp',
				Label: 'Test',
				Parameters: [
				{ $Type: 'Common.ValueListParameterInOut', LocalDataProperty: 'CountryTwoLetterISOCode', ValueListProperty: 'CountryTwoLetterISOCode'},
				{ $Type: 'Common.ValueListParameterDisplayOnly', ValueListProperty: 'CountryISOShortName'},
			]}
			);
		CountryThreeLetterISOCode@(
			Common.ValueList: {
				CollectionPath: 'CountriesValueHelp3Letter',
				Label: 'Test',
				Parameters: [
				{ $Type: 'Common.ValueListParameterInOut', LocalDataProperty: 'CountryThreeLetterISOCode', ValueListProperty: 'CountryThreeLetterISOCode'},
				{ $Type: 'Common.ValueListParameterDisplayOnly', ValueListProperty: 'CountryISOShortName'},
			]}
		);
		CountryThreeDigitISOCode@(
			Common.ValueList: {
				CollectionPath: 'CountriesValueHelp3Digit',
				Label: 'Test',
				Parameters: [
				{ $Type: 'Common.ValueListParameterInOut', LocalDataProperty: 'CountryThreeDigitISOCode', ValueListProperty: 'CountryThreeDigitISOCode'},
                { $Type: 'Common.ValueListParameterDisplayOnly', ValueListProperty: 'CountryISOShortName'},
			]}
		);
		BusConfignVersion @(
                              Common.FieldControl: #Hidden
                              );
		};
		
		
	
		annotate countryRegionService.Service.CountryTexts with @(
		Capabilities.InsertRestrictions.Insertable : true,
		Capabilities.DeleteRestrictions.Deletable : true,
		Capabilities.UpdateRestrictions.Updatable : true,
		Capabilities.SearchRestrictions.Searchable : false,
		
		
		
		UI.HeaderInfo: {
			TypeName: '{i18n>CountryText}',
			TypeNamePlural: '{i18n>Items}',
			Title: {Value:LanguageTwoLetterISOCode }
		
		},
		
		UI.FieldGroup#CountryText: {
			
			Data: [
			
				{$Type: 'UI.DataField', Label: '{i18n>LanguageCode}', Value: LanguageTwoLetterISOCode},
				{$Type: 'UI.DataField', Label: '{i18n>ShortDescription}', Value: CountryISOShortName},
				{$Type: 'UI.DataField', Label: '{i18n>LongDescription}', Value: CountryISOFullName}
			]
		},	
	
		UI.Facets: [
			{$Type:'UI.CollectionFacet', Label: '{i18n>CountryText}',
		Facets: [
					{$Type:'UI.ReferenceFacet',Target: '@UI.FieldGroup#CountryText'}
				],
			}
		],
		UI.SelectionFields: [ 
			LanguageTwoLetterISOCode
	   	],
	   	
		UI.LineItem: [
		
				{$Type: 'UI.DataField', Label: '{i18n>TwoLetterISOCode}', Value: CountryTwoLetterISOCode},
				{$Type: 'UI.DataField', Label: '{i18n>LanguageCode}', Value: LanguageTwoLetterISOCode},
				{$Type: 'UI.DataField', Label: '{i18n>ShortDescription}',Value: CountryISOShortName},
				{$Type: 'UI.DataField', Label: '{i18n>LongDescription}',Value: CountryISOFullName}
		]
		
	
	){LanguageTwoLetterISOCode @(
				Common.Label: '{i18n>LanguageCode}',
				Common.FieldControl: #ReadOnly,
				Common.ValueList: {
					CollectionPath: 'LanguageCodesValueHelp',
					Label: 'Test',
					Parameters: [
					{ $Type: 'Common.ValueListParameterInOut', LocalDataProperty: 'LanguageTwoLetterISOCode', ValueListProperty: 'LanguageTwoLetterISOCode'},
					{ $Type: 'Common.ValueListParameterDisplayOnly', ValueListProperty: 'LanguageName'},
					
		]}
			);
			
			CountryTwoLetterISOCode@(
			Common.Label:'{i18n>TwoLetterISOCode}',
			Common.FieldControl: #ReadOnly
			
			);
			BusConfignVersion @(
                              Common.FieldControl: #Hidden
                              );
			};
		
	
	
	
	annotate countryRegionService.Service.Subdivisions with @(
		Capabilities.InsertRestrictions.Insertable : true,
		Capabilities.DeleteRestrictions.Deletable : true,
		Capabilities.UpdateRestrictions.Updatable : true,
		Capabilities.SearchRestrictions.Searchable : false,
		
		UI.HeaderInfo: {
			TypeName: '{i18n>Subdivision}',
			TypeNamePlural: '{i18n>Items}',
			Title: {$Type: 'UI.DataField', Value: CountrySubdivision}
			
		},
		UI.HeaderFacets: [
			{$Type:'UI.ReferenceFacet', Target: '@UI.FieldGroup#SubdivisionHeader' }
		],
		
		UI.FieldGroup#SubdivisionHeader: {
			Data: [
				{$Type: 'UI.DataField', Label: '{i18n>SubdivisionName}', Value: localisedSubdivision.CountrySubdivisionName},
			
			]
		},
		
		UI.FieldGroup#SubdivisionData: {
			
			Data: [
			
				{$Type: 'UI.DataField', Label: '{i18n>SubdivisionISOCode}', Value: CountrySubdivision},
				{$Type: 'UI.DataField', Label: '{i18n>Type}', Value: CountrySubdivisionType},
				{$Type: 'UI.DataField',Label: '{i18n>RegionalDivision}', Value: CountrySubdivisionRegionaldivision},
				{$Type: 'UI.DataField',Label: '{i18n>RomanizationSystem}', Value: CountrySubdivisionRomanizationSystem}
			]
		},	
	
		UI.Facets: [
			{$Type:'UI.CollectionFacet', Label: '{i18n>Subdivision}',
				Facets: [
					{$Type:'UI.ReferenceFacet', Target: '@UI.FieldGroup#SubdivisionData'},
				],
			},
				{$Type:'UI.ReferenceFacet', ID: 'SubdivisionText', Label: '{i18n>SubdivisionText}', Target: 'subdivisionText/@UI.LineItem'}
		],
		UI.SelectionFields: [ 
		CountrySubdivision	
	   	],
	   	
		UI.LineItem: [
		
				{$Type: 'UI.DataField', Label: '{i18n>TwoLetterISOCode}', Value: CountryTwoLetterISOCode},
				{$Type: 'UI.DataField',Label: '{i18n>SubdivisionISOCode}',  Value: CountrySubdivision},
				{$Type: 'UI.DataField',Label: '{i18n>Type}', Value: CountrySubdivisionType},
				{$Type: 'UI.DataField',Label: '{i18n>RegionalDivision}', Value: CountrySubdivisionRegionaldivision},
				{$Type: 'UI.DataField', Label: '{i18n>RomanizationSystem}',Value: CountrySubdivisionRomanizationSystem},
				{$Type: 'UI.DataField', Label: '{i18n>SubdivisionName}', Value: localisedSubdivision.CountrySubdivisionName}
		]
		
	
	) {
		CountrySubdivision@(
				Common.Label: '{i18n>SubdivisionISOCode}',
				Common.FieldControl: #ReadOnly,
				Common.ValueList: {
				CollectionPath: 'SubdivisionsValueHelp',
				Label: 'Test',
				Parameters: [
				{ $Type: 'Common.ValueListParameterInOut', LocalDataProperty: 'CountrySubdivision', ValueListProperty: 'CountrySubdivision'},
			    { $Type: 'Common.ValueListParameterDisplayOnly', ValueListProperty: 'CountrySubdivisionName'},
				
			]}
			);
		CountryTwoLetterISOCode@(
			Common.Label:'{i18n>TwoLetterISOCode}',
			Common.FieldControl: #ReadOnly
			
			);	
		CountrySubdivisionType@(
			Common.ValueList: {
				CollectionPath: 'SubdivisionsValueHelpType',
				Label: 'Test',
				Parameters: [
				{ $Type: 'Common.ValueListParameterInOut', LocalDataProperty: 'CountrySubdivisionType', ValueListProperty: 'CountrySubdivisionType'},
				{ $Type: 'Common.ValueListParameterDisplayOnly', ValueListProperty: 'CountrySubdivisionName'},
			]}
		);
		
		CountrySubdivisionRegionaldivision@(
			Common.ValueList: {
				CollectionPath: 'SubdivisionsValueHelpRD',
				Label: 'Test',
				Parameters: [
				{ $Type: 'Common.ValueListParameterInOut', LocalDataProperty: 'CountrySubdivisionRegionaldivision', ValueListProperty: 'CountrySubdivisionRegionaldivision'},
				{ $Type: 'Common.ValueListParameterDisplayOnly', ValueListProperty: 'CountrySubdivisionName'},
				
			]}
		);
		CountrySubdivisionRomanizationSystem@(
			Common.ValueList: {
				CollectionPath: 'SubdivisionsValueHelpRS',
				Label: 'Test',
				Parameters: [
				{ $Type: 'Common.ValueListParameterInOut', LocalDataProperty: 'CountrySubdivisionRomanizationSystem', ValueListProperty: 'CountrySubdivisionRomanizationSystem'},
				{ $Type: 'Common.ValueListParameterDisplayOnly', ValueListProperty: 'CountrySubdivisionName'},
			]}
		);
		BusConfignVersion @(
                              Common.FieldControl: #Hidden
                              );

	 };
	
	
	
	
	
	annotate countryRegionService.Service.SubdivisionTexts with @(
		Capabilities.InsertRestrictions.Insertable : true,
		Capabilities.DeleteRestrictions.Deletable : true,
		Capabilities.UpdateRestrictions.Updatable : true,
		Capabilities.SearchRestrictions.Searchable : false,
		
		UI.HeaderInfo: {
			TypeName: '{i18n>SubdivisionText}',
			TypeNamePlural: '{i18n>Items}',
			Title: {Value: LanguageTwoLetterISOCode}
		
		},
		
		UI.FieldGroup#SubdivisionTextData: {
			Data: [
			
				{$Type: 'UI.DataField', Label: '{i18n>LanguageCode}', Value: LanguageTwoLetterISOCode},
				{$Type: 'UI.DataField',Label: '{i18n>SubdivisionName}', Value: CountrySubdivisionName}
				
			]
		},	
	
		UI.Facets: [
			{$Type:'UI.CollectionFacet', Label: '{i18n>SubdivisionText}',
				Facets: [
					{$Type:'UI.ReferenceFacet', Target: '@UI.FieldGroup#SubdivisionTextData'}
				],
			}
		],
		UI.SelectionFields: [ 
			LanguageTwoLetterISOCode
	   	],
	   	
		UI.LineItem: [
	
				{$Type: 'UI.DataField', Label: '{i18n>SubdivisionISOCode}', Value: CountrySubdivision},
				{$Type: 'UI.DataField', Label: '{i18n>LanguageCode}', Value: LanguageTwoLetterISOCode},
				{$Type: 'UI.DataField',Label: '{i18n>SubdivisionName}', Value: CountrySubdivisionName}
		]
		
	
	){LanguageTwoLetterISOCode @(
				Common.Label: '{i18n>LanguageCode}',
				Common.FieldControl: #ReadOnly,
				Common.ValueList: {
					CollectionPath: 'LanguageCodesValueHelp',
					Label: 'Test',
					Parameters: [
					{ $Type: 'Common.ValueListParameterInOut', LocalDataProperty: 'LanguageTwoLetterISOCode', ValueListProperty: 'LanguageTwoLetterISOCode'},
					{ $Type: 'Common.ValueListParameterDisplayOnly', ValueListProperty: 'LanguageName'},
		]}
			);
			CountrySubdivision@(
				Common.Label: '{i18n>SubdivisionISOCode}',
				Common.FieldControl: #ReadOnly
				
			);
			BusConfignVersion @(
                              Common.FieldControl: #Hidden
                              );
			};
