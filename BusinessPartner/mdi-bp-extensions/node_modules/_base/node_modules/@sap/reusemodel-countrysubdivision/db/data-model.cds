namespace cds.foundation.sap.countrysubdivision;

using cds.foundation.sap.countrysubdivision.CountryTwoLetterISOCode from './types';
using cds.foundation.sap.countrysubdivision.CountryThreeLetterISOCode from './types';
using cds.foundation.sap.countrysubdivision.CountryThreeDigitISOCode from './types';
using cds.foundation.sap.countrysubdivision.CountrySubdivisionType from './types';
using cds.foundation.sap.countrysubdivision.CountryISOFullName from './types';
using cds.foundation.sap.countrysubdivision.LanguageTwoLetterISOCode from './types';
using cds.foundation.sap.countrysubdivision.CountryISOShortName from './types';
using cds.foundation.sap.countrysubdivision.CountrySubdivision from './types';
using cds.foundation.sap.countrysubdivision.CountrySubdivisionTwoLetterISOCode from './types';
using cds.foundation.sap.countrysubdivision.CountrySubdivisionName from './types';
using cds.foundation.sap.countrysubdivision.CountrySubdivisionNameInLocalLanguage from './types';
using cds.foundation.sap.countrysubdivision.CountrySubdivisionRegionaldivision from './types';
using cds.foundation.sap.countrysubdivision.CountrySubdivisionRomanizationSystem from './types';

using cds.foundation.sap.busconfign.BusinessConfiguration as BusConfigurationEntity from '@sap/BusinessConfigurationModel';



entity Countries: BusConfigurationEntity{ 
	key CountryTwoLetterISOCode: CountryTwoLetterISOCode;  
	CountryThreeLetterISOCode: CountryThreeLetterISOCode;
	CountryThreeDigitISOCode: CountryThreeDigitISOCode;
	text: Association to many CountryTexts on text.CountryTwoLetterISOCode = CountryTwoLetterISOCode and text.BusConfignVersion = BusConfignVersion; 
	subdivision: Association to many Subdivisions on subdivision.CountryTwoLetterISOCode = CountryTwoLetterISOCode and subdivision.BusConfignVersion = BusConfignVersion;
	localised: association[1] to CountryTexts on localised.CountryTwoLetterISOCode = CountryTwoLetterISOCode and localised.BusConfignVersion = BusConfignVersion and localised.LanguageTwoLetterISOCode = SUBSTRING(SESSION_CONTEXT('LOCALE'),1,2);
}

entity I_Countries as select from Countries{*} excluding { BusConfignIsDeleted };

entity C_Countries as select from I_Countries{*};


entity CountryTexts: BusConfigurationEntity{ 
	key CountryTwoLetterISOCode: CountryTwoLetterISOCode;
	key LanguageTwoLetterISOCode: LanguageTwoLetterISOCode;
	CountryISOShortName: CountryISOShortName;
	CountryISOFullName: CountryISOFullName; 
}

entity I_CountryTexts as select from CountryTexts{*} excluding { BusConfignIsDeleted };

entity C_CountryTexts as select from I_CountryTexts{*};

entity I_CountriesWithTexts as select from Countries{
	key CountryTwoLetterISOCode as CountryTwoLetterISOCode,
	CountryThreeLetterISOCode as CountryThreeLetterISOCode,
	CountryThreeDigitISOCode as CountryThreeDigitISOCode,
	key COALESCE(text.LanguageTwoLetterISOCode, '') as LanguageTwoLetterISOCode : LanguageTwoLetterISOCode,
	text.CountryISOShortName as CountryISOShortName,
	text.CountryISOFullName as CountryISOFullName,
	key BusConfignVersion
};

entity I_CountryValueHelp as select from Countries{
	key CountryTwoLetterISOCode as CountryTwoLetterISOCode,
	CountryThreeLetterISOCode as CountryThreeLetterISOCode,
	CountryThreeDigitISOCode as CountryThreeDigitISOCode,
	key COALESCE(localised.LanguageTwoLetterISOCode, '') as LanguageTwoLetterISOCode: LanguageTwoLetterISOCode,
	localised.CountryISOShortName as CountryISOShortName,
	localised.CountryISOFullName as CountryISOFullName,
	key BusConfignVersion
};

entity C_CountriesWithTexts as select from I_CountriesWithTexts{*};

entity C_CountryValueHelp as select from I_CountryValueHelp{*};


entity Subdivisions: BusConfigurationEntity{ 
	key CountryTwoLetterISOCode: CountryTwoLetterISOCode;
	key CountrySubdivision: CountrySubdivision;
	CountrySubdivisionType: CountrySubdivisionType;
	CountrySubdivisionRegionaldivision: CountrySubdivisionRegionaldivision;
	CountrySubdivisionRomanizationSystem: CountrySubdivisionRomanizationSystem;
	subdivisionText: Association to many SubdivisionTexts on subdivisionText.CountryTwoLetterISOCode = CountryTwoLetterISOCode and subdivisionText.CountrySubdivision = CountrySubdivision and subdivisionText.BusConfignVersion = BusConfignVersion; 
	localisedSubdivision: association[1] to SubdivisionTexts on localisedSubdivision.CountryTwoLetterISOCode = CountryTwoLetterISOCode and localisedSubdivision.BusConfignVersion = BusConfignVersion and localisedSubdivision.CountrySubdivision = CountrySubdivision and localisedSubdivision.LanguageTwoLetterISOCode = SUBSTRING(SESSION_CONTEXT('LOCALE'),1,2);
}


entity SubdivisionTexts: BusConfigurationEntity{
	key CountryTwoLetterISOCode: CountryTwoLetterISOCode;
	key CountrySubdivision: CountrySubdivision;
	key LanguageTwoLetterISOCode: LanguageTwoLetterISOCode;
	CountrySubdivisionName: CountrySubdivisionName;
}

entity I_Subdivisions as select from Subdivisions{*} excluding { BusConfignIsDeleted };

entity C_Subdivisions as select from I_Subdivisions{*};

entity I_SubdivisionTexts as select from SubdivisionTexts{*} excluding { BusConfignIsDeleted };

entity C_SubdivisionTexts as select from I_SubdivisionTexts{*};

entity I_SubdivisionsWithTexts as select from Subdivisions{ 
	key CountryTwoLetterISOCode,
	key CountrySubdivision,
	CountrySubdivisionType as CountrySubdivisionType,
	CountrySubdivisionRegionaldivision as CountrySubdivisionRegionaldivision,
	CountrySubdivisionRomanizationSystem as CountrySubdivisionRomanizationSystem,
	key COALESCE(subdivisionText.LanguageTwoLetterISOCode, '') as CountrySubdivisionTextLanguageCode : LanguageTwoLetterISOCode,
	subdivisionText.CountrySubdivisionName as CountrySubdivisionName,
	key BusConfignVersion as BusConfignVersion
};

entity I_SubdivisionValueHelp as select from Subdivisions{ 
	key CountryTwoLetterISOCode,
	key CountrySubdivision,
	CountrySubdivisionType as CountrySubdivisionType,
	CountrySubdivisionRegionaldivision as CountrySubdivisionRegionaldivision,
	CountrySubdivisionRomanizationSystem as CountrySubdivisionRomanizationSystem,
	key COALESCE(localisedSubdivision.LanguageTwoLetterISOCode, '') as CountrySubdivisionTextLanguageCode : String(2),
	localisedSubdivision.CountrySubdivisionName as CountrySubdivisionName,
	key BusConfignVersion as BusConfignVersion
};

entity C_SubdivisionsWithTexts as select from I_SubdivisionsWithTexts{*};

entity C_SubdivisionValueHelp as select from I_SubdivisionValueHelp{*};

entity I_CountriesAndSubdivisionsWithTexts as select from Countries{
	key CountryTwoLetterISOCode,
	CountryThreeLetterISOCode,
	CountryThreeDigitISOCode,
	key COALESCE(text.LanguageTwoLetterISOCode, '') as CountryTextLanguageCode : String(2),
	text.CountryISOShortName as CountryISOShortName,
	text.CountryISOFullName as CountryISOFullName,
	key COALESCE(subdivision.CountrySubdivision, '') as CountrySubdivision : String(3),
	subdivision.CountrySubdivisionType,
	subdivision.CountrySubdivisionRegionaldivision,
	subdivision.CountrySubdivisionRomanizationSystem,
	key COALESCE(subdivision.subdivisionText.LanguageTwoLetterISOCode, '') as CountrySubdivisionTextLanguageCode : String(2),
	subdivision.subdivisionText.CountrySubdivisionName as CountrySubdivisionName,
	key BusConfignVersion
} where (((text.LanguageTwoLetterISOCode like '') OR (subdivision.subdivisionText.LanguageTwoLetterISOCode like '') OR (text.LanguageTwoLetterISOCode is null) OR (subdivision.subdivisionText.LanguageTwoLetterISOCode is null)) OR (text.LanguageTwoLetterISOCode = subdivision.subdivisionText.LanguageTwoLetterISOCode));

entity C_CountriesAndSubdivisionsWithTexts as select from I_CountriesAndSubdivisionsWithTexts{*};
