/*This is Locate Object Implementation of BP Services, it currently considers only 888 - OITC */

namespace mdo;

using mdo.ObjectIdentifierTypes as ObjectIdentifierTypes from '@sap/mdm-orchestration-reuse/reuse';
using mdo.DistributionStatusCounter as DistributionStatusCounter from '@sap/mdm-orchestration-reuse/reuse';
using mdo.LastDistributionStatus as LastDistributionStatus from '@sap/mdm-orchestration-reuse/reuse';
using mdo.DistributionStatus as DistributionStatus from '@sap/mdm-orchestration-reuse/reuse'; //'@sap/mdm-orchestration-reuse/db/DistributionStatusModel';
using mdo.ChangePointer as ChangePointer from '@sap/mdm-orchestration-reuse/reuse';
using mdo.ObjectTypes as ObjectTypes from '@sap/mdm-orchestration-reuse/reuse';
using com.sap.mdm.bp.BPKeyMappingModel.BusinessPartnerKeyMapping as BusinessPartnerKeyMapping from './BPKeyMappingModel';
using com.sap.mdm.bp.GenericConfigurationsModel.GenericConfigurations as GenericConfigurations from './GenericConfigurationsModel';
using com.sap.mdm.bp.BusinessPartnerModel.BusinessPartner as BusinessPartner from './BusinessPartner';


//select own BusinessSystem from generic configurations
view OwnBusinessSystem as
    select from GenericConfigurations {
        ConfigurationValue as BusinessSystem
    }
    where
        ConfigurationName = 'Business System';

//for all instances distributed, set own business system name and businesspartner number from BP table to take care of $numbers.
view OwnObjectID as
    select from DistributionStatusCounter as A1
    inner join BusinessPartner as A2
        on A2.Id = A1.ObjectInstanceKey
    cross join OwnBusinessSystem as A3 {
        key A1.ObjectInstanceKey,
        key A2.BusinessPartner as ObjectId,
        key A3.BusinessSystem  as Destination,
            A1.Counter,
            '147'              as ObjectTypeCode        : String(10),
            '888'              as ObjectIdentifierType  : String(10),
            true               as IsLocalBusinessSystem : Boolean
    };

//Over view page of locate object UI - own entries only
view KeyMappingDistributionStatusOverview as
    select from OwnObjectID as T1
    left outer join ObjectTypes as T2
        on  T2.objectTypeCode    = T1.ObjectTypeCode
        and T2.BusConfignVersion = 4294967296
    left outer join ObjectIdentifierTypes as T3
        on T3.identifierType = T1.ObjectIdentifierType
    {
        key T1.ObjectInstanceKey,
        key T1.ObjectId,
        key T1.ObjectIdentifierType,
            T1.ObjectTypeCode,
            T1.Destination          as Destination,
            T1.Destination          as System,
            T1.ObjectInstanceKey    as MappingGroupId,
            T1.Counter,
            T2.localizedDescription as ObjectTypeCodeText,
            T3.localizedDescription as ObjectIdentifierTypeText,
            T1.IsLocalBusinessSystem
    };

//select entries from BP KM tables with business system name
view BPKeyMapping as
    select from BusinessPartnerKeyMapping {
        to_BusinessPartner.Id            as ObjectInstanceKey,
        to_BusinessSystem.BusinessSystem as BusinessSystem,
        BusinessPartner                  as ObjectID,
    };

//pick foreign system ID's from key mapping table for BusinessPartner Number OITC
view ForeignObjectID as
    select from BPKeyMapping as B1
    inner join GenericConfigurations as B2
        on  B2.ConfigurationName =  'Business System'
        and B1.BusinessSystem    <> B2.ConfigurationValue
    {
        key B1.ObjectInstanceKey as ObjectInstanceKey,
        key BusinessSystem       as Destination,
        key B1.ObjectID          as ObjectId,
            false                as IsLocalBusinessSystem : Boolean
    };

//for all instances distributed, set own business system name and businesspartner number from BP table to take care of $numbers.
view DistributedOwnObjectID as
    select from OwnObjectID as A1 {
        key ObjectInstanceKey,
        key ObjectId,
        key Destination,
        key ObjectIdentifierType,
            ObjectTypeCode,
            IsLocalBusinessSystem
    };

//if foreign key mappings are not available on SCP yet, set defaults
view DistributedForeignObjectID as
    select from LastDistributionStatus as C1
    left outer join ForeignObjectID as C2
        on  C1.ObjectInstanceKey = C2.ObjectInstanceKey
        and C1.Destination       = C2.Destination
    {
        key C1.ObjectInstanceKey,
        key ifnull(
                C2.ObjectId, ' '
            )     as ObjectId              : String(10),
        key C1.Destination,
        key '888' as ObjectIdentifierType  : String(10),
            '147' as ObjectTypeCode        : String(10),
            false as IsLocalBusinessSystem : Boolean
    };

//create a union for which status is available with key mappings if any present on MDM BP
view BusinessPartnerLocateObject as
        select from DistributedOwnObjectID
    union
        select from DistributedForeignObjectID;

//Detail view page of Locate Object UI - own + foreign entries
view KeyMappingDistributionStatusDetail as
    select from BusinessPartnerLocateObject as T1
    left outer join LastDistributionStatus as T2
        on  T1.ObjectInstanceKey = T2.ObjectInstanceKey
        and T1.Destination       = T2.Destination
    left outer join ChangePointer as T3
        on T3.Id = T2.ChangePointerId
    left outer join ObjectTypes as T6
        on  T6.objectTypeCode    = T1.ObjectTypeCode
        and T6.BusConfignVersion = 4294967296
    left outer join ObjectIdentifierTypes as T7
        on T7.identifierType = T1.ObjectIdentifierType
    {
        key T1.ObjectInstanceKey,
        key T1.ObjectId,
        key T1.ObjectIdentifierType,
        key T1.Destination          as Destination,
            T1.Destination          as System,
            T1.ObjectTypeCode,
            T1.ObjectInstanceKey    as MappingGroupId,
            T2.ReplicationStatus    as ReplicationStatus,
            T2.LastStatusChange     as LastExecutionTime,
            T3.ExecutionTime        as NextExecutionTime,
            T6.localizedDescription as ObjectTypeCodeText,
            T7.localizedDescription as ObjectIdentifierTypeText,
            T1.IsLocalBusinessSystem
    };
