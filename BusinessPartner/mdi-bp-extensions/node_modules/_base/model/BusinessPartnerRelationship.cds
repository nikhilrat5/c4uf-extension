namespace com.sap.mdm.bp;

using com.sap.mdm.bp.CommonTypes as CommonTypes from './CommonTypes';
using com.sap.mdm.bp.BusinessPartnerModel as BusinessPartnerModel from './BusinessPartner';
using com.sap.mdm.bp.AddressModel as AddressModel from './AddressModel';
using com.sap.mdm.bp.ContactPersonFunctionModel as ContactPersonFunctionModel from './ContactPersonFunctionModel';
using com.sap.mdm.bp.ContactPersonDepartmentModel as ContactPersonDepartmentModel from './ContactPersonDepartmentModel';

context BusinessPartnerRelationshipModel {

    @mdm.soap.path : 'BusinessPartnerRelationship'
    entity BusinessPartnerRelationship : tracked {
            @Core.LongDescription           : 'System generated unique identifier for the entity.'
        key Id                       : UUID;

            @Core.LongDescription           : 'A relationship may exist between two business partners. The business partner relationship category characterizes the features of the relationship.'
            @mdm.semantic.key               : 'RoleCode'
            RelationshipCategory     : CommonTypes.RelationshipCategory;

            @Core.LongDescription           : 'States whether the relationship is a standard relationship.'
            @mdm.standard.field.soap.target : 'BusinessPartnerRelationship/DefaultIndicator'
            IsDefault                : Boolean;

            KafkaOffset              : Integer64;
            Status                   : String(2);

            to_FirstBusinessPartner  : Association to one BusinessPartnerModel.BusinessPartner
                                           on  to_FirstBusinessPartner.Id                         =  FirstBusinessPartner_Id
                                           and to_FirstBusinessPartner.IsBusinessPurposeCompleted != true;
            to_SecondBusinessPartner : Association to one BusinessPartnerModel.BusinessPartner
                                           on  to_SecondBusinessPartner.Id                         =  SecondBusinessPartner_Id
                                           and to_SecondBusinessPartner.IsBusinessPurposeCompleted != true;

            @mdm.child
            to_ContactPerson         : Composition of one ContactPerson
                                           on to_ContactPerson.Parent_Id = Id;

            @Core.LongDescription           : 'Key identifying a business partner in the SAP system. The key is unique within a client.'
            @mdm.semantic.key               : 'BusinessPartnerUUID'
            FirstBusinessPartner_Id  : UUID;

            @Core.LongDescription           : 'Key identifying a business partner in the SAP system. The key is unique within a client.'
            @mdm.semantic.key               : 'RelationshipBusinessPartnerUUID'
            SecondBusinessPartner_Id : UUID;

            IsDeleted                : Boolean default false;

            @Core.LongDescription           : 'Validity Start Date of the master data object'
            @odata.on.update                : #now
            @odata.on.insert                : #now
            @sap.display.format             : 'Date'
            @mdm.standard.field.soap.target : 'BusinessPartnerRelationship/ValidityPeriod/StartDate'
            ValidityStartDate        : DateTime default timestamp'0001-01-01 00:00:00.0';

            @Core.LongDescription           : 'Validity End Date of the master data object'
            @sap.display.format             : 'Date'
            @mdm.standard.field.soap.target : 'BusinessPartnerRelationship/ValidityPeriod/EndDate'
            ValidityEndDate          : DateTime default timestamp'9999-12-31 23:59:59.0';
    }

    @mdm.soap.path : 'BusinessPartnerRelationship/ContactPerson'
    entity ContactPerson : managedObject, tracked {
        @Core.LongDescription           : 'Defines whether a person is an important figure (VIP) in the company.'
        @mdm.personal
        @mdm.standard.field.soap.target : 'BusinessPartnerRelationship/ContactPerson/VIPReasonCode'
        VipPartner                                   : String(1);

        @Core.LongDescription           : 'Department description at business partner'
        @mdm.personal
        @mdm.standard.field.soap.target : 'BusinessPartnerRelationship/ContactPerson/BusinessPartnerFunctionalAreaCode'
        Department                                   : String(4);

        @Core.LongDescription           : 'Function name of partner'
        @mdm.personal
        @mdm.standard.field.soap.target : 'BusinessPartnerRelationship/ContactPerson/BusinessPartnerFunctionTypeCode'
        PartnerFunction                              : String(4);

        @Core.LongDescription           : 'Indicates the authority a person has within a company.'
        @mdm.personal
        @mdm.standard.field.soap.target : 'BusinessPartnerRelationship/ContactPerson/PowerOfAttorneyTypeCode'
        PartnerAuthority                             : String(1);

        @Core.LongDescription           : 'Notes for Partner'
        @mdm.standard.field.soap.target : 'BusinessPartnerRelationship/ContactPerson/ContactPersonNote'
        Note                                         : String(40);

        @mdm.personal
        @mdm.standard.field.soap.target : 'BusinessPartnerRelationship/ContactPerson/CustomerContactPerson/ReceiverInternalID'
        CustomerContactPerson                        : String(10);

        @mdm.personal
        @mdm.standard.field.soap.target : 'BusinessPartnerRelationship/ContactPerson/SupplierContactPerson/ReceiverInternalID'
        SupplierContactPerson                        : String(10);

        @mdm.child
        @cascade                        : {![all] : true}
        to_WorkPlaceAddressInformation               : Association to many WorkPlaceAddressInformation
                                                           on to_WorkPlaceAddressInformation.Parent_Id = Id;
        to_Department                                : Association to one ContactPersonDepartmentModel.Department
                                                           on to_Department.ContactPersonDepartment = Department;
        to_Function                                  : Association to one ContactPersonFunctionModel.Function
                                                           on to_Function.ContactPersonFunction = PartnerFunction;
        to_CurrentDefaultWorkPlaceAddressInformation : Association to one WorkPlaceAddressInformation
                                                           on  to_CurrentDefaultWorkPlaceAddressInformation.Parent_Id         =  Id
                                                           and to_CurrentDefaultWorkPlaceAddressInformation.IsDefaultAddress  =  true
                                                           and to_CurrentDefaultWorkPlaceAddressInformation.ValidityStartDate <= now(
                                                               )
                                                           and to_CurrentDefaultWorkPlaceAddressInformation.ValidityEndDate   >= now(
                                                               );
        to_Cwai                                      : Association to one WorkPlaceAddressInformation
                                                           on  to_Cwai.Parent_Id         =  Id
                                                           and to_Cwai.IsDefaultAddress  =  true
                                                           and to_Cwai.ValidityStartDate <= now(
                                                               )
                                                           and to_Cwai.ValidityEndDate   >= now(
                                                               );
    }

    @mdm.soap.path         : 'BusinessPartnerRelationship/ContactPerson/WorkplaceAddressInformation'
    @mdm.std.soap.cti.flag : ['BusinessPartnerRelationship/ContactPerson/workplaceAddressListCompleteTransmissionIndicator']
    entity WorkPlaceAddressInformation : tracked, validity {
            @Core.LongDescription           : 'System generated unique identifier for the entity.'
        key Id                     : UUID;

            @odata.foreignKey4              : 'Parent_Id'
            @Core.LongDescription           : 'System generated unique identifier for the parent entity.'
            Parent_Id              : UUID;

            @mdm.personal

            WorkplaceAddress_Id    : UUID;

            @mdm.personal
            @mdm.standard.field.soap.target : 'BusinessPartnerRelationship/ContactPerson/WorkplaceAddressInformation/AddressUUID'
            OrganizationAddress_Id : UUID;

            @mdm.personal
            @mdm.standard.field.soap.target : 'BusinessPartnerRelationship/ContactPerson/WorkplaceAddressInformation/DefaultIndicator'
            IsDefaultAddress       : Boolean;

            @mdm.parent
            to_Parent              : Association to one ContactPerson
                                         on to_Parent.Id = Parent_Id;
            @mdm.child
            @cascade                        : {![all] : true}
            to_WorkplaceAddress    : Association to one AddressModel.Address
                                         on to_WorkplaceAddress.Id = WorkplaceAddress_Id;
            @mdm.child
            @cascade                        : {![all] : true}
            to_OrganizationAddress : Association to one AddressModel.Address
                                         on to_OrganizationAddress.Id = OrganizationAddress_Id; // address of firstBusinessPartner
    }

    abstract entity managedObject {
        @Core.LongDescription : 'System generated unique identifier for the entity.'
        key Id    : UUID;
        @Core.LongDescription : 'System generated unique identifier for the parent entity.'
        @odata.foreignKey4    : 'Parent_Id'
        Parent_Id : UUID;
        @mdm.parent
        to_Parent : Association to BusinessPartnerRelationship
                        on to_Parent.Id = Parent_Id;
    }

    abstract entity tracked {
        @Core.LongDescription : 'User who created the object'
        @odata.on.insert      : #user
        CreatedByUser     : String(128);
        @Core.LongDescription : 'Date on which the object was created'
        @odata.on.insert      : #now
        CreationDate      : Timestamp;
        @Core.LongDescription : 'Last user to change object'
        @odata.on.update      : #user
        LastChangedByUser : String(128);
        @Core.LongDescription : 'Date when object was last changed'
        @odata.on.update      : #now
        LastChangeDate    : Timestamp;
    }

    abstract entity validity {
        @Core.LongDescription : 'Validity Start Date of the master data object'
        @odata.on.update      : #now
        @odata.on.insert      : #now
        @sap.display.format   : 'Date'
        ValidityStartDate : DateTime default timestamp'0001-01-01 00:00:00.0';
        @Core.LongDescription : 'Validity End Date of the master data object'
        @sap.display.format   : 'Date'
        ValidityEndDate   : DateTime default timestamp'9999-12-31 23:59:59.0';
    }

}
