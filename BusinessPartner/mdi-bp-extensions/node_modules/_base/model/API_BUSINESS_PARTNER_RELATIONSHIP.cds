using com.sap.mdm.bp.CommonTypes as CommonTypes from './CommonTypes';
using com.sap.mdm.bp.BusinessPartnerModel as BusinessPartnerModel from './BusinessPartner';
using com.sap.mdm.bp.AddressModel as AddressModel from './AddressModel';
using com.sap.mdm.bp.BusinessPartnerRelationshipModel as BusinessPartnerRelationshipModel from './BusinessPartnerRelationship';
using com.sap.mdm.bp.RoleModel as RoleModel from './RoleModel';
using com.sap.mdm.bp.TaxCategoryModel as TaxCategoryModel from './TaxCategoryModel';
using com.sap.mdm.bp.AcademicTitleModel as AcademicTitleModel from './AcademicTitleModel';
using com.sap.mdm.bp.AddressUsageModel as AddressUsageModel from './AddressUsageModel';
using com.sap.mdm.bp.BPRelationshipCategoryModel as BPRelationshipCategoryModel from './BPRelationshipCategoryModel';
using com.sap.mdm.bp.CompanyLegalFormModel as CompanyLegalFormModel from './CompanyLegalFormModel';
using com.sap.mdm.bp.CountryModel as CountryModel from './CountryModel';
using com.sap.mdm.bp.FormOfAddressModel as FormOfAddressModel from './FormOfAddressModel';
using com.sap.mdm.bp.IndustryClassificationSystemModel as IndustryClassificationSystemModel from './IndustryClassificationSystemModel';
using com.sap.mdm.bp.IndustrySectorModel as IndustrySectorModel from './IndustrySectorModel';
using com.sap.mdm.bp.NameSupplementModel as NameSupplementModel from './NameSupplementModel';
using com.sap.mdm.bp.PreferredCommMediumTypeModel as PreferredCommMediumTypeModel from './PreferredCommMediumTypeModel';
using com.sap.mdm.bp.RegionModel as RegionModel from './RegionModel';
using com.sap.mdm.bp.NamePrefixModel as NamePrefixModel from './NamePrefixModel';
using com.sap.mdm.bp.NameFormatModel as NameFormatModel from './NameFormatModel';
using com.sap.mdm.bp.GenericModel as GenericModel from './GenericModel';
using com.sap.mdm.bp.IdentificationTypeModel as IdentificationTypeModel from './IdentificationTypeModel';
using com.sap.mdm.bp.AuthorizationGroupModel as AuthorizationGroupModel from './AuthorizationGroupModel';
using com.sap.mdm.bp.ContactPersonDepartmentModel as ContactPersonDepartmentModel from './ContactPersonDepartmentModel';
using com.sap.mdm.bp.ContactPersonFunctionModel as ContactPersonFunctionModel from './ContactPersonFunctionModel';
using com.sap.mdm.bp.BusinessPartnerStatus as BusinessPartnerStatus from './BusinessPartnerStatus';
using cds.foundation.sap.countrysubdivision.C_Countries from '@sap/reusemodel-countrysubdivision/db/data-model';
using cds.foundation.sap.countrysubdivision.C_Subdivisions from '@sap/reusemodel-countrysubdivision/db/data-model';
using cds.foundation.sap.countrysubdivision.C_CountryTexts from '@sap/reusemodel-countrysubdivision/db/data-model';
using cds.foundation.sap.countrysubdivision.C_SubdivisionTexts from '@sap/reusemodel-countrysubdivision/db/data-model';
using cds.foundation.sap.language.C_Languages from '@sap/reusemodel-language/db/data-model';
using cds.foundation.sap.language.C_LanguageTexts from '@sap/reusemodel-language/db/data-model';
using cds.foundation.sap.language from '@sap/reusemodel-language/db/data-model';

@cds.query.limit : 25
service API_BUSINESS_PARTNER_RELATIONSHIP {
    // business partner


    @sap.searchable : 'true'
    @Capabilities   : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity ContactPerson                    as projection on BusinessPartnerRelationshipModel.ContactPerson {
        * , to_CurrentDefaultWorkPlaceAddressInformation : redirected to WorkPlaceAddressInformation
    } excluding {
        to_CurrentDefaultWorkPlaceAddressInformation
    };

    @sap.searchable : 'true'
    @Capabilities   : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity WorkPlaceAddressInformation      as projection on BusinessPartnerRelationshipModel.WorkPlaceAddressInformation {
        * , to_WorkplaceAddress : redirected to Address
    };


    @sap.searchable : 'true'
    @Capabilities   : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity BusinessPartner                  as projection on BusinessPartnerModel.BusinessPartner excluding {
        to_Customer,
        to_BusinessPartnerRetention,
        to_AddressIndependentCommunication
    } where IsBusinessPurposeCompleted != true;

    @sap.searchable : 'true'
    @Capabilities   : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity AddressInformation               as projection on BusinessPartnerModel.AddressInformation;

    @sap.searchable : 'true'
    @Capabilities   : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity AddressUsage                     as projection on BusinessPartnerModel.AddressUsage;

    @sap.searchable : 'true'
    @Capabilities   : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity PersonName                       as projection on BusinessPartnerModel.Person;

    @sap.searchable : 'true'
    @Capabilities   : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity OrganizationName                 as projection on BusinessPartnerModel.Organization;

    @sap.searchable : 'true'
    @Capabilities   : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity GroupName                        as projection on BusinessPartnerModel.BusinessPartnerGroup;

    @sap.searchable : 'true'
    @Capabilities   : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity Identification                   as projection on BusinessPartnerModel.Identification {
        * , to_CountryCode : redirected to CountryCode, to_RegionCode : redirected to Region
    } excluding {
        to_CountryCode,
        to_RegionCode
    };

    @sap.searchable : 'true'
    @Capabilities   : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity IndustrySector                   as projection on BusinessPartnerModel.IndustrySector;

    @sap.searchable : 'true'
    @Capabilities   : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity Role                             as projection on BusinessPartnerModel.Role;

    // address

    @sap.searchable : 'true'
    @Capabilities   : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity Address                          as projection on AddressModel.Address;
    // entity Address as projection on AddressModel.Address;

    //  entity Address as projection on AddressModel.Address {
    //    *
    //}excluding {
    //    defaultEmail,
    //    to_DefaultPerson,
    //   to_DefaultLandlinePhone,
    //  to_DefaultFax,
    //   to_DefaultMobilePhone,
    //    to_DefaultPostalAddress
    //   };

    @sap.searchable : 'true'
    @Capabilities   : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity PostalAddress                    as projection on AddressModel.PostalAddress;

    @sap.searchable : 'true'
    @Capabilities   : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity Fax                              as projection on AddressModel.Fax;

    @sap.searchable : 'true'
    @Capabilities   : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity Email                            as projection on AddressModel.Email;

    @sap.searchable : 'true'
    @Capabilities   : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity Phone                            as projection on AddressModel.Phone;

    @sap.searchable : 'true'
    @Capabilities   : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity Workplace                        as projection on AddressModel.Workplace;

    @sap.searchable : 'true'
    @Capabilities   : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity AddressPersonName                as projection on AddressModel.Person;

    @sap.searchable : 'true'
    @Capabilities   : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity AddressOrganizationName          as projection on AddressModel.Organization;

    // // business partner relationship
    // @sap.searchable: 'true'
    // @Capabilities: { Insertable:true, Updatable:true, Deletable:true, }
    // entity BusinessPartnerRelationship as projection on BusinessPartnerRelationshipModel.BusinessPartnerRelationship;

    // business partner relationship
    @sap.searchable : 'true'
    @Capabilities   : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    view BusinessPartnerRelationship as
        select from BusinessPartnerRelationshipModel.BusinessPartnerRelationship {
            *,
            to_FirstBusinessPartner  : redirected to BusinessPartner,
            to_SecondBusinessPartner : redirected to BusinessPartner
        }
        excluding {
            to_FirstBusinessPartner,
            to_SecondBusinessPartner
        }
        where
                IsDeleted                                           != true
            and to_FirstBusinessPartner.IsBusinessPurposeCompleted  != true
            and to_SecondBusinessPartner.IsBusinessPurposeCompleted != true;

    @sap.searchable : 'true'
    @Capabilities   : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity TaxNumber                        as projection on BusinessPartnerModel.TaxNumber;

    @sap.searchable : 'true'
    @Capabilities   : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity Web                              as projection on AddressModel.Web;


    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity RoleCode                         as projection on RoleModel.Role;

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity RoleText                         as projection on RoleModel.RoleText;

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity TaxCategoryCode                  as projection on TaxCategoryModel.TaxCategory;

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity TaxCategoryCodeText              as projection on TaxCategoryModel.TaxCategoryText;


    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity AcademicTitleCode                as projection on AcademicTitleModel.AcademicTitle;

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity AcademicTitleText                as projection on AcademicTitleModel.AcademicTitleText;

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity AddressUsageCode                 as projection on AddressUsageModel.AddressUsage;

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity AddressUsageText                 as projection on AddressUsageModel.AddressUsageText;

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity RelationshipCategoryCode         as projection on BPRelationshipCategoryModel.BPRelationshipCategory;

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity RelationshipCategoryText         as projection on BPRelationshipCategoryModel.BPRelationshipCategoryText;

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity CompanyLegalFormCode             as projection on CompanyLegalFormModel.CompanyLegalForm;

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity CompanyLegalFormText             as projection on CompanyLegalFormModel.CompanyLegalFormText;

    @Capabilities : {
        Insertable : false,
        Updatable  : false,
        Deletable  : false,
    }
    entity CountryCode                      as projection on C_Countries {
        * , subdivision : redirected to Region, text : redirected to CountryCodeText, localised : redirected to CountryCodeText
    } excluding {
        subdivision,
        text,
        localised
    };

    @Capabilities : {
        Insertable : false,
        Updatable  : false,
        Deletable  : false,
    }
    entity CountryCodeText                  as projection on C_CountryTexts;

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity FormOfAddressCode                as projection on FormOfAddressModel.FormOfAddress;

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity FormOfAddressText                as projection on FormOfAddressModel.FormOfAddressText;

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity IndustryClassificationSystemCode as projection on IndustryClassificationSystemModel.IndustryClassificationSystem;

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity IndustryClassificationSystemText as projection on IndustryClassificationSystemModel.IndustryClassificationSystemText;

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity IndustrySectorCode               as projection on IndustrySectorModel.IndustrySector;

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity IndustrySectorText               as projection on IndustrySectorModel.IndustrySectorText;

    @Capabilities : {
        Insertable : false,
        Updatable  : false,
        Deletable  : false,
    }
    entity LanguageCode                     as projection on C_Languages {
        * , text : redirected to LanguageCodeTexts, localised : redirected to LanguageCodeTexts
    } excluding {
        text,
        localised
    };

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity LanguageCodeTexts                as projection on C_LanguageTexts;

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity NameSupplementCode               as projection on NameSupplementModel.NameSupplement;

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity NameSupplementText               as projection on NameSupplementModel.NameSupplementText;

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity PreferredCommMediumTypeCode      as projection on PreferredCommMediumTypeModel.PreferredCommMediumType;

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity PreferredCommMediumTypeText      as projection on PreferredCommMediumTypeModel.PreferredCommMediumTypeText;

    @Capabilities : {
        Insertable : false,
        Updatable  : false,
        Deletable  : false,
    }
    entity Region                           as projection on C_Subdivisions {
        * , subdivisionText : redirected to RegionText, localisedSubdivision : redirected to RegionText
    } excluding {
        subdivisionText,
        localisedSubdivision
    };

    @Capabilities : {
        Insertable : false,
        Updatable  : false,
        Deletable  : false,
    }
    entity RegionText                       as projection on C_SubdivisionTexts;

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity GenericDomainCode                as projection on GenericModel.GenericDomainCodeList;

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity GenericDomainText                as projection on GenericModel.GenericDomainCodeListText;

    @Capabilities : {
        Insertable : false,
        Updatable  : false,
        Deletable  : false,
    }
    entity Status                           as projection on BusinessPartnerStatus.Status;

    @Capabilities : {
        Insertable : false,
        Updatable  : false,
        Deletable  : false,
    }
    entity StatusText                       as projection on BusinessPartnerStatus.StatusText;

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity NameFormatCode                   as projection on NameFormatModel.NameFormat;

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity NamePrefixCode                   as projection on NamePrefixModel.NamePrefix;

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity IdentificationTypeCode           as projection on IdentificationTypeModel.IdentificationType;

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity IdentificationTypeCodeText       as projection on IdentificationTypeModel.IdentificationTypeText;

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity AuthorizationGroupCode           as projection on AuthorizationGroupModel.AuthorizationGroup;

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity AuthorizationGroupCodeText       as projection on AuthorizationGroupModel.AuthorizationGroupText;

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity Department                       as projection on ContactPersonDepartmentModel.Department;

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity DepartmentText                   as projection on ContactPersonDepartmentModel.DepartmentText;

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity Function                         as projection on ContactPersonFunctionModel.Function;

    @Capabilities : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity FunctionText                     as projection on ContactPersonFunctionModel.FunctionText;

    @sap.searchable : 'true'
    @Capabilities   : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity Supplier                         as projection on BusinessPartnerModel.Supplier;

    @sap.searchable : 'true'
    @Capabilities   : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity SupplierCompany                  as projection on BusinessPartnerModel.SupplierCompany;

    @sap.searchable : 'true'
    @Capabilities   : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity SupplierPurchasingOrg            as projection on BusinessPartnerModel.SupplierPurchasingOrg;

    @sap.searchable : 'true'
    @Capabilities   : {
        Insertable : true,
        Updatable  : true,
        Deletable  : true,
    }
    entity BusinessPartnerWhldgTax          as projection on BusinessPartnerModel.BusinessPartnerWhldgTax;

    @sap.searchable : 'true'
    @Capabilities   : {
        Insertable : false,
        Updatable  : false,
        Deletable  : false,
    }
    entity SupplierPartnerFunction          as projection on BusinessPartnerModel.SupplierPartnerFunction;

    @sap.searchable : 'true'
    @Capabilities   : {
        Insertable : false,
        Updatable  : false,
        Deletable  : false,
    }
    entity BusinessPartnerBank              as projection on BusinessPartnerModel.BusinessPartnerBank;
};
