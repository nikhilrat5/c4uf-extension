namespace com.sap.mdm.bp;

using com.sap.mdm.bp.CommonTypes as CommonTypes from './CommonTypes';
using com.sap.mdm.bp.AddressModel as AddressModel from './AddressModel';
using com.sap.mdm.bp.BusinessPartnerRelationshipModel as BusinessPartnerRelationshipModel from './BusinessPartnerRelationship';
using com.sap.mdm.bp.RoleModel as RoleModel from './RoleModel';
using com.sap.mdm.bp.TaxCategoryModel as TaxCategoryModel from './TaxCategoryModel';
using com.sap.mdm.bp.AcademicTitleModel as AcademicTitleModel from './AcademicTitleModel';
using com.sap.mdm.bp.AddressUsageModel as AddressUsageModel from './AddressUsageModel';
using com.sap.mdm.bp.CompanyLegalFormModel as CompanyLegalFormModel from './CompanyLegalFormModel';
using com.sap.mdm.bp.CountryModel as CountryModel from './CountryModel';
using com.sap.mdm.bp.RegionModel as RegionModel from './RegionModel';
using com.sap.mdm.bp.FormOfAddressModel as FormOfAddressModel from './FormOfAddressModel';
using com.sap.mdm.bp.IndustryClassificationSystemModel as IndustryClassificationSystemModel from './IndustryClassificationSystemModel';
using com.sap.mdm.bp.IndustrySectorModel as IndustrySectorModel from './IndustrySectorModel';
using com.sap.mdm.bp.NameSupplementModel as NameSupplementModel from './NameSupplementModel';
using com.sap.mdm.bp.NamePrefixModel as NamePrefixModel from './NamePrefixModel';
using com.sap.mdm.bp.NameFormatModel as NameFormatModel from './NameFormatModel';
using com.sap.mdm.bp.GenericModel as GenericModel from './GenericModel';
using com.sap.mdm.bp.IdentificationTypeModel as IdentificationTypeModel from './IdentificationTypeModel';
using com.sap.mdm.bp.AuthorizationGroupModel as AuthorizationGroupModel from './AuthorizationGroupModel';
using com.sap.mdm.bp.BusinessPartnerStatus as BusinessPartnerStatus from './BusinessPartnerStatus';
using cds.foundation.sap.language.LanguageTwoLetterISOCode from '@sap/reusemodel-language/db/data-model';
using cds.foundation.sap.language.Languages from '@sap/reusemodel-language/db/data-model';
using cds.foundation.sap.countrysubdivision.C_Countries from '@sap/reusemodel-countrysubdivision/db/data-model';
using cds.foundation.sap.countrysubdivision.C_Subdivisions from '@sap/reusemodel-countrysubdivision/db/data-model';
using cds.foundation.sap.countrysubdivision.CountryTwoLetterISOCode from '@sap/reusemodel-countrysubdivision/db/data-model';
using cds.foundation.sap.countrysubdivision.CountrySubdivision from '@sap/reusemodel-countrysubdivision/db/data-model';

context BusinessPartnerModel {
  @mdm.extendable
  @mdm.soap.path : 'BusinessPartner/Common'
  entity BusinessPartner : tracked {
        @Core.LongDescription           : 'System generated unique identifier for the entity.'
        @mdm.semantic.key               : 'UUID'
    key Id                                 : UUID;

        @Core.LongDescription           : 'Key identifying a business partner in the SCP system. The key is unique within a client.'
        @mdm.personal
        @mdm.filterable
        BusinessPartner                    : CommonTypes.BusinessPartnerNumber;

        @Core.LongDescription           : 'Category under which a business partner is classified(Organization/Natural person/Group of natural persons or organizations).'
        @mdm.filterable
        @mdm.standard.field.soap.target : 'BusinessPartner/CategoryCode'
        Category                           : String(1);

        @mdm.standard.field.soap.target : 'BusinessPartner/Common/Person/Name/DeviatingFullName'
        FullName                           : CommonTypes.BusinessPartnerFullName;

        @Core.LongDescription           : 'You can use authorization groups to stipulate which business partners a user is allowed to process.'
        @mdm.filterable
        @mdm.standard.field.soap.target : 'BusinessPartner/Common/BusinessPartnerAuthorisationGroupCode'
        AuthorizationGroup                 : String(4);

        @Core.LongDescription           : 'Denotes the term that you define for a business partner, and via which you can restrict the search for a business partner in the business partner search or in the locator.'
        @mdm.personal
        @mdm.standard.field.soap.target : 'BusinessPartner/Common/KeyWordsText'
        SearchTerm1                        : String(20);

        @Core.LongDescription           : 'Denotes the term that you define for a business partner, and via which you can restrict the search for a business partner in the business partner search or in the locator.'
        @mdm.personal
        @mdm.standard.field.soap.target : 'BusinessPartner/Common/AdditionalKeyWordsText'
        SearchTerm2                        : String(20);

        @Core.LongDescription           : 'If the business partner is blocked centrally, certain activities cannot be executed.'
        @mdm.standard.field.soap.target : 'BusinessPartner/Common/BlockedIndicator'
        IsBlocked                          : Boolean default false; // not dpp related. this is some blocking of bp as a business process - may be like a bad customer

        @Core.LongDescription           : 'Indicates if the business partner is meant to be archived.'
        @mdm.standard.field.soap.target : 'BusinessPartner/Common/DeletedIndicator'
        IsMarkedForDeletion                : Boolean default false; // after retention period is over we should delete it physically. why is this needed?

        @Core.LongDescription           : 'Indicates if the business partner has been released for business processes.'
        @mdm.standard.field.soap.target : 'BusinessPartner/Common/ReleasedIndicator'
        IsReleased                         : Boolean default true;

        @Core.LongDescription           : 'The business purpose completed flag is set, if the EoP check for business partner master data finds, that the end of purpose for the master data used by consuming applications is reached.'
        IsBusinessPurposeCompleted         : Boolean default false; //  is actually blocked in terms of dpp(after leading system asks us to block & drm confirm or drm asks us to block)
        //and retention time is not yet completed.

        SourceSystem                       : String(4);
        //LeadingBusinessSystemId     : UUID;
        SourceSystemId                     : String(36);
        IsPublished                        : Boolean;

        @Core.LongDescription           : 'Language for verbal communication with a business partner.'
        @mdm.standard.field.soap.target : 'BusinessPartner/Common/VerbalCommunicationLanguageCode'
        Language                           : LanguageTwoLetterISOCode; // verbal language

        @Core.LongDescription           : 'Correspondence language (written) for business partners in the Person category'
        @mdm.standard.field.soap.target : 'BusinessPartner/Common/Person/NonVerbalCommunicationLanguageCode'
        CorrespondenceLanguage             : LanguageTwoLetterISOCode;

        @mdm.filterable
        Status                             : String(2);


        @Core.LongDescription           : 'Indicator through which a distinction between natural and legal persons can be made during tax reporting.'
        @mdm.standard.field.soap.target : 'BusinessPartner/Common/NaturalPersonIndicator'
        IsNaturalPerson                    : Boolean;


        @Core.LongDescription           : 'Classification assigned when creating a business partner.'
        @mdm.standard.field.soap.target : 'BusinessPartner/NumberRangeIntervalBusinessPartnerGroupCode'
        BusinessPartnerGrouping            : String(4);


        InstanceId                         : String(60); // host_serviceInstanceId

        KafkaOffset                        : Integer64;

        @mdm.standard.field.soap.target : 'BusinessPartner/Common/IAMID'
        IAMId                              : String(100);

        @Core.LongDescription           : 'Business Partner: Contact Permission'
        @mdm.standard.field.soap.target : 'BusinessPartner/Common/ContactAllowedCode'
        ContactPermission                  : String(1);


        @Core.LongDescription           : 'Business Partner Print Format'
        @mdm.standard.field.soap.target : 'BusinessPartner/Common/CorrespondenceBrailleRequiredIndicator'
        BusinessPartnerPrintFormat         : Boolean;

        @Core.LongDescription           : 'Business Partner Print Format'
        @mdm.standard.field.soap.target : 'BusinessPartner/Common/CorrespondenceLargePrintRequiredIndicator'
        BusinessPartnerPrintLargeFormat    : Boolean;

        @mdm.child
        to_Customer                        : Composition of many Customer
                                               on to_Customer.Parent_Id = Id;


        IsConsentGranted                   : Boolean;
        //IsConsolidated				: Boolean;

        @Core.LongDescription           : 'Version ID for Business Partner update.'
        //	@odata.etag
        VersionId                          : UUID;

        to_LanguageCode                    : Association to many Languages
                                               on to_LanguageCode.LanguageTwoLetterISOCode = CorrespondenceLanguage;

        to_AddressIndependentCommunication : Association to one AddressIndependentCommunication
                                               on  to_AddressIndependentCommunication.Parent_Id     = Id
                                               and to_AddressIndependentCommunication.IsIndependent = true;
        @mdm.child
        to_AddressInformation              : Composition of many AddressInformation
                                               on to_AddressInformation.Parent_Id = Id;
        //and to_AddressInformation.IsIndependent = false;

        @mdm.child
        to_Person                          : Composition of many Person
                                               on to_Person.Parent_Id = Id;

        @mdm.child
        to_Organization                    : Composition of many Organization
                                               on to_Organization.Parent_Id = Id;

        @mdm.child
        to_Group                           : Composition of many BusinessPartnerGroup
                                               on to_Group.Parent_Id = Id;

        @mdm.child
        to_Identification                  : Composition of many Identification
                                               on to_Identification.Parent_Id = Id;

        @mdm.child
        to_IndustrySector                  : Composition of many IndustrySector
                                               on to_IndustrySector.Parent_Id = Id;

        @mdm.child
        to_Role                            : Composition of many Role
                                               on to_Role.Parent_Id = Id;

        to_AddressUsage                    : Composition of many AddressUsage
                                               on to_AddressUsage.Root_Id = Id;
        //to_BankDetail                 : Composition of many BankDetail            on to_BankDetail.Parent_Id = Id;

        @mdm.child
        to_TaxNumber                       : Composition of many TaxNumber
                                               on to_TaxNumber.Parent_Id = Id;

        to_DefaultIndustrySector           : Association to one IndustrySector
                                               on  to_DefaultIndustrySector.Parent_Id         = Id
                                               and to_DefaultIndustrySector.IsDefaultIndustry = true;

        to_DefaultPerson                   : Association to one Person
                                               on  to_DefaultPerson.Parent_Id  = Id
                                               and to_DefaultPerson.ScriptCode = ' ';

        to_DefaultOrganization             : Association to one Organization
                                               on  to_DefaultOrganization.Parent_Id  = Id
                                               and to_DefaultOrganization.ScriptCode = ' ';

        to_DefaultGroup                    : Association to one BusinessPartnerGroup
                                               on  to_DefaultGroup.Parent_Id  = Id
                                               and to_DefaultGroup.ScriptCode = ' ';

        to_CurrentAddressInformation       : Association to many AddressInformation
                                               on  to_CurrentAddressInformation.Parent_Id         =  Id
                                               and to_CurrentAddressInformation.ValidityStartDate <= now(
                                                 )
                                               and to_CurrentAddressInformation.ValidityEndDate   >= now(
                                                 );

        to_CurrentDefaultAddressUsageCode  : Association to many AddressUsage
                                               on  to_CurrentDefaultAddressUsageCode.Root_Id           =  Id
                                               and to_CurrentDefaultAddressUsageCode.IsDefaultAddress  =  true
                                               and to_CurrentDefaultAddressUsageCode.ValidityStartDate <= now(
                                                 )
                                               and to_CurrentDefaultAddressUsageCode.ValidityEndDate   >= now(
                                                 );

        to_CurrentDefaultAddressUsage      : Association to many AddressUsage
                                               on  to_CurrentDefaultAddressUsage.Root_Id           =  Id
                                               and to_CurrentDefaultAddressUsage.AddressUsage      =  'XXDEFAULT'
                                               and to_CurrentDefaultAddressUsage.ValidityStartDate <= now(
                                                 )
                                               and to_CurrentDefaultAddressUsage.ValidityEndDate   >= now(
                                                 );

        // currentDefaultAddressInformation    : Composition of one AddressInformation on currentDefaultAddressInformation.Parent_Id = Id
        //                                                                            and currentDefaultAddressInformation.ValidityStartDate <= now()
        //                                                                          and currentDefaultAddressInformation.ValidityEndDate >= now();
        //                                      and currentDefaultAddressInformation.addressId = currentDefaultaddressUsage.addressId;

        @cds.java.expand                : {using : 'parent-keys'}
        to_BusinessPartnerRelationship     : Association to many BusinessPartnerRelationshipModel.BusinessPartnerRelationship
                                               on to_BusinessPartnerRelationship.FirstBusinessPartner_Id  = Id
                                               or to_BusinessPartnerRelationship.SecondBusinessPartner_Id = Id;

        to_HasContactPerson                : Association to many BusinessPartnerRelationshipModel.BusinessPartnerRelationship
                                               on  to_HasContactPerson.FirstBusinessPartner_Id = Id
                                               and to_HasContactPerson.RelationshipCategory    = 'BUR001';

        to_CurrentHasContactPerson         : Association to one BusinessPartnerRelationshipModel.BusinessPartnerRelationship
                                               on  to_CurrentHasContactPerson.FirstBusinessPartner_Id =  Id
                                               and to_CurrentHasContactPerson.RelationshipCategory    =  'BUR001'
                                               and to_CurrentHasContactPerson.ValidityStartDate       <= now(
                                                 )
                                               and to_CurrentHasContactPerson.ValidityEndDate         >= now(
                                                 );

        to_CurrentDefaultHasContactPerson  : Association to one BusinessPartnerRelationshipModel.BusinessPartnerRelationship
                                               on  to_CurrentDefaultHasContactPerson.FirstBusinessPartner_Id =  Id
                                               and to_CurrentDefaultHasContactPerson.RelationshipCategory    =  'BUR001'
                                               and to_CurrentDefaultHasContactPerson.ValidityStartDate       <= now(
                                                 )
                                               and to_CurrentDefaultHasContactPerson.ValidityEndDate         >= now(
                                                 )
                                               and to_CurrentDefaultHasContactPerson.IsDefault               =  true;

        //Code list association for category
        to_CategoryCode                    : Association to one GenericModel.GenericDomainCodeList
                                               on  to_CategoryCode.domainName = 'CATEGORY'
                                               and to_CategoryCode.codeValue  = Category;

        to_Status                          : Association to one BusinessPartnerStatus.Status
                                               on to_Status.code = Status;

        //Code list association for authorizationGroup
        to_AuthorizationGroup              : Association to one AuthorizationGroupModel.AuthorizationGroup
                                               on  to_AuthorizationGroup.authorizationGroup       = AuthorizationGroup
                                               and to_AuthorizationGroup.authorizationGroupObject = 'BUPA';

        to_BusinessPartnerRetention        : Composition of one BusinessPartnerRetention
                                               on to_BusinessPartnerRetention.Parent_Id = Id;

        @mdm.child
        to_Supplier                        : Composition of many Supplier
                                               on to_Supplier.Parent_Id = Id;

        @mdm.child
        to_Bank                            : Composition of many BusinessPartnerBank
                                               on to_Bank.Parent_Id = Id;
        @mdm.child
        to_PaymentCard                     : Composition of many PaymentCard
                                               on to_PaymentCard.Parent_Id = Id;
  }

  // table BUT0CC,CCARD
  @mdm.std.soap.cti.flag : ['BusinessPartner/paymentCardDetailsCompleteTransmissionIndicator']
  @mdm.soap.path         : 'BusinessPartner/PaymentCardDetails'
  entity PaymentCard : managedObject, tracked {
    @mdm.sensitive
    @mdm.personal
    @Core.LongDescription           : 'Payment Card ID'
    @mdm.semantic.key               : 'ID'
    PaymentCardID     : String(6);

    @mdm.sensitive
    @mdm.personal
    @Core.LongDescription           : 'Payment card type'
    @mdm.standard.field.soap.target : 'BusinessPartner/PaymentCardDetails/PaymentCard/TypeCode'
    PaymentCardType   : String(4);

    @mdm.sensitive
    @mdm.personal
    @Core.LongDescription           : 'Payment Cards: Card Number'
    @mdm.standard.field.soap.target : 'BusinessPartner/PaymentCardDetails/PaymentCard/ID'
    PaymentCardNumber : String(25);

    @mdm.sensitive
    @mdm.personal
    @Core.LongDescription           : 'BP: Standard Payment Card'
    @mdm.standard.field.soap.target : 'BusinessPartner/PaymentCardDetails/DefaultIndicator'
    IsStandardCard    : Boolean default false;

    @mdm.sensitive
    @mdm.personal
    @Core.LongDescription           : 'Description of Credit Card Details'
    @mdm.standard.field.soap.target : 'BusinessPartner/PaymentCardDetails/PaymentCard/Description'
    CardDescription   : String(40);

    @mdm.sensitive
    @mdm.personal
    @Core.LongDescription           : 'Payment Cards: Name of Cardholder'
    @mdm.standard.field.soap.target : 'BusinessPartner/PaymentCardDetails/PaymentCard/HolderName'
    CardHolder        : String(40);

    @mdm.sensitive
    @mdm.personal
    @Core.LongDescription           : 'Payment cards: Issuing bank'
    @mdm.standard.field.soap.target : 'BusinessPartner/PaymentCardDetails/PaymentCard/IssuerName'
    CardIssuingBank   : String(40);

    @mdm.sensitive
    @mdm.personal
    @Core.LongDescription           : 'Payment cards: Card category'
    @mdm.standard.field.soap.target : 'BusinessPartner/PaymentCardDetails/PaymentCard/CategoryCode'
    CardCategory      : String(2);

    @mdm.sensitive
    @mdm.personal
    @Core.LongDescription           : 'Payment Cards: Reason for Payment Card Lock'
    @mdm.standard.field.soap.target : 'BusinessPartner/PaymentCardDetails/Block/BlockingReasonCode'
    PaymentCardLock   : String(2);

    @mdm.sensitive
    @mdm.personal
    @Core.LongDescription           : 'Payment Cards: Date of Issue'
    @mdm.standard.field.soap.target : 'BusinessPartner/PaymentCardDetails/PaymentCard/IssueDateTime'
    CardIssueDate     : DateTime default timestamp'0001-01-01 00:00:00.0';

    @Core.LongDescription           : 'Validity Start Date of PaymentCard object'
    @sap.display.format             : 'Date'
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/PaymentCardDetails/PaymentCard/ValidFromDate'
    ValidityStartDate : DateTime default timestamp'0001-01-01 00:00:00.0'; // default $now;

    @Core.LongDescription           : 'Validity End Date of PaymentCard object'
    @sap.display.format             : 'Date'
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/PaymentCardDetails/PaymentCard/ExpirationDate'
    ValidityEndDate   : DateTime default timestamp'9999-12-31 23:59:59.0';
  }

  // table BUT020
  @mdm.soap.path         : 'BusinessPartner/AddressInformation'
  @mdm.std.soap.cti.flag : ['BusinessPartner/addressInformationListCompleteTransmissionIndicator']
  entity AddressInformation : managedObject, tracked {
    @mdm.child
    to_AddressUsage   : Composition of many AddressUsage
                          on to_AddressUsage.Parent_Id = Id;

    @odata.foreignKey4              : 'Address_Id'
    @mdm.semantic.key               : 'UUID'
    Address_Id        : UUID;

    @cascade                        : {![all] : true}
    @mdm.child
    to_Address        : Association to one AddressModel.Address
                          on to_Address.Id = Address_Id;

    IsDeleted         : Boolean default false; // for delta handling, we have to send also the deleted record to backend system. this is used for that purpose.


    IsIndependent     : Boolean default false;

    @mdm.parent
    to_Parent         : Association to BusinessPartner
                          on to_Parent.Id = Parent_Id;

    @Core.LongDescription           : 'Validity Start Date of AddressInformation object'
    @sap.display.format             : 'Date'
    @mdm.personal
    @mdm.standard.field.soap.target : ['BusinessPartner/AddressInformation/ValidityPeriod/StartDate']
    ValidityStartDate : DateTime default timestamp'0001-01-01 00:00:00.0'; // default $now;

    @Core.LongDescription           : 'Validity End Date of AddressInformation object'
    @sap.display.format             : 'Date'
    @mdm.personal
    @mdm.standard.field.soap.target : ['BusinessPartner/AddressInformation/ValidityPeriod/EndDate']
    ValidityEndDate   : DateTime default timestamp'9999-12-31 23:59:59.0';

  };


  // table BUT021to_FS
  @jpa.entity.name       : 'BusinessPartnerAddressUsage'
  @mdm.soap.path         : 'BusinessPartner/AddressInformation/AddressUsage'
  @mdm.std.soap.cti.flag : ['BusinessPartner/AddressInformation/addressUsageListCompleteTransmissionIndicator']
  entity AddressUsage : managedObject, tracked {
    @Core.LongDescription           : 'Business partner attribute, which you can use to distinguish between various addresses by defining the address usage for communication with business partners.'
    @mdm.personal
    @mdm.semantic.key               : 'AddressUsageCode'
    AddressUsage        : CommonTypes.AddressUsageCode;

    @Core.LongDescription           : 'Establishes which is the standard address for an address usage.'
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/AddressInformation/AddressUsage/DefaultIndicator'
    IsDefaultAddress    : Boolean;

    to_Root             : Association to BusinessPartner
                            on to_Root.Id = Root_Id;
    @mdm.parent
    to_Parent           : Association to AddressInformation
                            on to_Parent.Id = Parent_Id;

    to_Address          : Association to AddressModel.Address
                            on to_Address.Id = Address_Id;

    to_AddressUsageCode : Association to one AddressUsageModel.AddressUsage
                            on to_AddressUsageCode.addressUsageCode = AddressUsage;

    @odata.foreignKey4              : 'Root_Id'
    Root_Id             : UUID;

    @mdm.standard.field.soap.target : 'BusinessPartner/AddressInformation/UUID'
    Address_Id          : UUID;

    @Core.LongDescription           : 'Validity Start Date of AddressUsage object'
    @sap.display.format             : 'Date'
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/AddressInformation/AddressUsage/ValidityPeriod/StartDate'
    ValidityStartDate   : DateTime default timestamp'0001-01-01 00:00:00.0'; // default $now;

    @Core.LongDescription           : 'Validity End Date of AddressUsage object'
    @sap.display.format             : 'Date'
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/AddressInformation/AddressUsage/ValidityPeriod/EndDate'
    ValidityEndDate     : DateTime default timestamp'9999-12-31 23:59:59.0';

  };


  //entity AddressIndependentCommunication as select from BusinessPartnerModel.AddressInformation as AI join AddressModel.Address as A on AI.Address_Id = A.Id{
  //*,
  //key A.Id as Id,
  //}
  //excluding{
  //Address_Id,
  //to_AddressUsage,
  //to_Address,
  //to_PostalAddress,
  //to_DefaultPostalAddress,
  //to_WorkplaceAddress,
  //to_DefaultWorkplaceAddress,
  //to_Person,
  //to_DefaultPerson,
  //to_Organization,
  //to_DefaultOrganization
  //} WHERE IsDeleted != true and AddressType = 'IND';
  entity AddressIndependentCommunication as
    select from BusinessPartnerModel.AddressInformation as AI
    join AddressModel.Address as A
      on AI.Address_Id = A.Id
    {
      key A.Id             as Id,
          Parent_Id,
          IsDeleted,
          IsIndependent,
          CreatedByUser,
          CreationDate,
          LastChangedByUser,
          LastChangeDate,
          ValidityStartDate,
          ValidityEndDate,
          AddressType,
          PrfrdCommMediumType, //check if this field need to be added for independent communication
          to_Fax           as to_AddressIndependentFax,
          to_Email         as to_AddressIndependentEmail,
          to_LandlinePhone as to_AddressIndependentLandlinePhone,
          to_MobilePhone   as to_AddressIndependentMobilePhone,
          to_Web           as to_AddressIndependentWeb
    };

  // table kna1
  @mdm.extendable
  @mdm.soap.path     : 'BusinessPartner/Customer'
  @mdm.soap.alt.path : ['BusinessPartner/MultipleAssignment/Customer']
  entity Customer : managedObject, tracked {
    @mdm.personal
    @Core.LongDescription           : 'Gives an alphanumeric key, which clearly identifies the customer or supplier in the SAP system.'
    @mdm.semantic.key               : 'InternalID'
    @mdm.filterable
    Customer                     : CommonTypes.BusinessPartnerNumber;

    @Core.LongDescription           : 'If the customer belongs to a group, you can enter a group key here. The group key is freely assignable.'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/CorporateGroupName',
      'BusinessPartner/MultipleAssignment/Customer/CorporateGroupName'
    ]
    CustomerCorporateGroup       : String(10);

    @Core.LongDescription           : 'The account group is a classifying feature within customer master records. It determines number range of the customer account number, whether the number is assigned by the user or by the system and the necessary or possible specifications in the master record.'
    @mdm.filterable
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/MaintenanceProfileCode',
      'BusinessPartner/MultipleAssignment/Customer/MaintenanceProfileCode'
    ]
    CustomerAccountGroup         : String(4);

    @Core.LongDescription           : 'Indicates that all data in this master record is to be deleted.'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/DeletedIndicator',
      'BusinessPartner/MultipleAssignment/Customer/DeletedIndicator'
    ]
    IsMarkedForDeletion          : Boolean;

    @Core.LongDescription           : 'Indicates if sales order processing is blocked for the customer in all sales areas (company-wide, for example).'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/SaleSalesAndDistributionBlocks/OrderBlockingReasonCode',
      'BusinessPartner/MultipleAssignment/Customer/SaleSalesAndDistributionBlocks/OrderBlockingReasonCode'
    ]
    OrderIsBlockedForCustomer    : String(2);


    @Core.LongDescription           : 'Indicates if the processing of billing documents is blocked for the customer in all sales areas (company-wide, for example).'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/SaleSalesAndDistributionBlocks/BillingBlockingReasonCode',
      'BusinessPartner/MultipleAssignment/Customer/SaleSalesAndDistributionBlocks/BillingBlockingReasonCode'
    ]
    BillingIsBlockedForCustomer  : String(2);

    @Core.LongDescription           : 'Specifies a classification of the customer (for example, classifies the customer as a bulk purchaser).'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/MarketingAttributes/CustomerGroupCode',
      'BusinessPartner/MultipleAssignment/Customer/MarketingAttributes/CustomerGroupCode'
    ]
    CustomerClassification       : String(2);

    @Core.LongDescription           : 'Indicates if delivery processing is blocked for the customer in all sales areas (company-wide, for example).'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/SaleSalesAndDistributionBlocks/DeliveryBlockingReasonCode',
      'BusinessPartner/MultipleAssignment/Customer/SaleSalesAndDistributionBlocks/DeliveryBlockingReasonCode'
    ]
    DeliveryIsBlockedForCustomer : String(2);

    @Core.LongDescription           : 'Specifies a regional division according to the market categories created by the A. C. Nielsen company.'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/MarketingAttributes/CustomerNielsenRegionCode',
      'BusinessPartner/MultipleAssignment/Customer/MarketingAttributes/CustomerNielsenRegionCode'
    ]
    NielsenRegion                : String(2);

    @Core.LongDescription           : 'Central sales block for customer'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/SaleSalesAndDistributionBlocks/SalesSupportBlockedIndicator',
      'BusinessPartner/MultipleAssignment/Customer/SaleSalesAndDistributionBlocks/SalesSupportBlockedIndicator'
    ]
    SalesBlockForCustomer        : Boolean;

    @Core.LongDescription           : 'Indicator to specify standard Customer'
    IsStandardCustomer           : Boolean;

    Address_Id                   : UUID;

    @Core.LongDescription           : 'Indicator to specify Express train station'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/ExpressTrainStationLocationName',
      'BusinessPartner/MultipleAssignment/Customer/ExpressTrainStationLocationName'
    ]
    ExpressTrainStationName      : String(25);

    @Core.LongDescription           : 'Indicator to specify Account number of the master record with the fiscal address'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/CustomerPartyWithFiscalAddressInternalID',
      'BusinessPartner/MultipleAssignment/Customer/CustomerPartyWithFiscalAddressInternalID'
    ]
    FiscalAddress                : String(10);

    @Core.LongDescription           : 'Indicator to specify Business Partner Subject to Equalization Tax?'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/EqualizationTaxRelevanceIndicator',
      'BusinessPartner/MultipleAssignment/Customer/EqualizationTaxRelevanceIndicator'
    ]
    BPIsEqualizationTaxSubject   : Boolean;

    @Core.LongDescription           : 'Indicator to specify Business Partner Liable for VAT'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/ValueAddedTaxRelevanceIndicator',
      'BusinessPartner/MultipleAssignment/Customer/ValueAddedTaxRelevanceIndicator'
    ]
    VATLiability                 : Boolean;

    @Core.LongDescription           : 'Indicator to specify Is an alternative payer allowed in document?'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/AlternativePayeeAllowedIndicator',
      'BusinessPartner/MultipleAssignment/Customer/AlternativePayeeAllowedIndicator'
    ]
    AlternativePayerIsAllowed    : Boolean;

    @Core.LongDescription           : 'Indicator to specify Year For Which Sales are Given'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/MarketingAttributes/AnnualSalesVolumeAmountReportedYear',
      'BusinessPartner/MultipleAssignment/Customer/MarketingAttributes/AnnualSalesVolumeAmountReportedYear'
    ]
    PlannedAnnualSalesYear       : String(4);

    @Core.LongDescription           : 'Indicator to specify Currency of sales figure'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/MarketingAttributes/AnnualSalesVolumeAmount/@currencyCode',
      'BusinessPartner/MultipleAssignment/Customer/MarketingAttributes/AnnualSalesVolumeAmount/@currencyCode'
    ]
    PlannedAnnualSalesCurrency   : String(5);

    @Core.LongDescription           : 'Indicator to specify Annual Sales'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/MarketingAttributes/AnnualSalesVolumeAmount',
      'BusinessPartner/MultipleAssignment/Customer/MarketingAttributes/AnnualSalesVolumeAmount'
    ]
    PlannedAnnualSalesAmount     : Decimal(15, 2);

    @Core.LongDescription           : 'Indicator to specify Data Medium Exchange'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/DataMediumExchangeReportCode',
      'BusinessPartner/MultipleAssignment/Customer/DataMediumExchangeReportCode'
    ]
    DataMediumExchangeIndicator  : String(1);

    @Core.LongDescription           : 'Indicator to specify Instruction key for data medium exchange'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/DataMediumExchangeInstructionCode',
      'BusinessPartner/MultipleAssignment/Customer/DataMediumExchangeInstructionCode'
    ]
    DataExchangeInstruction      : String(2);

    @Core.LongDescription           : 'Indicator to specify Customer condition group 1'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/PriceSpecifications/CustomerConditionGroupCode',
      'BusinessPartner/MultipleAssignment/Customer/PriceSpecifications/CustomerConditionGroupCode'
    ]
    CustomerConditionGroup1      : String(2);

    @Core.LongDescription           : 'Indicator to specify Customer condition group 2'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/PriceSpecifications/FirstAdditionalCustomerConditionGroupCode',
      'BusinessPartner/MultipleAssignment/Customer/PriceSpecifications/FirstAdditionalCustomerConditionGroupCode'
    ]
    CustomerConditionGroup2      : String(2);

    @Core.LongDescription           : 'Indicator to specify Customer condition group 3'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/PriceSpecifications/SecondAdditionalCustomerConditionGroupCode',
      'BusinessPartner/MultipleAssignment/Customer/PriceSpecifications/SecondAdditionalCustomerConditionGroupCode'
    ]
    CustomerConditionGroup3      : String(2);

    @Core.LongDescription           : 'Indicator to specify Customer condition group 4'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/PriceSpecifications/ThirdAdditionalCustomerConditionGroupCode',
      'BusinessPartner/MultipleAssignment/Customer/PriceSpecifications/ThirdAdditionalCustomerConditionGroupCode'
    ]
    CustomerConditionGroup4      : String(2);

    @Core.LongDescription           : 'Indicator to specify Customer condition group 5'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/PriceSpecifications/FourthAdditionalCustomerConditionGroupCode',
      'BusinessPartner/MultipleAssignment/Customer/PriceSpecifications/FourthAdditionalCustomerConditionGroupCode'
    ]
    CustomerConditionGroup5      : String(2);

    @Core.LongDescription           : 'Indicator to specify CFOP category of Customer'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/CFOPCategoryCode',
      'BusinessPartner/MultipleAssignment/Customer/CFOPCategoryCode'
    ]
    BR_PartnerCFOPCategory       : String(2);


    @Core.LongDescription           : 'International location number (part 1)'
    InternationalLocationNumber1 : String(7);

    @Core.LongDescription           : 'International location number (part 2)'
    InternationalLocationNumber2 : String(5);
    @Core.LongDescription           : 'International location number (part 3)'
    InternationalLocationNumber3 : String(1);

    @Core.LongDescription           : 'Central posting block'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/PostingBlockedIndicator',
      'BusinessPartner/MultipleAssignment/Customer/PostingBlockedIndicator'
    ]
    PostingIsBlocked             : Boolean;

    @Core.LongDescription           : 'Company ID of Trading Partner'
    @mdm.personal
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/TradingPartnerCompanyID',
      'BusinessPartner/MultipleAssignment/Customer/TradingPartnerCompanyID'
    ]
    CustomerTradingPartnerID     : String(6);

    @Core.LongDescription           : 'Industry Code 1'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/IndustrySector/IndustrialSectorCode',
      'BusinessPartner/MultipleAssignment/Customer/IndustrySector/IndustrialSectorCode'
    ]
    IndustryCode1                : String(10);

    @Core.LongDescription           : 'Industry Code 2'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/IndustrySector/FirstAdditionalIndustrialSectorCode',
      'BusinessPartner/MultipleAssignment/Customer/IndustrySector/FirstAdditionalIndustrialSectorCode'
    ]
    IndustryCode2                : String(10);

    @Core.LongDescription           : 'Industry Code 3'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/IndustrySector/SecondAdditionalIndustrialSectorCode',
      'BusinessPartner/MultipleAssignment/Customer/IndustrySector/SecondAdditionalIndustrialSectorCode'
    ]
    IndustryCode3                : String(10);

    @Core.LongDescription           : 'Industry Code 4'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/IndustrySector/ThirdAdditionalIndustrialSectorCode',
      'BusinessPartner/MultipleAssignment/Customer/IndustrySector/ThirdAdditionalIndustrialSectorCode'
    ]
    IndustryCode4                : String(10);

    @Core.LongDescription           : 'Industry Code 5'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/IndustrySector/FourthAdditionalIndustrialSectorCode',
      'BusinessPartner/MultipleAssignment/Customer/IndustrySector/FourthAdditionalIndustrialSectorCode'
    ]
    IndustryCode5                : String(10);

    @Core.LongDescription           : 'Fiscal Year Variant'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/MarketingAttributes/FiscalYearVariantCode',
      'BusinessPartner/MultipleAssignment/Customer/MarketingAttributes/FiscalYearVariantCode'
    ]
    FiscalYearVariant            : String(2);

    @Core.LongDescription           : 'Tax Type'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/TaxGroupCode',
      'BusinessPartner/MultipleAssignment/Customer/TaxGroupCode'
    ]
    AccountTaxType               : String(2);

    @Core.LongDescription           : 'Indicator to specify Customer Extension Code 1'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/CustomerExtensionCode',
      'BusinessPartner/MultipleAssignment/Customer/CustomerExtensionCode'
    ]
    CustomerExtensionCode01      : String(2);

    @Core.LongDescription           : 'Indicator to specify Customer Extension Code 2'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/FirstAdditionalCustomerExtensionCode',
      'BusinessPartner/MultipleAssignment/Customer/FirstAdditionalCustomerExtensionCode'
    ]
    CustomerExtensionCode02      : String(2);

    @Core.LongDescription           : 'Indicator to specify Customer Extension Code 3'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/SecondAdditionalCustomerExtensionCode',
      'BusinessPartner/MultipleAssignment/Customer/SecondAdditionalCustomerExtensionCode'
    ]
    CustomerExtensionCode03      : String(2);

    @Core.LongDescription           : 'Indicator to specify Customer Extension Code 4'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/ThirdAdditionalCustomerExtensionCode',
      'BusinessPartner/MultipleAssignment/Customer/ThirdAdditionalCustomerExtensionCode'
    ]
    CustomerExtensionCode04      : String(2);

    @Core.LongDescription           : 'Indicator to specify Customer Extension Code 5'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/FourthAdditionalCustomerExtensionCode',
      'BusinessPartner/MultipleAssignment/Customer/FourthAdditionalCustomerExtensionCode'
    ]
    CustomerExtensionCode05      : String(2);

    @Core.LongDescription           : 'Indicator to specify Customer Extension Code 6'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/FifthAdditionalCustomerExtensionCode',
      'BusinessPartner/MultipleAssignment/Customer/FifthAdditionalCustomerExtensionCode'
    ]
    CustomerExtensionCode06      : String(3);

    @Core.LongDescription           : 'Indicator to specify Customer Extension Code 7'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/SixthAdditionalCustomerExtensionCode',
      'BusinessPartner/MultipleAssignment/Customer/SixthAdditionalCustomerExtensionCode'
    ]
    CustomerExtensionCode07      : String(3);

    @Core.LongDescription           : 'Indicator to specify Customer Extension Code 8'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/SeventhAdditionalCustomerExtensionCode',
      'BusinessPartner/MultipleAssignment/Customer/SeventhAdditionalCustomerExtensionCode'
    ]
    CustomerExtensionCode08      : String(3);

    @Core.LongDescription           : 'Indicator to specify Customer Extension Code 9'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/EighthAdditionalCustomerExtensionCode',
      'BusinessPartner/MultipleAssignment/Customer/EighthAdditionalCustomerExtensionCode'
    ]
    CustomerExtensionCode09      : String(3);

    @Core.LongDescription           : 'Indicator to specify Customer Extension Code 10'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/NinthAdditionalCustomerExtensionCode',
      'BusinessPartner/MultipleAssignment/Customer/NinthAdditionalCustomerExtensionCode'
    ]
    CustomerExtensionCode10      : String(3);

    @Core.LongDescription           : 'Indicator to specify Representative Name'
    @mdm.personal
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/RepresentativeName',
      'BusinessPartner/MultipleAssignment/Customer/RepresentativeName'
    ]
    RepresentativeName           : String(10);

    @Core.LongDescription           : 'Indicator to specify Business Type'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/BusinessTypeName',
      'BusinessPartner/MultipleAssignment/Customer/BusinessTypeName'
    ]
    BusinessType                 : String(30);

    @Core.LongDescription           : 'Indicator to specify Industry Type'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Customer/IndustryTypeName',
      'BusinessPartner/MultipleAssignment/Customer/IndustryTypeName'
    ]
    IndustryType                 : String(30);

    @mdm.parent
    to_Parent                    : Association to BusinessPartner
                                     on to_Parent.Id = Parent_Id;

    to_AddressInformation        : Association to one AddressInformation
                                     on  to_AddressInformation.Address_Id = Address_Id
                                     and to_AddressInformation.Parent_Id  = Parent_Id; //address assignment for customer from BP's addresses
    @cascade                        : {![all] : true}
    @mdm.child
    to_SalesArea                 : Association to many SalesArea
                                     on to_SalesArea.Parent_Id = Id;
    @cascade                        : {![all] : true}
    @mdm.child
    to_SalesTax                  : Association to many SalesTax
                                     on to_SalesTax.Customer_Id = Id;
  }

  // table knvv
  @mdm.extendable
  @mdm.soap.path         : 'BusinessPartner/Customer/SalesArrangement'
  @mdm.soap.alt.path     : ['BusinessPartner/MultipleAssignment/Customer/SalesArrangement']
  @mdm.std.soap.cti.flag : [
    'BusinessPartner/MultipleAssignment/Customer/salesArrangementListCompleteTransmissionIndicator',
    'BusinessPartner/Customer/salesArrangementListCompleteTransmissionIndicator'
  ]
  entity SalesArea : tracked {
        @Core.LongDescription           : 'System generated unique identifier for the entity.'
    key Id                           : UUID;
        @Core.LongDescription           : 'System generated unique identifier for the parent entity.'
        @odata.foreignKey4              : 'Parent_Id'
        Parent_Id                    : UUID;
        @mdm.parent
        to_Parent                    : Association to Customer
                                         on to_Parent.Id = Parent_Id;

        @Core.LongDescription           : 'An organizational unit responsible for the sale of certain products or services. The responsibility of a sales organization may include legal liability for products and customer claims.'
        @mdm.semantic.key               : 'SalesOrganisationID'
        @mdm.filterable
        SalesOrganization            : String(4);

        @Core.LongDescription           : 'The way in which products or services reach the customer. Typical examples of distribution channels are wholesale, retail, or direct sales.'
        @mdm.semantic.key               : 'DistributionChannelCode'
        @mdm.filterable
        DistributionChannel          : String(2);

        @Core.LongDescription           : 'A way of grouping materials, products, or services. The system uses divisions to determine the sales areas and the business areas for a material, product, or service.'
        @mdm.semantic.key               : 'DivisionCode'
        @mdm.filterable
        Division                     : String(2);

        @Core.LongDescription           : 'Indicates that all data in the master record will be deleted for the specified sales area. Before the deletion is made, the system checks for dependent data that would prevent the deletion.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Customer/SalesArrangement/DeletedIndicator',
          'BusinessPartner/MultipleAssignment/Customer/SalesArrangement/DeletedIndicator'
        ]
        IsMarkedForDeletion          : Boolean;

        @Core.LongDescription           : 'Indicates if further sales order processing is blocked for the customer. The block applies throughout the specified sales area.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Customer/SalesArrangement/OrderBlockingReasonCode',
          'BusinessPartner/MultipleAssignment/Customer/SalesArrangement/OrderBlockingReasonCode'
        ]
        OrderIsBlockedForCustomer    : String(2); // check name cds: OrderIsBlockedForCustomer

        @Core.LongDescription           : 'Indicates if further delivery processing is blocked for the customer. The block applies throughout the specified sales area.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Customer/SalesArrangement/DeliveryBlockingReasonCode',
          'BusinessPartner/MultipleAssignment/Customer/SalesArrangement/DeliveryBlockingReasonCode'
        ]
        DeliveryIsBlockedForCustomer : String(2); // check name cds: DeliveryIsBlockedForCustomer

        @Core.LongDescription           : 'Indicates if further billing activities are blocked for the customer. The block applies throughout the specified sales area.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Customer/SalesArrangement/BillingBlockingReasonCode',
          'BusinessPartner/MultipleAssignment/Customer/SalesArrangement/BillingBlockingReasonCode'
        ]
        BillingIsBlockedForCustomer  : String(2); // check name cds: BillingIsBlockedForCustomer

        @Core.LongDescription           : 'Indicates whether a sales order must be delivered completely in a single delivery or whether the order can be partially delivered and completed over a number of deliveries.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Customer/SalesArrangement/DeliveryTerms/SalesOrderCompleteDeliveryIndicator',
          'BusinessPartner/MultipleAssignment/Customer/SalesArrangement/DeliveryTerms/SalesOrderCompleteDeliveryIndicator'
        ]
        CompleteDeliveryIsDefined    : Boolean; // check name cds: CompleteDeliveryisDefined

        @Core.LongDescription           : 'Specifies whether the customer requires full or partial delivery for the item.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Customer/SalesArrangement/DeliveryTerms/PartialDeliveryControlCode',
          'BusinessPartner/MultipleAssignment/Customer/SalesArrangement/DeliveryTerms/PartialDeliveryControlCode'
        ]
        PartialDeliveryIsAllowed     : String(1); // check name cds: PartialDeliveryIsAllowed

        @Core.LongDescription           : 'Commonly used trading terms that comply with the standards established by the International Chamber of Commerce (ICC).'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Customer/SalesArrangement/DeliveryTerms/Incoterms/ClassificationCode',
          'BusinessPartner/MultipleAssignment/Customer/SalesArrangement/DeliveryTerms/Incoterms/ClassificationCode'
        ]
        IncotermsClassification      : String(3); // Incoterms (Part 1)


        @Core.LongDescription           : 'Additional information for the primary Incoterm.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Customer/SalesArrangement/DeliveryTerms/Incoterms/TransferLocationName',
          'BusinessPartner/MultipleAssignment/Customer/SalesArrangement/DeliveryTerms/Incoterms/TransferLocationName'
        ]
        IncotermsTransferLocation    : String(28); // Incoterms (Part 2)

        @Core.LongDescription           : 'Customers currency for a sales area. This currency will be used to settle the customers charges for the given sales organization.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Customer/SalesArrangement/CurrencyCode',
          'BusinessPartner/MultipleAssignment/Customer/SalesArrangement/CurrencyCode'
        ]
        Currency                     : String(5); // data type

        @Core.LongDescription           : 'Key for defining payment terms composed of cash discount percentages and payment periods.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Customer/SalesArrangement/CashDiscountTermsCode',
          'BusinessPartner/MultipleAssignment/Customer/SalesArrangement/CashDiscountTermsCode'
        ]
        PaymentTerms                 : String(4);

        @Core.LongDescription           : 'A grouping of customers who share the same pricing requirements.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Customer/SalesArrangement/PriceGroupCode',
          'BusinessPartner/MultipleAssignment/Customer/SalesArrangement/PriceGroupCode'
        ]
        CustomerPriceGroup           : String(2);

        @Core.LongDescription           : 'Identifies a particular group of customers (for example, wholesale or retail) for the purpose of pricing or generating statistics.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Customer/SalesArrangement/GroupCode',
          'BusinessPartner/MultipleAssignment/Customer/SalesArrangement/GroupCode'
        ]
        CustomerGroup                : String(2);

        @Core.LongDescription           : 'The delivery priority assigned to an item.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Customer/SalesArrangement/DeliveryTerms/DeliveryPriorityCode',
          'BusinessPartner/MultipleAssignment/Customer/SalesArrangement/DeliveryTerms/DeliveryPriorityCode'
        ]
        DeliveryPriority             : String(2);

        @Core.LongDescription           : 'A group of sales people who are responsible for processing sales of certain products or services.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Customer/SalesArrangement/SalesGroupCode',
          'BusinessPartner/MultipleAssignment/Customer/SalesArrangement/SalesGroupCode'
        ]
        SalesGroup                   : String(3);

        @Core.LongDescription           : 'A physical location (for example, a branch office) that has responsibility for the sale of certain products or services within a given geographical area.'
        @mdm.filterable
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Customer/SalesArrangement/SalesOfficeCode',
          'BusinessPartner/MultipleAssignment/Customer/SalesArrangement/SalesOfficeCode'
        ]
        SalesOffice                  : String(4);

        @Core.LongDescription           : 'Sales Block for Customer (Sales Area)'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Customer/SalesArrangement/SalesSupportBlockedIndicator',
          'BusinessPartner/MultipleAssignment/Customer/SalesArrangement/SalesSupportBlockedIndicator'
        ]
        SalesBlockForCustomer        : Boolean;

        @cascade                        : {![all] : true}
        @mdm.child
        to_CustomerPartnerFunction   : Association to many CustomerPartnerFunction
                                         on to_CustomerPartnerFunction.Parent_Id = Id;
  //@cascade: {"all":true}
  //@mdm.child
  //to_SalesTax             : Association to many SalesTax on to_SalesTax.Parent_Id = Id;
  }

  // table knvi
  @mdm.soap.path         : 'BusinessPartner/Customer/TaxClassification'
  @mdm.soap.alt.path     : ['BusinessPartner/MultipleAssignment/Customer/TaxClassification']
  @mdm.std.soap.cti.flag : [
    'BusinessPartner/Customer/taxClassificationListCompleteTransmissionIndicator',
    'BusinessPartner/MultipleAssignment/Customer/taxClassificationListCompleteTransmissionIndicator'
  ]
  entity SalesTax : tracked {
        @Core.LongDescription : 'System generated unique identifier for the entity.'
    key Id                : UUID;

        @Core.LongDescription : 'System generated unique identifier for the parent entity.'
        Parent_Id         : UUID;

        @Core.LongDescription : 'Identifies the country in which the delivery originates.'
        @mdm.semantic.key     : 'TaxCountryCode'
        Country           : CommonTypes.Country;

        @Core.LongDescription : 'Identifies the condition that the system uses to automatically determine country-specific taxes during pricing.'
        @mdm.semantic.key     : 'TaxTypeCode'
        TaxCategory       : String(4);

        @Core.LongDescription : 'Specifies the tax liability of the customer, based on the tax structure of the customers country.'
        @mdm.semantic.key     : 'TaxGroupCode'
        TaxClassification : String(1);

        @Core.LongDescription : 'System generated unique identifier for the Customer entity.'
        Customer_Id       : UUID;
        @mdm.parent
        to_Customer       : Association to Customer
                              on to_Customer.Id = Customer_Id;
  }

  // table knvp
  @mdm.soap.path     : 'BusinessPartner/Customer/SalesArrangement/PartnerFunctions'
  @mdm.soap.alt.path : ['BusinessPartner/MultipleAssignment/Customer/SalesArrangement/PartnerFunctions']
  entity CustomerPartnerFunction : tracked {
        @Core.LongDescription           : 'System generated unique identifier for the entity.'
    key Id                 : UUID;

        @Core.LongDescription           : 'System generated unique identifier for the parent entity.'
        @odata.foreignKey4              : 'Parent_Id'
        Parent_Id          : UUID;

        @mdm.parent
        to_Parent          : Association to SalesArea
                               on to_Parent.Id = Parent_Id;

        @Core.LongDescription           : 'The abbreviated form of the name that identifies the partner function.'
        @mdm.semantic.key               : 'PartyRoleCode'
        PartnerFunction    : String(2);

        @Core.LongDescription           : 'Specifies a partner as the default for a particular partner function.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Customer/SalesArrangement/PartnerFunctions/DefaultIndicator',
          'BusinessPartner/MultipleAssignment/Customer/SalesArrangement/PartnerFunctions/DefaultIndicator'
        ]
        DefaultPartner     : Boolean;
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Customer/SalesArrangement/PartnerFunctions/PartyInternalID',
          'BusinessPartner/MultipleAssignment/Customer/SalesArrangement/PartnerFunctions/PartyInternalID'
        ]
        @Core.LongDescription           : 'Identifier of the corresponding partner based on PartnerType'
        @mdm.semantic.key
        PartnerNumber      : CommonTypes.BusinessPartnerNumber;

        @Core.LongDescription           : 'Type of partner for Ex:Customer,Supplier or Personnel'
        PartnerType        : String(2);

        @Core.LongDescription           : 'Customer description of partner (plant, storage location)'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Customer/SalesArrangement/PartnerFunctions/PartnerDescription',
          'BusinessPartner/MultipleAssignment/Customer/SalesArrangement/PartnerFunctions/PartnerDescription'
        ]
        PartnerDescription : String(30);
  }

  @mdm.soap.path         : 'BusinessPartner/TaxNumber'
  @mdm.std.soap.cti.flag : ['BusinessPartner/taxNumberListCompleteTransmissionIndicator']
  entity TaxNumber : managedObject, tracked {
    @Core.LongDescription           : 'Specifies the tax number category.'
    @mdm.personal
    @mdm.semantic.key               : 'PartyRoleCode'
    TaxNumberCategory  : String(4);

    @Core.LongDescription           : 'Specifies the tax number.'
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/TaxNumber/PartyTaxID'
    TaxNumber          : String(60);

    to_TaxCategoryCode : Association to one TaxCategoryModel.TaxCategory
                           on to_TaxCategoryCode.taxNumberCategory = TaxNumberCategory;
    @mdm.parent
    to_Parent          : Association to BusinessPartner
                           on to_Parent.Id = Parent_Id;

  }

  @jpa.entity.name       : 'BusinessPartnerPerson'
  @mdm.soap.path         : 'BusinessPartner/Common/Person'
  @mdm.std.soap.cti.flag : ['BusinessPartner/commonListCompleteTransmissionIndicator']
  entity Person : managedObject, tracked {
    @mdm.personal
    ScriptCode                     : CommonTypes.ScriptCode; //GFN open
    // due to technical limitation, codes are saved redundant, but they are not script dependent

    @Core.LongDescription           : 'Key for form of address text.'
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Person/Name/FormOfAddressCode'
    FormOfAddress                  : CommonTypes.FormOfAddressKey; //AD_TITLE: Form of address key

    @Core.LongDescription           : 'Gender of the Business Partner'
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Person/GenderCode'
    Gender                         : String(1);

    @Core.LongDescription           : 'Nationality of Business Partner (Person).'
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Person/NationalityCountryCode'
    Nationality                    : CountryTwoLetterISOCode;

    @Core.LongDescription           : 'Key for academic title.'
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Person/Name/AcademicTitleCode'
    AcademicTitle                  : CommonTypes.AcademicTitleCode;

    @Core.LongDescription           : 'Second academic title (key)'
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Person/Name/AdditionalAcademicTitleCode'
    AdditionalAcademicTitle        : CommonTypes.AcademicTitleCode;

    @Core.LongDescription           : 'Key for name prefix.'
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Person/Name/NamePrefixCode'
    LastNamePrefix                 : String(4);

    @Core.LongDescription           : '2nd name prefix (key)'
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Person/Name/AdditionalNamePrefixCode'
    AdditionalNamePrefix           : String(4); //GFN open

    @Core.LongDescription           : 'Key for name prefix.'
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Person/Name/NameSupplementCode'
    NameSupplement                 : String(4);

    @Core.LongDescription           : 'The name format rule country and the name format rule key together uniquely identify a formatting rule.'
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Person/Name/NameFormatCountryCode'
    NameCountry                    : CountryTwoLetterISOCode;

    @Core.LongDescription           : 'The name format specifies the sequence in which name components are assembled to present the name of a person in a complete form.'
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Person/Name/NameFormatCode'
    NameFormat                     : CommonTypes.NameFormatCode;

    @Core.LongDescription           : 'First Name of Business Partner (Person)'
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Person/Name/GivenName'
    FirstName                      : CommonTypes.AddressName;

    @Core.LongDescription           : 'Middle name or second forename of a person'
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Person/Name/MiddleName'
    MiddleName                     : CommonTypes.AddressName;

    @Core.LongDescription           : 'Last Name of Business Partner (Person)'
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Person/Name/FamilyName'
    LastName                       : CommonTypes.AddressName;

    @Core.LongDescription           : 'Other Last Name of a Person'
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Person/Name/AdditionalFamilyName'
    AdditionalLastName             : CommonTypes.AddressName;

    @Core.LongDescription           : 'Name at birth of business partner'
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Person/Name/BirthName'
    BirthName                      : CommonTypes.AddressName;

    @Core.LongDescription           : 'Nickname of Business Partner (Person)'
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Person/Name/NickName'
    NickName                       : CommonTypes.AddressName;

    @Core.LongDescription           : '"Middle Initial" or personal initials'
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Person/Name/InitialsName'
    Initials                       : String(10);

    @Core.LongDescription           : 'Date of Birth of Business Partner'
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Person/BirthDate'
    BirthDate                      : Date;

    @Core.LongDescription           : 'Marital Status of Business Partner '
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Person/MaritalStatusCode'
    MaritalStatus                  : String(1);

    @Core.LongDescription           : 'Name of Employer of a Natural Person '
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Person/Employer'
    NaturalPersonEmployerName      : String(35);

    @Core.LongDescription           : 'Occupation/group '
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Person/OccupationCode'
    BusinessPartnerOccupationGroup : String(4);

    @Core.LongDescription           : 'Birthplace of business partner'
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Person/BirthPlaceName'
    BusinessPartnerBirthplaceName  : String(40);

    @Core.LongDescription           : 'Date of death of business partner'
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Person/DeathDate'
    BusinessPartnerDeathDate       : Date;

    @mdm.parent
    to_Parent                      : Association to BusinessPartner
                                       on to_Parent.Id = Parent_Id;

    to_AcademicTitleCode           : Association to one AcademicTitleModel.AcademicTitle
                                       on to_AcademicTitleCode.title = AcademicTitle;
    to_AdditionalAcademicTitleCode : Association to one AcademicTitleModel.AcademicTitle
                                       on to_AdditionalAcademicTitleCode.title = AdditionalAcademicTitle;
    to_NameFormatCountryCode       : Association to one C_Countries
                                       on to_NameFormatCountryCode.CountryTwoLetterISOCode = NameCountry;
    to_FormOfAddressCode           : Association to one FormOfAddressModel.FormOfAddress
                                       on to_FormOfAddressCode.title = FormOfAddress;
    to_NameSupplementCode          : Association to one NameSupplementModel.NameSupplement
                                       on to_NameSupplementCode.titleKey = NameSupplement;
    to_NamePrefixCode              : Association to one NamePrefixModel.NamePrefix
                                       on to_NamePrefixCode.prefixKey = LastNamePrefix;
    to_AdditionalNamePrefixCode    : Association to one NamePrefixModel.NamePrefix
                                       on to_AdditionalNamePrefixCode.prefixKey = AdditionalNamePrefix;
    to_NameFormatCode              : Association to one NameFormatModel.NameFormat
                                       on  to_NameFormatCode.countryKey = NameCountry
                                       and to_NameFormatCode.nameFormat = NameFormat;
    to_GenderCode                  : Association to one GenericModel.GenericDomainCodeList
                                       on  to_GenderCode.domainName = 'GENDER'
                                       and to_GenderCode.codeValue  = Gender;
    to_NationalityCode             : Association to one C_Countries
                                       on to_NationalityCode.CountryTwoLetterISOCode = Nationality;
  }

  @jpa.entity.name       : 'BusinessPartnerOrganization'
  @mdm.soap.path         : 'BusinessPartner/Common/Organisation'
  @mdm.std.soap.cti.flag : ['BusinessPartner/commonListCompleteTransmissionIndicator']
  entity Organization : managedObject, tracked {
    @Core.LongDescription           : 'This field represents combination of InternationLocationNumber1 , InternationLocationNumber2 , InternationLocationNumber3 '
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/LocationStandardID'
    GlobalLocationNumber    : String(13);

    ScriptCode              : CommonTypes.ScriptCode;
    // due to technical limitation, codes are saved redundant, but they are not script dependent

    @Core.LongDescription           : 'Key for form of address text.'
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Organisation/Name/FormOfAddressCode'
    FormOfAddress           : CommonTypes.FormOfAddressKey; //AD_TITLE: Form of address key

    @Core.LongDescription           : 'Denotes certain legal norms that are of significance for the organization of a company.'
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Organisation/CompanyLegalFormCode'
    LegalForm               : String(2);

    @Core.LongDescription           : 'Indicates the official registration of a company in the Commercial Register'
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Organisation/FoundationDate'
    FoundationDate          : Date;

    @Core.LongDescription           : 'Term for the end of bankruptcy proceedings.This date also indicates that the company no longer exists.'
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Organisation/LiquidationDate'
    LiquidationDate         : Date;

    @Core.LongDescription           : 'First name field for business partners in the Organization category.'
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Organisation/Name/FirstLineName'
    OrganizationName1       : CommonTypes.AddressName;

    @Core.LongDescription           : 'Second name field for business partners in the Organization category.'
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Organisation/Name/SecondLineName'
    OrganizationName2       : CommonTypes.AddressName;

    @Core.LongDescription           : 'Third name field for business partners in the Organization category.'
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Organisation/Name/ThirdLineName'
    OrganizationName3       : CommonTypes.AddressName;

    @Core.LongDescription           : 'Fourth name field for business partners in the Organization category.'
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Organisation/Name/FourthLineName'
    OrganizationName4       : CommonTypes.AddressName;

    @mdm.parent
    to_Parent               : Association to BusinessPartner
                                on to_Parent.Id = Parent_Id;

    to_CompanyLegalFormCode : Association to one CompanyLegalFormModel.CompanyLegalForm
                                on to_CompanyLegalFormCode.companyLegalFormCode = LegalForm;
    to_FormOfAddressCode    : Association to one FormOfAddressModel.FormOfAddress
                                on to_FormOfAddressCode.title = FormOfAddress;
  }

  @mdm.soap.path         : 'BusinessPartner/Common/Group'
  @mdm.std.soap.cti.flag : ['BusinessPartner/commonListCompleteTransmissionIndicator']
  entity BusinessPartnerGroup : managedObject, tracked {

    ScriptCode                : CommonTypes.ScriptCode;

    @Core.LongDescription           : 'Key for form of address text.'
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Group/FormOfAddressCode'
    FormOfAddress             : CommonTypes.FormOfAddressKey; //AD_TITLE: Form of address key

    @Core.LongDescription           : 'First name field for business partners in the Group category.'
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Group/Name'
    BusinessPartnerGroupName1 : CommonTypes.AddressName;

    @Core.LongDescription           : 'Second name field for business partners in the Group category.'
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Group/AdditionalName'
    BusinessPartnerGroupName2 : CommonTypes.AddressName;

    @Core.LongDescription           : 'Group Type'
    @mdm.standard.field.soap.target : 'BusinessPartner/Common/Group/PartnerGroupTypeCode'
    BusinessPartnerGroupType  : String(4);

    @mdm.parent
    to_Parent                 : Association to BusinessPartner
                                  on to_Parent.Id = Parent_Id;

  }

  @mdm.soap.path         : 'BusinessPartner/Identification'
  @mdm.std.soap.cti.flag : ['BusinessPartner/identificationListCompleteTransmissionIndicator']
  entity Identification : managedObject, tracked {

    @Core.LongDescription           : 'Number that serves to identify a business partner, such as drivers license, or ID card number'
    @mdm.sensitive
    @mdm.personal
    @mdm.semantic.key               : 'BusinessPartnerID'
    IdentificationNumber  : String(60);

    @Core.LongDescription           : 'A document (such as an ID card or drivers license) or an entry in a system of records (such as a commercial register) whose key can be stored as an attribute for a business partner.'
    @mdm.sensitive
    @mdm.personal
    @mdm.semantic.key               : 'PartyIdentifierTypeCode'
    IdentificationType    : String(6);

    @Core.LongDescription           : 'Date on which the ID number was registered or assigned by the appropriate authority'
    @mdm.sensitive
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/Identification/EntryDate'
    EntryDate             : Date;

    @Core.LongDescription           : 'Country in which an ID number was assigned, or in which the number is valid.'
    @mdm.sensitive
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/Identification/AreaOfValidityCountryCode'
    Country               : CountryTwoLetterISOCode;

    @Core.LongDescription           : 'Region in Which ID Number is Valid or Was Assigned'
    @mdm.sensitive
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/Identification/AreaOfValidityRegionCode'
    Region                : CountrySubdivision;

    @Core.LongDescription           : 'Institution that administers or assigns an ID number'
    @mdm.sensitive
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/Identification/IdentifierIssuingAgencyName'
    Institute             : String(40);

    @Core.LongDescription           : 'Validity Start Date of the master data object'
    @sap.display.format             : 'Date'
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/Identification/ValidityPeriod/StartDate'
    ValidityStartDate     : DateTime default timestamp'0001-01-01 00:00:00.0'; // default $now;

    @Core.LongDescription           : 'Validity End Date of the master data object'
    @sap.display.format             : 'Date'
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/Identification/ValidityPeriod/EndDate'
    ValidityEndDate       : DateTime default timestamp'9999-12-31 23:59:59.0';

    @mdm.parent
    to_Parent             : Association to BusinessPartner
                              on to_Parent.Id = Parent_Id;

    to_CountryCode        : Association to one C_Countries
                              on to_CountryCode.CountryTwoLetterISOCode = Country;
    //to_CountryCode : Association to one CountryModel.Country on to_CountryCode.code = Country;
    to_RegionCode         : Association to one C_Subdivisions
                              on  to_RegionCode.CountryTwoLetterISOCode = Country
                              and to_RegionCode.CountrySubdivision      = Region;
    to_IdentificationType : Association to one IdentificationTypeModel.IdentificationType
                              on to_IdentificationType.identificationType = IdentificationType;
  }

  @jpa.entity.name       : 'BusinessPartnerModelIndustrySector'
  @mdm.soap.path         : 'BusinessPartner/IndustrySector'
  @mdm.std.soap.cti.flag : ['BusinessPartner/industrySectorListCompleteTransmissionIndicator']
  entity IndustrySector : managedObject, tracked {

    @Core.LongDescription           : 'Describes an industry. An industry is a classification of companies according to their main business activity.'
    @mdm.semantic.key               : 'IndustrialSectorCode'
    IndustrySector                      : String(10);

    @Core.LongDescription           : 'Serves to combine and categorize several industries into a group.'
    @mdm.semantic.key               : 'IndustryClassificationSystemCode'
    IndustrySystemType                  : String(4);

    @Core.LongDescription           : 'Identifies the industry in an industry system that can be defined as the standard industry.'
    @mdm.standard.field.soap.target : 'BusinessPartner/IndustrySector/DefaultIndicator'
    IsDefaultIndustry                   : Boolean;

    @mdm.parent
    to_Parent                           : Association to BusinessPartner
                                            on to_Parent.Id = Parent_Id;

    to_IndustryClassificationSystemCode : Association to one IndustryClassificationSystemModel.IndustryClassificationSystem
                                            on to_IndustryClassificationSystemCode.industryClassificationSystemCode = IndustrySystemType;
    to_IndustrySectorCode               : Association to one IndustrySectorModel.IndustrySector
                                            on  to_IndustrySectorCode.industryClassificationSystemCode = IndustrySystemType
                                            and to_IndustrySectorCode.industrySectorCode               = IndustrySector;
  };

  @jpa.entity.name       : 'BusinessPartnerModelRole'
  @mdm.soap.path         : 'BusinessPartner/Role'
  @mdm.std.soap.cti.flag : ['BusinessPartner/roleListCompleteTransmissionIndicator']
  entity Role : managedObject, tracked {

    @Core.LongDescription           : 'Function that a business partner takes on, depending on a business transaction.'
    @mdm.personal
    @mdm.filterable
    @mdm.semantic.key               : 'RoleCode'
    Role              : CommonTypes.BusinessPartnerRole;

    @Core.LongDescription           : 'Validity Start Date of the master data object'
    @sap.display.format             : 'Date'
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/Role/ValidityPeriod/StartDate'
    ValidityStartDate : DateTime default timestamp'0001-01-01 00:00:00.0'; // default $now;

    @Core.LongDescription           : 'Validity End Date of the master data object'
    @sap.display.format             : 'Date'
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/Role/ValidityPeriod/EndDate'
    ValidityEndDate   : DateTime default timestamp'9999-12-31 23:59:59.0';

    @mdm.parent
    to_Parent         : Association to BusinessPartner
                          on to_Parent.Id = Parent_Id;

    to_RoleCode       : Association to one RoleModel.Role
                          on to_RoleCode.roleCode = Role;
  }

  abstract entity managedObject {
    @Core.LongDescription : 'System generated unique identifier for the entity.'
    key Id    : UUID;
    @Core.LongDescription : 'System generated unique identifier for the parent entity.'
    @odata.foreignKey4    : 'Parent_Id'
    @Core.Immutable
    Parent_Id : UUID;
    @mdm.parent
    to_Parent : Association to BusinessPartner
                  on to_Parent.Id = Parent_Id;
  }

  abstract entity tracked {
    @Core.LongDescription : 'User who created the object'
    @odata.on.insert      : #user
    CreatedByUser     : String(128);
    @Core.LongDescription : 'Date on which the object was created'
    @odata.on.insert      : #now
    CreationDate      : Timestamp;
    @Core.LongDescription : 'Last user to change object'
    @odata.on.update      : #user
    LastChangedByUser : String(128);
    @Core.LongDescription : 'Date when object was last changed'
    @odata.etag
    @odata.on.update      : #now
    LastChangeDate    : Timestamp;
  }

  // Validity periods shall not overlap (logical key)
  abstract entity validity {
    @Core.LongDescription : 'Validity Start Date of the master data object'
    @sap.display.format   : 'Date'
    @mdm.personal
    ValidityStartDate : DateTime default timestamp'0001-01-01 00:00:00.0'; // default $now;

    @Core.LongDescription : 'Validity End Date of the master data object'
    @sap.display.format   : 'Date'
    @mdm.personal
    ValidityEndDate   : DateTime default timestamp'9999-12-31 23:59:59.0';
  }

  //DRM
  entity BusinessPartnerRetention : managedObject, tracked {
    ApplicationGroup      : String(128);
    DeletionDate          : Timestamp;
    RetentionStartDate    : Timestamp;
    ConsumerPurposeStatus : String(1);
  }

  //Supplier Entities Start

  //table LFA1
  @mdm.extendable
  @mdm.soap.path     : 'BusinessPartner/Supplier'
  @mdm.soap.alt.path : ['BusinessPartner/MultipleAssignment/Supplier']
  entity Supplier : managedObject, tracked {

    @Core.LongDescription           : 'Gives an alphanumeric key, which clearly identifies the customer or supplier in the SAP system.'
    @mdm.personal
    @mdm.semantic.key               : 'InternalID'
    @mdm.filterable
    Supplier                    : CommonTypes.BusinessPartnerNumber;

    @Core.LongDescription           : 'Gives an alphanumeric key, which clearly identifies the customer or supplier in the SAP system.'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Supplier/RelatedCustomerInternalID',
      'BusinessPartner/MultipleAssignment/Supplier/RelatedCustomerInternalID'
    ]
    Customer                    : CommonTypes.BusinessPartnerNumber; //F4 help needed-> Customer-Customer

    @Core.LongDescription           : 'Classification of companies according to tax aspects.'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Supplier/TaxGroupCode',
      'BusinessPartner/MultipleAssignment/Supplier/TaxGroupCode'
    ]
    ResponsibleType             : String(2); //F4 help needed Tax Type->tax type

    @Core.LongDescription           : 'The account group is a classifying feature within supplier master records. It determines number range of the supplier account number, whether the number is assigned by the user or by the system and the necessary or possible specifications in the master record.'
    @mdm.filterable
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Supplier/MaintenanceProfileCode',
      'BusinessPartner/MultipleAssignment/Supplier/MaintenanceProfileCode'
    ]
    SupplierAccountGroup        : String(4); // F4 help needed CustomerAccountGroupModel --> customerAccountGroupCode/supplierAccountGroupCode

    @Core.LongDescription           : 'Indicates that all data in the master record will be deleted for the specified sales area. Before the deletion is made, the system checks for dependent data that would prevent the deletion.'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Supplier/DeletedIndicator',
      'BusinessPartner/MultipleAssignment/Supplier/DeletedIndicator'
    ]
    DeletionIndicator           : Boolean;

    @Core.LongDescription           : 'Indicates that the account is blocked for posting for all company codes.'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Supplier/PostingBlockedIndicator',
      'BusinessPartner/MultipleAssignment/Supplier/PostingBlockedIndicator'
    ]
    PostingIsBlocked            : Boolean;

    @Core.LongDescription           : 'Determines whether the company is liable to value-added tax (VAT).'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Supplier/ValueAddedTaxRelevanceIndicator',
      'BusinessPartner/MultipleAssignment/Supplier/ValueAddedTaxRelevanceIndicator'
    ]
    VATLiability                : Boolean;

    @Core.LongDescription           : 'Indicator to specify standard supplier'

    IsStandardSupplier          : Boolean;

    Address_Id                  : UUID;

    @Core.LongDescription           : 'The account number of the supplier with whom automatic payment transactions are carried out.'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Supplier/AlternativePayeePartyInternalID',
      'BusinessPartner/MultipleAssignment/Supplier/AlternativePayeePartyInternalID'
    ]
    AlternativePayee            : String(10); //F4 help needed -->Supplier- Supplier

    @Core.LongDescription           : 'Payment block'

    PaymentIsBlockedForSupplier : Boolean;

    @Core.LongDescription           : 'Indicates whether or not the supplier master record is blocked for all departments (that is, whether or not posting to this record is allowed at all).'
    @mdm.standard.field.soap.target : [
      'BusinessPartner/Supplier/PurchasingBlockedIndicator',
      'BusinessPartner/MultipleAssignment/Supplier/PurchasingBlockedIndicator'
    ]
    PurchasingIsBlocked         : Boolean;

    @mdm.parent
    to_Parent                   : Association to BusinessPartner
                                    on to_Parent.Id = Parent_Id;


    to_AddressInformation       : Association to one AddressInformation
                                    on  to_AddressInformation.Id        = Address_Id
                                    and to_AddressInformation.Parent_Id = Parent_Id; //address assignment for customer from BP's addresses
    @cascade                        : {![all] : true}
    @mdm.child
    to_CompanyCode              : Association to many SupplierCompany
                                    on to_CompanyCode.Parent_Id = Id;

    @cascade                        : {![all] : true}
    @mdm.child
    to_SupplierPurchasing       : Association to many SupplierPurchasingOrg
                                    on to_SupplierPurchasing.Parent_Id = Id;
  }


  //table LFB1
  @mdm.extendable
  @mdm.soap.path         : 'BusinessPartner/Supplier/AccountingInformation'
  @mdm.soap.alt.path     : ['BusinessPartner/MultipleAssignment/Supplier/AccountingInformation']
  @mdm.std.soap.cti.flag : [
    'BusinessPartner/Supplier/accountingInformationListCompleteTransmissionIndicator',
    'BusinessPartner/MultipleAssignment/Supplier/accountingInformationListCompleteTransmissionIndicator'
  ]
  entity SupplierCompany : tracked {

        @Core.LongDescription           : 'System generated unique identifier for the entity.'
    key Id                             : UUID;

        @Core.LongDescription           : 'System generated unique identifier for the parent entity.'
        @odata.foreignKey4              : 'Parent_Id'
        Parent_Id                      : UUID;

        @Core.LongDescription           : 'The company code is an organizational unit within financial accounting.'
        @mdm.semantic.key               : 'CompanyID'
        @mdm.filterable
        CompanyCode                    : String(4); //F4 Help needed -> CompanyCOdes -COde

        @Core.LongDescription           : 'The reconciliation account in G/L accounting is the account which is updated parallel to the subledger account for normal postings (for example, invoice or payment).'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/AccountingInformation/GeneralLedgerAccountReference/ID',
          'BusinessPartner/MultipleAssignment/Supplier/AccountingInformation/GeneralLedgerAccountReference/ID'
        ]
        ReconciliationAccount          : String(10); //F4 help needed -> Reconciliation-AccountNumber

        @Core.LongDescription           : 'Indicates the layout rule for the Allocation field in the document line item.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/AccountingInformation/SortCode',
          'BusinessPartner/MultipleAssignment/Supplier/AccountingInformation/SortCode'
        ]
        LayoutSortingRule              : String(3); // F4 help needed -> RulesFOrAllocation-SortKey

        @Core.LongDescription           : 'Minority Indicator'
        @mdm.personal
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/AccountingInformation/MinorityIndicatorsCode',
          'BusinessPartner/MultipleAssignment/Supplier/AccountingInformation/MinorityIndicatorsCode'
        ]
        MinorityGroup                  : String(3); //F4 help needed ->MinorityIndicators-MinorityIndicator

        @Core.LongDescription           : 'Indicates that the company code data in this master record is to be deleted.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/AccountingInformation/DeletedIndicator',
          'BusinessPartner/MultipleAssignment/Supplier/AccountingInformation/DeletedIndicator'
        ]
        DeletionIndicator              : Boolean;

        @Core.LongDescription           : 'Indicates that the account is blocked for posting in the specified company code.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/AccountingInformation/BlockedIndicator',
          'BusinessPartner/MultipleAssignment/Supplier/AccountingInformation/BlockedIndicator'
        ]
        SupplierIsBlockedForPosting    : Boolean;

        @Core.LongDescription           : 'Block key (enqueue key) that is used to block an open item or an account to payment transactions.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/AccountingInformation/PaymentBlockCode',
          'BusinessPartner/MultipleAssignment/Supplier/AccountingInformation/PaymentBlockCode'
        ]
        PaymentBlockingReason          : String(1); //F4 help needed ->BlockingReasons-BlockKey

        @Core.LongDescription           : 'Key for defining payment terms composed of cash discount percentages and payment periods.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/AccountingInformation/CashDiscountTermsCode',
          'BusinessPartner/MultipleAssignment/Supplier/AccountingInformation/CashDiscountTermsCode'
        ]
        PaymentTerms                   : String(4); //F4 may be needed, should come frm payment teams model??

        @Core.LongDescription           : 'When incoming invoices are entered or when memos are entered in Financial Accounting (FI), the system checks whether an invoice or credit memo has already been entered for the same date.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/AccountingInformation/DoubleEntriesCheckIndicator',
          'BusinessPartner/MultipleAssignment/Supplier/AccountingInformation/DoubleEntriesCheckIndicator'
        ]
        IsDoubleInvoice                : Boolean;

        @Core.LongDescription           : 'List of payment methods which may be used in automatic payment transactions with this customer/supplier if you do not specify a payment method in the item to be paid.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/AccountingInformation/PaymentMethodsCode',
          'BusinessPartner/MultipleAssignment/Supplier/AccountingInformation/PaymentMethodsCode'
        ]
        PaymentMethodsList             : String(10); //F4 help needed ->PaymentMethods-PaymentMethod

        @Core.LongDescription           : 'All bank data is determined using this key.'
        @mdm.personal
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/AccountingInformation/HouseBankInternalID',
          'BusinessPartner/MultipleAssignment/Supplier/AccountingInformation/HouseBankInternalID'
        ]
        HouseBank                      : String(5); //F4 help needed ->HouseBanks-HouseBankKey

        @Core.LongDescription           : 'In cash management, customers and suppliers are allocated to planning groups by means of an entry made in the master record.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/AccountingInformation/PlanningGroupCode',
          'BusinessPartner/MultipleAssignment/Supplier/AccountingInformation/PlanningGroupCode'
        ]
        CashPlanningGroup              : String(10); //f4 help needed -> PlanningGroups-PlanningGroup

        @Core.LongDescription           : 'The name of the accounting clerk defined by this identification code can be used in the payment program for correspondence and reporting (for example, open item lists).'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/AccountingInformation/AccountingClerkInitialsCode',
          'BusinessPartner/MultipleAssignment/Supplier/AccountingInformation/AccountingClerkInitialsCode'
        ]
        AccountingClerk                : String(2); //f4 help needed -> AccountingClerks-AccountingClerksAbrv

        @Core.LongDescription           : 'Internet address of partner company clerk.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/AccountingInformation/EmployeeResponsiblePartyWebAddress',
          'BusinessPartner/MultipleAssignment/Supplier/AccountingInformation/EmployeeResponsiblePartyWebAddress'
        ]
        AccountingClerkInternetAddress : String(130);

        @Core.LongDescription           : 'Accounting clerks telephone number at business partner'

        AccountingClerkPhoneNumber     : String(30);

        @Core.LongDescription           : 'The account number of the supplier with whom automatic payment transactions are to be carried out.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/AccountingInformation/AlternativePayeePartyInternalID',
          'BusinessPartner/MultipleAssignment/Supplier/AccountingInformation/AlternativePayeePartyInternalID'
        ]
        AlternativePayee               : String(10); //F4 help needed -->Supplier- Supplier

        @Core.LongDescription           : 'Freely definable group code for customers and vendors, or G/L accounts. Tolerance groups are unique within a company code.'

        APARToleranceGroup             : String(4);

        ClearCustomerSupplier          : Boolean;

        @cascade                        : {![all] : true}
        @mdm.child
        to_WithholdingTax              : Association to many BusinessPartnerWhldgTax
                                           on to_WithholdingTax.Parent_Id = Id;
        @mdm.parent
        to_Parent                      : Association to Supplier
                                           on to_Parent.Id = Parent_Id;

  }


  // table LFM1
  @mdm.extendable
  @mdm.soap.path         : 'BusinessPartner/Supplier/ProcurementArrangement'
  @mdm.soap.alt.path     : ['BusinessPartner/MultipleAssignment/Supplier/ProcurementArrangement']
  @mdm.std.soap.cti.flag : [
    'BusinessPartner/Supplier/procurementArrangementListCompleteTransmissionIndicator',
    'BusinessPartner/MultipleAssignment/Supplier/procurementArrangementListCompleteTransmissionIndicator'
  ]
  entity SupplierPurchasingOrg : tracked {

        @Core.LongDescription           : 'System generated unique identifier for the entity.'
    key Id                             : UUID;

        @Core.LongDescription           : 'System generated unique identifier for the parent entity.'
        @odata.foreignKey4              : 'Parent_Id'
        Parent_Id                      : UUID;

        @Core.LongDescription           : 'Denotes the purchasing organization.'
        @mdm.semantic.key               : 'PurchasingOrganisationID'
        @mdm.filterable
        PurchasingOrganization         : String(4); // F4 Help needed -> PurchasingOrganisations-PurchaseOrg

        @Core.LongDescription           : 'Key for the currency on which an order placed with a supplier is based.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/ProcurementArrangement/PurchasingTerms/PurchaseOrderCurrencyCode',
          'BusinessPartner/MultipleAssignment/Supplier/ProcurementArrangement/PurchasingTerms/PurchaseOrderCurrencyCode'
        ]
        PurchaseOrderCurrency          : String(3); //F4 help needed --> refer currency model

        @Core.LongDescription           : 'Key for defining payment terms composed of cash discount percentages and payment periods.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/ProcurementArrangement/PurchasingTerms/CashDiscountTermsCode',
          'BusinessPartner/MultipleAssignment/Supplier/ProcurementArrangement/PurchasingTerms/CashDiscountTermsCode'
        ]
        PaymentTerms                   : String(4); //F4 may be needed, should come frm payment teams model??

        @Core.LongDescription           : 'Commonly used trading terms that comply with the standards established by the International Chamber of Commerce (ICC).'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/ProcurementArrangement/PurchasingTerms/Incoterms/ClassificationCode',
          'BusinessPartner/MultipleAssignment/Supplier/ProcurementArrangement/PurchasingTerms/Incoterms/ClassificationCode'
        ]
        IncotermsClassification        : String(3); //F4 Help needed -> InCoTerms-IncoTerm

        @Core.LongDescription           : 'Additional information for the primary Incoterm.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/ProcurementArrangement/PurchasingTerms/Incoterms/TransferLocationName',
          'BusinessPartner/MultipleAssignment/Supplier/ProcurementArrangement/PurchasingTerms/Incoterms/TransferLocationName'
        ]
        IncotermsTransferLocation      : String(28);

        @Core.LongDescription           : 'Determines which calculation schema (pricing procedure) is to be used in purchasing documents containing this supplier number.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/ProcurementArrangement/PurchasingTerms/PriceSpecificationSupplierGroupCode',
          'BusinessPartner/MultipleAssignment/Supplier/ProcurementArrangement/PurchasingTerms/PriceSpecificationSupplierGroupCode'
        ]
        CalculationSchemaGroupCode     : String(2); //F4 help needed -> CalculationSchemaGroup-GroupCalculationSchema

        @Core.LongDescription           : 'Key for a buyer or a group of buyers, who is/are responsible for certain purchasing activities.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/ProcurementArrangement/PurchasingGroupID',
          'BusinessPartner/MultipleAssignment/Supplier/ProcurementArrangement/PurchasingGroupID'
        ]
        PurchasingGroup                : String(3); //F4 help needed ->PurchasingGroups-PurchasingGroup

        @Core.LongDescription           : 'Indicates whether or not the supplier master record is blocked for the purchasing organization for posting purposes.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/ProcurementArrangement/PurchasingTerms/PurchasingBlockedIndicator',
          'BusinessPartner/MultipleAssignment/Supplier/ProcurementArrangement/PurchasingTerms/PurchasingBlockedIndicator'
        ]
        PurchasingIsBlockedForSupplier : Boolean;

        @Core.LongDescription           : 'Indicates whether or not the supplier master record is marked for deletion.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/ProcurementArrangement/DeletedIndicator',
          'BusinessPartner/MultipleAssignment/Supplier/ProcurementArrangement/DeletedIndicator'
        ]
        DeletionIndicator              : Boolean;

        @Core.LongDescription           : 'Allows you to automatically generate purchase orders from purchase requisitions if the requisition has been assigned to a supplier (source of supply).'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/ProcurementArrangement/PurchasingTerms/AutomaticPurchaseOrderGenerationAllowedIndicator',
          'BusinessPartner/MultipleAssignment/Supplier/ProcurementArrangement/PurchasingTerms/AutomaticPurchaseOrderGenerationAllowedIndicator'
        ]
        PurOrdAutoGenerationIsAllowed  : Boolean;

        @Core.LongDescription           : 'Means of classifying suppliers according to their significance to your company.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/ProcurementArrangement/SupplierABCClassificationCode',
          'BusinessPartner/MultipleAssignment/Supplier/ProcurementArrangement/SupplierABCClassificationCode'
        ]
        SupplierABCClassificationCode  : String(1);

        @cascade                        : {![all] : true}
        @mdm.child
        to_SupplierPartnerFunction     : Association to many SupplierPartnerFunction
                                           on to_SupplierPartnerFunction.Parent_Id = Id;
        @mdm.parent
        to_Parent                      : Association to Supplier
                                           on to_Parent.Id = Parent_Id;
  }

  //table LFBW WithholdingTax
  @mdm.soap.path         : 'BusinessPartner/Supplier/AccountingInformation/WithholdingTax'
  @mdm.soap.alt.path     : ['BusinessPartner/MultipleAssignment/Supplier/AccountingInformation/WithholdingTax']
  @mdm.std.soap.cti.flag : [
    'BusinessPartner/Supplier/AccountingInformation/withholdingTaxListCompleteTransmissionIndicator',
    'BusinessPartner/MultipleAssignment/Supplier/AccountingInformation/withholdingTaxListCompleteTransmissionIndicator'
  ]
  entity BusinessPartnerWhldgTax : tracked {
        @Core.LongDescription           : 'System generated unique identifier for the entity.'
    key Id                         : UUID;

        @Core.LongDescription           : 'System generated unique identifier for the parent entity.'
        @odata.foreignKey4              : 'Parent_Id'
        Parent_Id                  : UUID;

        @Core.LongDescription           : 'This indicator is used to classify the different types of withholding tax.'
        @mdm.semantic.key               : 'WithholdingTaxTypeCode'
        WithholdingTaxType         : String(2); //F4 help needed --> WithholdingtaxTypes - indicator

        @Core.LongDescription           : 'One or more "withholding tax codes" are assigned to each withholding tax type. One of the things these codes determine is the various percentage rates for the withholding tax type.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/AccountingInformation/WithholdingTax/WithholdingTaxCode',
          'BusinessPartner/MultipleAssignment/Supplier/AccountingInformation/WithholdingTax/WithholdingTaxCode'
        ]
        WithholdingTaxCode         : String(2); //F4 Help needed -> WithholdingTaxCodeEnhanced->WithholdingTaxCode

        @Core.LongDescription           : 'This is a number issued by the tax authorities per withholding tax type.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/AccountingInformation/WithholdingTax/WithholdingTaxIdentificationNumber',
          'BusinessPartner/MultipleAssignment/Supplier/AccountingInformation/WithholdingTax/WithholdingTaxIdentificationNumber'
        ]
        WithholdingTaxNumber       : String(16);

        @Core.LongDescription           : 'Numbered assigned by the relevant authorities for exemption from withholding tax.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/AccountingInformation/WithholdingTax/WithholdingTaxExemptionCertificateID',
          'BusinessPartner/MultipleAssignment/Supplier/AccountingInformation/WithholdingTax/WithholdingTaxExemptionCertificateID',
        ]
        WithholdingTaxCertificate  : String(25);

        @Core.LongDescription           : 'Rate of exemption from withholding tax.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/AccountingInformation/WithholdingTax/WithholdingTaxExemptionRate',
          'BusinessPartner/MultipleAssignment/Supplier/AccountingInformation/WithholdingTax/WithholdingTaxExemptionRate'
        ]
        WithholdingTaxExmptPercent : Decimal(5, 2);

        @Core.LongDescription           : 'Indicator used to classify different types of exemption from liability to a particular withholding tax.These indicators can be defined per withholding tax type in the supplier master record.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/AccountingInformation/WithholdingTax/WithholdingTaxExemptionReasonCode',
          'BusinessPartner/MultipleAssignment/Supplier/AccountingInformation/WithholdingTax/WithholdingTaxExemptionReasonCode'
        ]
        ExemptionReason            : String(2); //F4 help needed -> ExemptionReasons-Reason

        @Core.LongDescription           : 'Date from which withholding tax exemption applies.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/AccountingInformation/WithholdingTax/WithholdingTaxExemptionValidityPeriod/StartDate',
          'BusinessPartner/MultipleAssignment/Supplier/AccountingInformation/WithholdingTax/WithholdingTaxExemptionValidityPeriod/StartDate'
        ]
        ExemptionDateBegin         : DateTime;

        @Core.LongDescription           : 'Date on which withholding tax exemption expires.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/AccountingInformation/WithholdingTax/WithholdingTaxExemptionValidityPeriod/EndDate',
          'BusinessPartner/MultipleAssignment/Supplier/AccountingInformation/WithholdingTax/WithholdingTaxExemptionValidityPeriod/EndDate'
        ]
        ExemptionDateEnd           : DateTime;

        @Core.LongDescription           : 'The type of recipient can be defined in the vendor master record.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/AccountingInformation/WithholdingTax/VendorRecipientTypeCode',
          'BusinessPartner/MultipleAssignment/Supplier/AccountingInformation/WithholdingTax/VendorRecipientTypeCode'
        ]
        RecipientType              : String(2); //F4 help needed --> RecipientTypes-type

        @mdm.parent
        to_Parent                  : Association to SupplierCompany
                                       on to_Parent.Id = Parent_Id;
  }

  @mdm.soap.path     : 'BusinessPartner/Supplier/ProcurementArrangement/PartnerFunctions'
  @mdm.soap.alt.path : ['BusinessPartner/MultipleAssignment/Supplier/ProcurementArrangement/PartnerFunctions']
  entity SupplierPartnerFunction : tracked {
        @Core.LongDescription           : 'System generated unique identifier for the entity.'
    key Id                 : UUID;
        @Core.LongDescription           : 'System generated unique identifier for the parent entity.'
        @odata.foreignKey4              : 'Parent_Id'
        Parent_Id          : UUID;

        @Core.LongDescription           : 'The abbreviated form of the name that identifies the partner function.'
        @mdm.semantic.key               : 'PartyRoleCode'
        PartnerFunction    : String(2);

        @Core.LongDescription           : 'Specifies a partner as the default for a particular partner function.'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/ProcurementArrangement/PartnerFunctions/DefaultIndicator',
          'BusinessPartner/MultipleAssignment/Supplier/ProcurementArrangement/PartnerFunctions/DefaultIndicator'
        ]
        DefaultPartner     : Boolean;

        @Core.LongDescription           : 'Identifier of the corresponding partner based on PartnerType'
        @mdm.semantic.key
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/ProcurementArrangement/PartnerFunctions/PartyInternalID',
          'BusinessPartner/MultipleAssignment/Supplier/ProcurementArrangement/PartnerFunctions/PartyInternalID'
        ]
        PartnerNumber      : CommonTypes.BusinessPartnerNumber;

        @Core.LongDescription           : 'Type of partner for Ex:Customer,Supplier or Personnel'
        PartnerType        : String(2);

        @Core.LongDescription           : 'Customer description of partner (plant, storage location)'
        @mdm.standard.field.soap.target : [
          'BusinessPartner/Supplier/ProcurementArrangement/PartnerFunctions/PartnerDescription',
          'BusinessPartner/MultipleAssignment/Supplier/ProcurementArrangement/PartnerFunctions/PartnerDescription'
        ]
        PartnerDescription : String(30);

        @mdm.parent
        to_Parent          : Association to SupplierPurchasingOrg
                               on to_Parent.Id = Parent_Id;
  }


  //Supplier Entities End


  //Bank Entities Start
  @mdm.soap.path         : 'BusinessPartner/BankDetails'
  @mdm.std.soap.cti.flag : ['BusinessPartner/bankDetailsListCompleteTransmissionIndicator']
  entity BusinessPartnerBank : managedObject, tracked {

    @Core.LongDescription           : 'Key identifying a business partners bank details.'
    @mdm.sensitive
    @mdm.personal
    @mdm.semantic.key               : 'ID'
    BankIdentification       : String(4);

    @Core.LongDescription           : 'This field contains the number under which the account is managed at the bank.'
    @mdm.sensitive
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/BankDetails/BankAccountID'
    BankAccount              : String(18);

    @Core.LongDescription           : 'Identifies the country in which the bank is based.'
    @mdm.sensitive
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/BankDetails/BankDirectoryReference/BankCountryCode'
    BankCountryKey           : String(3); //CountryTwoLetterISOCode;//

    @Core.LongDescription           : 'The bank key (under which the bank data is stored in the appropriate country) is specified in this field.The country-specific meaning of this bank key is specified when defining country key.'
    @mdm.sensitive
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/BankDetails/BankDirectoryReference/BankInternalID'
    BankNumber               : String(15);

    @Core.LongDescription           : 'The field contains a check key for the combination bank number and bank account number.'
    @mdm.sensitive
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/BankDetails/BankControlKey'
    BankControlKey           : String(2);

    @Core.LongDescription           : 'Name of Bank Account'
    @mdm.sensitive
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/BankDetails/Name'
    BankAccountName          : String(40);

    @Core.LongDescription           : 'Here you can enter another name that the payment program can use if the name of the account holder is not the same as the name of the Business Partner.'
    @mdm.sensitive
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/BankDetails/BankAccountHolderName'
    BankAccountHolderName    : String(60);

    @Core.LongDescription           : 'A uniform standardized ID number for representing bank details that is in accordance with the ECBS (European Committee for Banking Standards).'
    @mdm.sensitive
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/BankDetails/BankAccountStandardID'
    IBAN                     : String(34);

    @Core.LongDescription           : 'Validity start of IBAN'
    @mdm.sensitive
    @mdm.personal
    IBANValidityStartDate    : DateTime;

    @Core.LongDescription           : 'Validity Start of Business Partner Bank Details'
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/BankDetails/ValidityPeriod/StartDate'
    ValidityStartDate        : DateTime;

    @Core.LongDescription           : 'Validity End of Business Partner Bank Details'
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/BankDetails/ValidityPeriod/EndDate'
    ValidityEndDate          : DateTime;

    @Core.LongDescription           : 'Additional details for the bank details of the business partner.'
    @mdm.sensitive
    @mdm.personal
    @mdm.standard.field.soap.target : 'BusinessPartner/BankDetails/SpecificationsDescription'
    BankAccountReferenceText : String(20);

    to_CountryCode           : Association to one C_Countries
                                 on to_CountryCode.CountryTwoLetterISOCode = BankCountryKey;

    @mdm.parent
    to_Parent                : Association to BusinessPartner
                                 on to_Parent.Id = Parent_Id;

  }


  //Bank Entities End
  //entity for storing unique identification values
  entity UniqueIdentification {
    IdentificationNumber : String(60);
    IdentificationType   : String(6);
  }

}
