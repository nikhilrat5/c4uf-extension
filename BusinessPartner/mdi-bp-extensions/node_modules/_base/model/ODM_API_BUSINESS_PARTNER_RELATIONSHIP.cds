using com.sap.mdm.bp.BusinessPartnerRelationshipModel as BusinessPartnerRelationshipModel from './BusinessPartnerRelationship';
using com.sap.mdm.bp.BPRelationshipCategoryModel as BPRelationshipCategoryModel from './BPRelationshipCategoryModel';
using com.sap.mdm.bp.BusinessPartnerModel as BusinessPartnerModel from './BusinessPartner';
using com.sap.mdm.bp.AddressModel as AddressModel from './AddressModel';
using com.sap.mdm.bp.ContactPersonDepartmentModel as ContactPersonDepartmentModel from './ContactPersonDepartmentModel';


@cds.query.limit : 25
service ODM_API_BUSINESS_PARTNER_RELATIONSHIP {
    view BusinessPartnerRelationship as
        select from BusinessPartnerRelationshipModel.BusinessPartnerRelationship
        mixin {
            contactPersonInformation : Association to ContactInformation
                                           on contactPersonInformation.parent_id = Id;
            relationshipSource       : Association to one BusinessPartner
                                           on relationshipSource.id = FirstBusinessPartner_Id;
            relationshipTarget       : Association to one BusinessPartner
                                           on relationshipTarget.id = SecondBusinessPartner_Id;
        }
        into {
                @mdm.ignore
            key Id                   as id,
                FirstBusinessPartner_Id,
                relationshipSource,
                SecondBusinessPartner_Id,
                ValidityStartDate    as validFrom,
                ValidityEndDate      as validTo,
                IsDefault            as isDefaultTarget,
                @ODM.codelist
                RelationshipCategory as category,
                @ODM.codelist
                Status               as status,
                relationshipTarget,
                contactPersonInformation
        };


    view ContactInformation as
        select from BusinessPartnerRelationshipModel.ContactPerson
        mixin {
            address : Association to many ContactAddressData
                          on address.parent_id = Id;
        }
        into {
                @mdm.ignore
            key Id               as id,
                @mdm.ignore
                @mdm.parent.entity.column : 'Id'
                Parent_Id        as parent_id,
                @ODM.codelist
                VipPartner       as vipReasonCode,
                Note             as note,
                @ODM.codelist
                PartnerAuthority as powerOfAttorneyTypeCode,
                @ODM.codelist
                Department       as department,
                @ODM.codelist
                PartnerFunction  as functionalTitle,
                //CustomerContactPerson as customerContactPerson,
                //SupplierContactPerson as supplierContactPerson,
                address

        };

    view ContactAddressData as
        select from BusinessPartnerRelationshipModel.WorkPlaceAddressInformation
        mixin {
            owner               : Association to one ContactInformation
                                      on owner.address = $self;
            organizationAddress : Association to Address
                                      on organizationAddress.id = OrganizationAddress_Id;
            workplace           : Association to WorkPlaceAddress
                                      on workplace.id = OrganizationAddress_Id;
        }
        into {
                @mdm.odm.semantic.key
            key OrganizationAddress_Id             as id,
                @mdm.parent.entity.column : 'Id'
                @mdm.ignore
                Parent_Id                          as parent_id,
                @mdm.ignore
                WorkplaceAddress_Id                as workplaceAddress_Id,
                organizationAddress.emailAddresses as emailAddresses,
                organizationAddress.faxNumbers     as faxNumbers,
                organizationAddress.phoneNumbers   as phoneNumbers,
                organizationAddress.websites       as websites,
                workplace                          as workplace,
                IsDefaultAddress                   as isDefault
        };


    view WorkPlaceAddressRoot as
        select from AddressModel.Address
        mixin {

            workplace : Association to one WorkPlaceAddress
                            on workplace.parent_id = Id;
        }
        into {
                @mdm.ignore
            key Id        as id,
                workplace as workplace

        };


    view Address as
        select from AddressModel.Address
        mixin {
            // workplaceAddresses
            emailAddresses : Association to many Email
                                 on emailAddresses.parent_id = Id;
            phoneNumbers   : Association to many Phone
                                 on phoneNumbers.parent_id = Id;
            faxNumbers     : Association to many Fax
                                 on faxNumbers.parent_id = Id;
            websites       : Association to many Website
                                 on websites.parent_id = Id;
        //   workplaceAddress : Association to one WorkPlaceAddress
        //        on workplaceAddress.parent_id = Id;
        }
        into {
                @mdm.ignore
            key Id as id,
                emailAddresses,
                phoneNumbers,
                faxNumbers,
                websites,
        //  workplaceAddress as workplaceAddress

        };


    view Email as
        select from AddressModel.Email
        mixin {
            owner : Association to one Address
                        on owner.emailAddresses = $self;
        }
        into {
                @mdm.ignore
                @mdm.odm.semantic.key
            key Id                    as id,
                @mdm.ignore
                @mdm.parent.entity.column : 'Id'
            key Parent_Id             as parent_id,
                ValidityStartDate     as validFrom,
                ValidityEndDate       as validTo,
                IsDefaultEmailAddress as isDefault,
                EmailAddress          as address,
                @mdm.parent
                owner

        };

    view Phone as
        select from AddressModel.Phone
        mixin {
            owner : Association to one Address
                        on owner.phoneNumbers = $self;
        }
        into {
                @mdm.ignore
                @mdm.odm.semantic.key
            key Id                         as id,
                @mdm.ignore
                @mdm.parent.entity.column : 'Id'
            key Parent_Id                  as parent_id,
                ValidityStartDate          as validFrom,
                ValidityEndDate            as validTo,
                IsDefaultPhoneNumber       as isDefault,
                @ODM.codelist
                DestinationLocationCountry as country,
                Number                     as number,
                NumberExtension            as numberExtension,
                SMSEnabledIndicator        as smsEnabledIndicator,
                NumberType                 as isMobile,
                @mdm.parent
                owner
        };

    view Fax as
        select from AddressModel.Fax
        mixin {
            owner : Association to one Address
                        on owner.faxNumbers = $self;
        }
        into {
                @mdm.ignore
                @mdm.odm.semantic.key
            key Id                         as id,
                @mdm.ignore
                @mdm.parent.entity.column : 'Id'
            key Parent_Id                  as parent_id,
                ValidityStartDate          as validFrom,
                ValidityEndDate            as validTo,
                IsDefaultFaxNumber         as isDefault,
                @ODM.codelist
                DestinationLocationCountry as country,
                Number                     as number,
                NumberExtension            as numberExtension,
                @mdm.parent
                owner
        };

    view Website as
        select from AddressModel.Web
        mixin {
            owner : Association to one Address
                        on owner.websites = $self;
        }
        into {
                @mdm.ignore
                @mdm.odm.semantic.key
            key Id                as id,
                @mdm.ignore
                @mdm.parent.entity.column : 'Id'
            key Parent_Id         as parent_id,
                ValidityStartDate as validFrom,
                ValidityEndDate   as validTo,
                IsDefaultUri      as isDefault,
                Uri               as url,
                @mdm.parent
                owner

        };

    view WorkPlaceAddress as
        select from AddressModel.Workplace
        mixin {
            owner   : Association to one ContactAddressData
                          on owner.workplace = $self;
            details : Association to one WorkPlaceDetails
                          on details.id = Id;
        }
        into {
                @mdm.ignore
            key Id        as id,
                @mdm.ignore
                @mdm.parent.entity.column : 'Id'
            key Parent_Id as parent_id,
                details

        };

    view WorkPlaceDetails as
        select from AddressModel.Workplace
        mixin {
            owner          : Association to WorkPlaceAddress
                                 on owner.details = $self;
            scriptVariants : Association to many WorkPlaceScriptCode
                                 on  scriptVariants.id         = Id
                                 and scriptVariants.scriptCode = ScriptCode;
            postalAddress  : Association to PostalAddress
                                 on postalAddress.id = Parent_Id;

        }
        into {
                @mdm.ignore
            key Id                      as id,
                @mdm.ignore
                @mdm.parent.entity.column : 'Id'
            key Parent_Id               as parent_id,
                @mdm.ignore
                ScriptCode              as scriptCode,
                Building                as building,
                CorrespondenceShortName as correspondenceShortName,
                FunctionalTitleName     as functionalTitleName,
                DepartmentName          as departmentName,
                Floor                   as floor,
                Room                    as room,
                scriptVariants,
                postalAddress


        };

    view PostalAddress as
        select from AddressModel.Address
        mixin {
            owner : Association to WorkPlaceDetails
                        on owner.postalAddress = $self;
        }
        into {
                @mdm.ignore
            key Id as id

        };

    view WorkPlaceScriptCode as
        select from AddressModel.Workplace
        mixin {
            owner : Association to WorkPlaceDetails
                        on owner.scriptVariants = $self;
        }
        into {
                @mdm.ignore
            key Id                      as id,
                @mdm.ignore
                @mdm.parent.entity.column : 'Id'
            key Parent_Id               as parent_id,
                Building                as building,
                CorrespondenceShortName as correspondenceShortName,
                @mdm.odm.semantic.key
                @ODM.codelist
                ScriptCode              as scriptCode,
                FunctionalTitleName     as functionalTitleName,
                DepartmentName          as departmentName,
                Floor                   as floor,
                Room                    as room

        };


    view BusinessPartner as
        select from BusinessPartnerModel.BusinessPartner {
            key Id as id
        };


};
