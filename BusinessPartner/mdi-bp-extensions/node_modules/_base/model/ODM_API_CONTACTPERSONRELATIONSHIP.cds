using com.sap.mdm.bp.BusinessPartnerRelationshipModel as BusinessPartnerRelationshipModel from './BusinessPartnerRelationship';
using com.sap.mdm.bp.BPRelationshipCategoryModel as BPRelationshipCategoryModel from './BPRelationshipCategoryModel';
using com.sap.mdm.bp.BusinessPartnerModel as BusinessPartnerModel from './BusinessPartner';
using com.sap.mdm.bp.AddressModel as AddressModel from './AddressModel';

@cds.query.limit : 25
service ODM_API_CONTACTPERSONRELATIONSHIP {
    view ContactPersonRelationship as
        select from BusinessPartnerRelationshipModel.BusinessPartnerRelationship
        mixin {
            contactInformation : Association to ContactInformation
                                     on contactInformation.parent_id = Id;
            relationshipSource : Association to one BusinessPartner
                                     on relationshipSource.id = FirstBusinessPartner_Id;
            relationshipTarget : Association to one BusinessPartner
                                     on relationshipTarget.id = SecondBusinessPartner_Id;
        }
        into {
                @mdm.ignore
            key Id                as id,
                FirstBusinessPartner_Id,
                relationshipSource,
                SecondBusinessPartner_Id,
                ValidityStartDate as validFrom,
                ValidityEndDate   as validTo,
                IsDefault         as isDefaultTarget,
                CreationDate      as createdAt,
                LastChangeDate    as modifiedAt,
                @ODM.codelist
                Status            as status,
                relationshipTarget,
                contactInformation
        };

    view ContactPerson as
        select from BusinessPartnerModel.BusinessPartner {
            key Id as id

        };

    view ContactInformation as
        select from BusinessPartnerRelationshipModel.ContactPerson
        mixin {
            addressData : Association to many ContactAddressData
                              on addressData.parent_id = Id;
        }
        into {
                @mdm.ignore
            key Id                                                       as id,
                @mdm.ignore
                Parent_Id                                                as parent_id,
                addressData.workplaceAddress.details.functionalTitleName as functionalTitle,
                addressData.workplaceAddress.details.departmentName      as departmentName,
                addressData

        };

    view ContactAddressData as
        select from BusinessPartnerRelationshipModel.WorkPlaceAddressInformation
        mixin {
            owner   : Association to one ContactInformation
                          on owner.addressData = $self;
            address : Association to Address
                          on address.id = OrganizationAddress_Id;
        }
        into {
                @mdm.odm.semantic.key
            key OrganizationAddress_Id   as id,
                @mdm.ignore
                Parent_Id                as parent_id,
                @mdm.ignore
                WorkplaceAddress_Id      as workplaceAddress_Id,
                address.emailAddresses   as emailAddresses,
                address.faxNumbers       as faxNumbers,
                address.phoneNumbers     as phoneNumbers,
                address.websites         as websites,
                address.workplaceAddress as workplaceAddress
        };


    view Address as
        select from AddressModel.Address
        mixin {
            // workplaceAddresses
            emailAddresses   : Association to many Email
                                   on emailAddresses.parent_id = Id;
            phoneNumbers     : Association to many Phone
                                   on phoneNumbers.parent_id = Id;
            faxNumbers       : Association to many Fax
                                   on faxNumbers.parent_id = Id;
            websites         : Association to many Website
                                   on websites.parent_id = Id;
            workplaceAddress : Association to one WorkPlaceAddress
                                   on workplaceAddress.parent_id = Id;
        }
        into {
                @mdm.ignore
            key Id                  as id,
                @ODM.codelist
                AddressType         as postalAddressType,
                @ODM.codelist
                PrfrdCommMediumType as preferredCommunicationMethod,
                emailAddresses,
                phoneNumbers,
                faxNumbers,
                websites,
                workplaceAddress    as workplaceAddress

        };


    view Email as
        select from AddressModel.Email
        mixin {
            owner : Association to one Address
                        on owner.emailAddresses = $self;
        }
        into {
                @mdm.ignore
            key Id                    as id,
                @mdm.ignore
            key Parent_Id             as parent_id,
                ValidityStartDate     as validFrom,
                ValidityEndDate       as validTo,
                IsDefaultEmailAddress as isDefault,
                @mdm.odm.semantic.key
                EmailAddress          as address,
                @mdm.parent
                owner

        };

    view Phone as
        select from AddressModel.Phone
        mixin {
            owner : Association to one Address
                        on owner.phoneNumbers = $self;
        }
        into {
                @mdm.ignore
            key Id                         as id,
                @mdm.ignore
            key Parent_Id                  as parent_id,
                ValidityStartDate          as validFrom,
                ValidityEndDate            as validTo,
                IsDefaultPhoneNumber       as isDefault,
                @ODM.codelist
                DestinationLocationCountry as country,
                @mdm.odm.semantic.key
                Number                     as number,
                @mdm.odm.semantic.key
                NumberExtension            as numberExtension,
                SMSEnabledIndicator        as smsEnabledIndicator,
                NumberType                 as isMobile,
                @mdm.parent
                owner
        };

    view Fax as
        select from AddressModel.Fax
        mixin {
            owner : Association to one Address
                        on owner.faxNumbers = $self;
        }
        into {
                @mdm.ignore
            key Id                         as id,
                @mdm.ignore
            key Parent_Id                  as parent_id,
                ValidityStartDate          as validFrom,
                ValidityEndDate            as validTo,
                IsDefaultFaxNumber         as isDefault,
                @ODM.codelist
                DestinationLocationCountry as country,
                @mdm.odm.semantic.key
                Number                     as number,
                @mdm.odm.semantic.key
                NumberExtension            as numberExtension,
                @mdm.parent
                owner
        };

    view Website as
        select from AddressModel.Web
        mixin {
            owner : Association to one Address
                        on owner.websites = $self;
        }
        into {
                @mdm.ignore
            key Id                as id,
                @mdm.ignore
            key Parent_Id         as parent_id,
                ValidityStartDate as validFrom,
                ValidityEndDate   as validTo,
                IsDefaultUri      as isDefault,
                @mdm.odm.semantic.key
                Uri               as url,
                @mdm.parent
                owner

        };

    view WorkPlaceAddress as
        select from AddressModel.Workplace
        mixin {
            owner         : Association to one Address
                                on owner.workplaceAddress = $self;
            details       : Association to one WorkPlaceDetails
                                on details.id = Id;
            postalAddress : Association to one PostalAddressess
                                on postalAddress.id = Parent_Id;
        }
        into {
                @mdm.ignore
            key Id        as id,
                @mdm.ignore
            key Parent_Id as parent_id,
                details,
                postalAddress

        };

    view WorkPlaceDetails as
        select from AddressModel.Workplace
        mixin {
            owner          : Association to WorkPlaceAddress
                                 on owner.details = $self;
            scriptVariants : Association to many WorkPlaceScriptCode
                                 on  scriptVariants.id         = Id
                                 and scriptVariants.scriptCode = ScriptCode;
        }
        into {
                @mdm.ignore
            key Id                      as id,
                @mdm.ignore
            key Parent_Id               as parent_id,
                Building                as building,
                CorrespondenceShortName as correspondenceShortName,
                @mdm.ignore
                ScriptCode              as scriptCode,
                @mdm.ignore
                FunctionalTitleName     as functionalTitleName,
                @mdm.ignore
                DepartmentName          as departmentName,
                scriptVariants


        };

    view WorkPlaceScriptCode as
        select from AddressModel.Workplace
        mixin {
            owner : Association to WorkPlaceDetails
                        on owner.scriptVariants = $self;
        }
        into {
                @mdm.ignore
            key Id                      as id,
                @mdm.ignore
            key Parent_Id               as parent_id,
                Building                as building,
                CorrespondenceShortName as correspondenceShortName,
                @ODM.codelist
                ScriptCode              as scriptCode,
                @mdm.ignore
                FunctionalTitleName     as functionalTitleName,
                @mdm.ignore
                DepartmentName          as departmentName


        };


    view BusinessPartner as
        select from BusinessPartnerModel.BusinessPartner {
            key Id as id
        };


    view PostalAddressess as
        select from BusinessPartnerRelationshipModel.WorkPlaceAddressInformation
        mixin {
            // organization        : Association to one OrganizationDetails
        //                       on organization.parent_id = Id;
        }
        into {
                @mdm.odm.semantic.key
            key OrganizationAddress_Id as id,
        //organization


        };

    view AddressInformation as
        select from BusinessPartnerModel.AddressInformation {
            key Address_Id as address_Id


        };


    view OrganizationDetails as
        select from BusinessPartnerModel.Organization {
                @mdm.ignore
            key Id        as id,
                @mdm.ignore
                Parent_Id as parent_id

        };


};
